{"version":3,"file":"static/js/108.55fd7fde.chunk.js","mappings":"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","sources":["utils/periodCounter.ts","webpack://github_info/./src/components/Card/styles.module.css?1dfa","components/Card/Card.tsx","components/Card/fileText.ts","webpack://github_info/./src/ui/CloseButton/styles.module.css?1f8d","ui/CloseButton/CloseButton.tsx","utils/correctDateNumber.ts","utils/dateFormatter.ts"],"sourcesContent":["/**\n * Time counter - how old is one's account for current date\n * @param dataCreated tha date on creation one's account\n * @returns string\n */\n\nexport const periodCounter = (dataCreated: Date): string => {\n  const currentDayDuration = new Date().getTime();\n  const dataCreatedDuration = dataCreated.getTime();\n  const duration = currentDayDuration - dataCreatedDuration;\n\n  const years = Math.floor(duration / 1000 / 60 / 60 / 24 / 365.25);\n  const months = Math.floor(\n    (duration - years * 365.25 * 24 * 60 * 60 * 1000) /\n      1000 /\n      60 /\n      60 /\n      24 /\n      30,\n  );\n  const days = Math.floor(\n    (duration -\n      years * 365.25 * 24 * 60 * 60 * 1000 -\n      months * 30 * 24 * 60 * 60 * 1000) /\n      1000 /\n      60 /\n      60 /\n      24,\n  );\n\n  const yearsStr = years > 1 ? `${years} years` : `${years} year`;\n\n  let monthsStr = '';\n  if (months === 0) {\n    monthsStr = '';\n  } else if (months === 1) {\n    monthsStr = `${months} month`;\n  } else {\n    monthsStr = `${months} months`;\n  }\n\n  let daysStr = '';\n  if (days === 0) {\n    daysStr = 'ago';\n  } else if (days === 1) {\n    daysStr = `and ${days} day ago`;\n  } else {\n    daysStr = `and ${days} days ago`;\n  }\n\n  if (years >= 1) {\n    return `${yearsStr} ${monthsStr} ${daysStr}`;\n  }\n  if (months >= 1) {\n    return `${monthsStr} ${daysStr}`;\n  }\n  return `${daysStr}`;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"styles_card__q1XHp\",\"cardElement\":\"styles_cardElement__elbfR\",\"cardPhotoWrapper\":\"styles_cardPhotoWrapper__XJJ2J\",\"cardFollowersWrapper\":\"styles_cardFollowersWrapper__2K9Vl\",\"cardFollowersUnit\":\"styles_cardFollowersUnit__S+GVb\",\"cardSubElem\":\"styles_cardSubElem__ElnRT\",\"cardSubElemCreate\":\"styles_cardSubElemCreate__pRlwn\",\"cardLogin\":\"styles_cardLogin__o0yAQ\",\"cardUserInfo\":\"styles_cardUserInfo__zqfVi\",\"cardUserInfoWrapper\":\"styles_cardUserInfoWrapper__hmBA-\",\"cardUserInfoBtn\":\"styles_cardUserInfoBtn__FPyvJ\",\"closeBtnWrapper\":\"styles_closeBtnWrapper__zGdqX\",\"button\":\"styles_button__QlIOg\",\"star\":\"styles_star__tXtfa\",\"starActive\":\"styles_starActive__bWdPG\",\"downloadBtn\":\"styles_downloadBtn__qU1+N\",\"addNoteBtn\":\"styles_addNoteBtn__YFtKt\",\"buttonActive\":\"styles_buttonActive__GNvZn\",\"tooltip\":\"styles_tooltip__z9OEB\",\"arrow\":\"styles_arrow__Tmvtg\",\"line\":\"styles_line__BgkIO\",\"hide\":\"styles_hide__ecytM\",\"tooltipText\":\"styles_tooltipText__frtHj\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { fileText } from './fileText';\n\nimport { CloseButton } from 'ui/CloseButton';\nimport { Flex } from 'ui/Flex';\n\nimport { dateFormatter } from 'utils/dateFormatter';\nimport { periodCounter } from 'utils/periodCounter';\n\nimport {\n  favoriteListSelect,\n  isFavoriteUserSelect,\n  isNoteBtnSelect,\n  isNoteSelect,\n  noteSelect,\n} from 'selectors/favorite';\nimport { isLoadingSelect, userSelect } from 'selectors/search';\n\nimport {\n  fetchFavoriteList,\n  setFavoriteBtnFlag,\n  setFavoriteUser,\n  setNote,\n} from 'store/FavoriteReduser/favoriteReducer';\nimport { fetchUsersListSaga, reposListSaga } from 'store/SearchReducer/actions';\nimport { fetchLogin, setCard } from 'store/SearchReducer/searchReducer';\n\nimport styles from './styles.module.css';\n\nconst Card = () => {\n  const dispatch = useDispatch();\n\n  const favoriteList = useSelector(favoriteListSelect);\n  const note = useSelector(noteSelect);\n  const user = useSelector(userSelect);\n  const isNote = useSelector(isNoteSelect);\n  const isLoading = useSelector(isLoadingSelect);\n  const isNoteBtn = useSelector(isNoteBtnSelect);\n  const isFavoriteUser = useSelector(isFavoriteUserSelect);\n\n  const onClickCloseBtnHandler = () => {\n    dispatch(setCard(false));\n    dispatch(\n      fetchLogin({\n        name: '',\n        login: '',\n        followers_url: '',\n        following_url: '',\n        followers: 0,\n        following: 0,\n        created_at: new Date(),\n        avatar_url: '',\n        company: '',\n        email: '',\n        public_repos: 0,\n        repos_url: '',\n        location: '',\n        lastActivityDate: '',\n      }),\n    );\n\n    if (isNote) {\n      dispatch(setNote(false));\n    }\n  };\n\n  const onBtnClickHandler = (requestType: string) => {\n    dispatch(fetchUsersListSaga(requestType));\n  };\n\n  const onReposClickHandler = () => {\n    dispatch(reposListSaga());\n  };\n\n  const onClickAddBtnHandler = () => {\n    if (isFavoriteUser) {\n      const newFavoriteUsersList = favoriteList.filter(\n        (el) => el.name !== user.login,\n      );\n      dispatch(setFavoriteUser(false));\n      dispatch(fetchFavoriteList(newFavoriteUsersList));\n      localStorage.setItem('favorite', JSON.stringify(newFavoriteUsersList));\n    } else {\n      dispatch(setFavoriteUser(true));\n      const newfavoriteUser = { name: user.login };\n      dispatch(fetchFavoriteList([...favoriteList, newfavoriteUser]));\n      localStorage.setItem(\n        'favorite',\n        JSON.stringify([...favoriteList, newfavoriteUser]),\n      );\n      dispatch(setFavoriteBtnFlag(true));\n    }\n  };\n\n  const onDownloadHandler = () => {\n    let element = document.createElement('a');\n\n    const text = fileText(user, note);\n\n    element.setAttribute(\n      'href',\n      `data:text/plain;charset=utf-8,${encodeURIComponent(text)}`,\n    );\n    element.setAttribute('download', `${user.login}.doc`);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  };\n\n  const addNoteHandler = () => {\n    if (!isNote) {\n      dispatch(setNote(true));\n    }\n  };\n\n  return (\n    <div className={clsx(styles.card, isLoading && styles.hide)}>\n      <aside className={styles.cardElement}>\n        <div className={styles.cardPhotoWrapper}>\n          <img src={user.avatarUrl} alt=\"User's avatar\" />\n        </div>\n      </aside>\n\n      <Flex className={styles.cardElement}>\n        <header className={styles.cardSubElem}>\n          {user.name ? (\n            <a\n              href={`https://github.com/${user.login}`}\n              className={styles.cardLogin}\n            >\n              {user.name} &#40;{user.login}&#41;\n            </a>\n          ) : (\n            <a\n              href={`https://github.com/${user.login}`}\n              className={styles.cardLogin}\n            >\n              {user.login}\n            </a>\n          )}\n        </header>\n\n        {user.company && (\n          <div className={styles.cardSubElem}>\n            <span>Company:&nbsp;</span>\n            <div className={styles.cardUserInfo}>{user.company}</div>\n          </div>\n        )}\n\n        {user.location && (\n          <div className={styles.cardSubElem}>\n            <span>Location:&nbsp;</span>\n            <div className={styles.cardUserInfo}>{user.location}</div>\n          </div>\n        )}\n\n        {user.email && (\n          <div className={styles.cardSubElem}>\n            <span>Email:&nbsp;</span>\n            <a href={`mailto:${user.email}`} className={styles.cardUserInfo}>\n              {user.email}\n            </a>\n          </div>\n        )}\n\n        {user.reposNum ? (\n          <div className={styles.cardSubElem}>\n            <span>Public repositories:&nbsp;</span>\n            <button\n              type=\"button\"\n              className={clsx(styles.cardUserInfo, styles.cardUserInfoBtn)}\n              onClick={onReposClickHandler}\n            >\n              {user.reposNum}\n            </button>\n          </div>\n        ) : (\n          ''\n        )}\n\n        <div className={styles.cardFollowersWrapper}>\n          <div className={styles.cardFollowersUnit}>\n            <span>Followers:&nbsp;</span>\n            <button\n              type=\"button\"\n              className={clsx(styles.cardUserInfo, styles.cardUserInfoBtn)}\n              onClick={() => onBtnClickHandler('followers')}\n            >\n              {user.followersNum}\n            </button>\n          </div>\n\n          <div className={styles.cardFollowersUnit}>\n            <span>Following:&nbsp;</span>\n            <button\n              type=\"button\"\n              className={clsx(styles.cardUserInfo, styles.cardUserInfoBtn)}\n              onClick={() => onBtnClickHandler('following')}\n            >\n              {user.followingNum}\n            </button>\n          </div>\n        </div>\n\n        <div className={clsx(styles.cardSubElem, styles.cardSubElemCreate)}>\n          <span>Created&nbsp;at:&nbsp;</span>\n          <Flex className={styles.cardUserInfoWrapper}>\n            <div className={styles.cardUserInfo}>\n              {dateFormatter(user.dataCreated)}\n            </div>\n            <div className={styles.cardUserInfo}>\n              ({periodCounter(user.dataCreated)})\n            </div>\n          </Flex>\n        </div>\n\n        {user.lastActivityDate && (\n          <div className={styles.cardSubElem}>\n            <span>Last&nbsp;activity&nbsp;at:&nbsp;</span>\n            <div className={styles.cardUserInfo}>\n              {dateFormatter(new Date(user.lastActivityDate))}\n            </div>\n          </div>\n        )}\n      </Flex>\n      <div className={styles.closeBtnWrapper}>\n        <button\n          type=\"button\"\n          className={clsx(\n            isNoteBtn && styles.buttonActive,\n            styles.button,\n            styles.addNoteBtn,\n            styles.tooltip,\n          )}\n          onClick={addNoteHandler}\n        >\n          <span>&#9998;</span>\n          <div className={styles.tooltipText}>\n            {isNoteBtn ? 'Show note' : 'Add note'}\n          </div>\n        </button>\n\n        <button\n          type=\"button\"\n          className={clsx(styles.button, styles.downloadBtn, styles.tooltip)}\n          onClick={onDownloadHandler}\n        >\n          <span className={styles.arrow}>&#8595;</span>\n          <div className={styles.line} />\n          <div className={styles.tooltipText}>Download .doc file</div>\n        </button>\n\n        <button\n          type=\"button\"\n          className={clsx(styles.button, styles.tooltip)}\n          onClick={onClickAddBtnHandler}\n        >\n          <span\n            className={clsx(isFavoriteUser && styles.starActive, styles.star)}\n          >\n            &#9733;\n          </span>\n          <div className={styles.tooltipText}>\n            {isFavoriteUser ? 'Remove from favorites' : 'Add to favorites'}\n          </div>\n        </button>\n\n        <CloseButton onClick={onClickCloseBtnHandler} />\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","/* eslint-disable indent */\nimport { dateFormatter } from 'utils/dateFormatter';\nimport { periodCounter } from 'utils/periodCounter';\n\nimport type { IUser } from 'model/search/types';\n\nexport const fileText = (user: IUser, note: string) => {\n  const noneVar = '-';\n\n  return `\n    User information report for ${dateFormatter(new Date())}.\n\n\n    Login: ${user.login}, name: ${user.name || noneVar}\n    \n    Followers quantity: ${user.followersNum}. Following quantity: ${\n    user.followingNum\n  }\n\n    Location: ${user.location || noneVar}\n\n    Company: ${user.company || noneVar}\n\n    Email: ${user.email || noneVar}\n\n    Date of creation Github account: ${\n      dateFormatter(user.dataCreated) || noneVar\n    }\n    (${periodCounter(user.dataCreated)})\n\n    Date of last activity on Github: ${\n      (user.lastActivityDate &&\n        dateFormatter(new Date(user.lastActivityDate))) ||\n      noneVar\n    }\n\n    Public repositories quantity: ${user.reposNum || noneVar}\n\n\n    Links.\n    \n    User page: https://github.com/${user.login}\n\n    Repositories: ${user.reposUrl}\n\n    Avatar: ${user.avatarUrl}\n\n    Followers: ${user.followersUrl}\n\n    Following: ${user.followingUrl}\n\n    \n    Your notes:\n\n    \"${note}\"\n    `;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"closeBtn\":\"styles_closeBtn__rMvYi\",\"tooltipText\":\"styles_tooltipText__j5iU1\"};","import React from 'react';\n\nimport styles from './styles.module.css';\n\nexport const CloseButton = ({ onClick }: { onClick: () => void }) => {\n  return (\n    <button\n      className={styles.closeBtn}\n      type=\"button\"\n      aria-label=\"Close\"\n      onClick={onClick}\n    >\n      <div className={styles.tooltipText}>Close</div>\n    </button>\n  );\n};\n","/**\n * Format time od date number from '2' to '02'\n * @param num\n * @returns\n */\nexport const correctDateNumber = (num: number): string => {\n  return num < 10 ? `0${num}` : String(num);\n};\n","import { correctDateNumber } from './correctDateNumber';\n\n/**\n * Format dates to \"dd.mm.yyyy\"\n * @param dataCreated\n * @returns\n */\nexport const dateFormatter = (dataCreated: Date): string => {\n  const day = correctDateNumber(dataCreated.getUTCDate());\n  const month = correctDateNumber(dataCreated.getUTCMonth() + 1);\n  const year = dataCreated.getUTCFullYear();\n\n  return `${day}.${month}.${year}`;\n};\n"],"names":["periodCounter","dataCreated","duration","Date","getTime","years","Math","floor","months","days","yearsStr","concat","monthsStr","daysStr","dispatch","useDispatch","favoriteList","useSelector","favoriteListSelect","note","noteSelect","user","userSelect","isNote","isNoteSelect","isLoading","isLoadingSelect","isNoteBtn","isNoteBtnSelect","isFavoriteUser","isFavoriteUserSelect","onBtnClickHandler","requestType","fetchUsersListSaga","_jsxs","className","clsx","styles","children","_jsx","src","avatarUrl","alt","Flex","name","href","login","company","location","email","reposNum","type","onClick","reposListSaga","followersNum","followingNum","dateFormatter","lastActivityDate","setNote","element","document","createElement","text","noneVar","reposUrl","followersUrl","followingUrl","fileText","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","newFavoriteUsersList","filter","el","setFavoriteUser","fetchFavoriteList","localStorage","setItem","JSON","stringify","newfavoriteUser","_toConsumableArray","setFavoriteBtnFlag","CloseButton","setCard","fetchLogin","followers_url","following_url","followers","following","created_at","avatar_url","public_repos","repos_url","_ref","correctDateNumber","num","String","day","getUTCDate","month","getUTCMonth","year","getUTCFullYear"],"sourceRoot":""}