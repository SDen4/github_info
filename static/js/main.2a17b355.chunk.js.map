{"version":3,"sources":["store/SearchReducer/constants.ts","store/SearchReducer/SearchReducer.ts","store/RootReducer.ts","store/SearchReducer/actions.ts","api/API.ts","store/SearchReducer/sagas/SearchSaga.ts","store/RootSaga.ts","components/Card/Card.tsx","ui/SubmitButton/SubmitButton.tsx","components/SearchForm/SearchForm.tsx","view/Root/Root.tsx","App/App.tsx","index.tsx"],"names":["SEARCH_LOGIN_SAGA","FETCH_LOGIN","CARD_OPEN_FLAG","initialState","user","name","login","followersUrl","followingUrl","avatarUrl","followersNum","followingNum","cardOpened","RootReducer","combineReducers","search","state","action","type","followers_url","following_url","avatar_url","followers","following","cardOPenedFlag","API","axios","create","baseURL","sagaWorker","SearchSagaWatcher","getUserInfo","a","get","then","res","data","response","allData","put","console","log","takeEvery","rootSaga","all","fork","Card","dispatch","useDispatch","className","src","alt","href","onClick","SubmitButton","children","disabled","clsx","SearchForm","useState","searchLogin","setsearchLogin","disabledBtn","setDisabledBtn","ref","useRef","useEffect","current","focus","onSubmit","event","preventDefault","placeholder","value","onChange","textValue","target","trim","Root","storeData","useSelector","store","App","saga","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","RootSaga","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a17b355.chunk.js","sourcesContent":["export const SEARCH_LOGIN_SAGA = 'SEARCH_LOGIN_SAGA';\n\nexport const FETCH_LOGIN = 'FETCH_LOGIN';\n\nexport const CARD_OPEN_FLAG = 'CARD_OPEN_FLAG';\n","import { FETCH_LOGIN, CARD_OPEN_FLAG } from './constants';\n\nimport { InitialStateType } from './types';\n\nimport { ActionsType } from './actions';\n\nconst initialState: InitialStateType = {\n  user: {\n    name: '',\n    login: '',\n    followersUrl: '',\n    followingUrl: '',\n    avatarUrl: '',\n    followersNum: 0,\n    followingNum: 0,\n  },\n  cardOpened: false,\n};\n\nexport const SearchReducer = (\n  state = initialState,\n  action: ActionsType,\n): typeof state => {\n  switch (action.type) {\n    case FETCH_LOGIN:\n      return {\n        ...state,\n        user: {\n          name: action.name,\n          login: action.login,\n          followersUrl: action.followers_url,\n          followingUrl: action.following_url,\n          avatarUrl: action.avatar_url,\n          followersNum: action.followers,\n          followingNum: action.following,\n        },\n      };\n\n    case CARD_OPEN_FLAG:\n      return {\n        ...state,\n        cardOpened: action.cardOPenedFlag,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { SearchReducer } from './SearchReducer/SearchReducer';\n\nexport const RootReducer = combineReducers({\n  search: SearchReducer,\n});\n\nexport type AppStateType = ReturnType<typeof RootReducer>;\n","/* eslint-disable camelcase */\nimport { SEARCH_LOGIN_SAGA, FETCH_LOGIN, CARD_OPEN_FLAG } from './constants';\n\nexport const searchSaga = (login: string) => {\n  return {\n    type: SEARCH_LOGIN_SAGA,\n    login,\n  } as const;\n};\n\nexport const fetchLogin = (\n  name: string,\n  login: string,\n  followers_url: string,\n  following_url: string,\n  followers: number,\n  following: number,\n  avatar_url?: string,\n) => {\n  return {\n    type: FETCH_LOGIN,\n    name,\n    login,\n    followers_url,\n    following_url,\n    followers,\n    following,\n    avatar_url,\n  } as const;\n};\n\nexport const cardOPenedFlag = (cardOPenedFlag: boolean) => {\n  return {\n    type: CARD_OPEN_FLAG,\n    cardOPenedFlag,\n  } as const;\n};\n\ntype searchSagaType = ReturnType<typeof searchSaga>;\ntype fetchLoginType = ReturnType<typeof fetchLogin>;\ntype cardOPenedFlagType = ReturnType<typeof cardOPenedFlag>;\n\nexport type ActionsType = searchSagaType | fetchLoginType | cardOPenedFlagType;\n","import axios from 'axios';\n\nexport const API = axios.create({\n  baseURL: 'https://api.github.com/users/',\n});\n","import { takeEvery, put } from 'redux-saga/effects';\n\nimport { SEARCH_LOGIN_SAGA } from '../constants';\nimport { cardOPenedFlag, fetchLogin } from '../actions';\nimport { SearchSagaWorkerType, UserInnerType } from '../types';\n\nimport { API } from '../../../api/API';\n\nasync function getUserInfo(login: string) {\n  const response = await API.get(`${login}`).then((res) => res.data);\n  return response;\n}\n\nfunction* sagaWorker(action: SearchSagaWorkerType) {\n  try {\n    const allData: UserInnerType = yield getUserInfo(action.login);\n    // eslint-disable-next-line no-console\n    // console.log(allData);\n\n    yield put(\n      fetchLogin(\n        allData.name,\n        allData.login,\n        allData.followers_url,\n        allData.following_url,\n        allData.followers,\n        allData.following,\n        allData.avatar_url,\n      ),\n    );\n\n    yield put(cardOPenedFlag(true));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n  }\n}\n\nexport function* SearchSagaWatcher() {\n  yield takeEvery(SEARCH_LOGIN_SAGA, sagaWorker);\n}\n","import { fork, all } from 'redux-saga/effects';\nimport { SearchSagaWatcher } from './SearchReducer/sagas/SearchSaga';\n\nexport default function* rootSaga() {\n  yield all([fork(SearchSagaWatcher)]);\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { cardOPenedFlag } from '../../store/SearchReducer/actions';\n\nimport { CardType } from './types';\n\nimport './styles.css';\n\nconst Card: React.FC<CardType> = ({ user }) => {\n  const dispatch = useDispatch();\n\n  const onClickCloseBtnHandler = () => {\n    dispatch(cardOPenedFlag(false));\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card_element\">\n        <div className=\"card_photo_wrapper\">\n          <img src={user.avatarUrl} alt=\"User's avatar\" />\n        </div>\n      </div>\n\n      <div className=\"card_element\">\n        <h2>{user.name}</h2>\n        <h3>{user.login}</h3>\n        <div className=\"card_followers_wrapper\">\n          <div className=\"card_followers_unit\">\n            <span>Followers:</span>\n            <a href=\"?\">{user.followersNum}</a>\n          </div>\n\n          <div className=\"card_followers_unit\">\n            <span>Following:</span>\n            <a href=\"?\">{user.followingNum}</a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"card_close_btn_wrapper\">\n        <button\n          className=\"card_close_btn\"\n          type=\"button\"\n          aria-label=\"Close\"\n          onClick={onClickCloseBtnHandler}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport { IButton } from './types';\n\nimport './styles.css';\n\nconst SubmitButton: React.FC<IButton> = ({ children, disabled }) => {\n  return (\n    <button\n      className={clsx(disabled && 'button_unactive', 'button')}\n      type=\"submit\"\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default SubmitButton;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { searchSaga } from '../../store/SearchReducer/actions';\n\nimport SubmitButton from '../../ui/SubmitButton';\n\nimport './styles.css';\n\nconst SearchForm: React.FC = () => {\n  const [searchLogin, setsearchLogin] = useState<string>('');\n  const [disabledBtn, setDisabledBtn] = useState(true);\n  const dispatch = useDispatch();\n\n  // auto focus on input\n  const ref: any = useRef(null);\n  useEffect(() => {\n    ref.current.focus();\n  }, []);\n\n  const changeTextHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let textValue = event?.target.value;\n    setsearchLogin(textValue);\n\n    if (textValue.trim()) {\n      setDisabledBtn(false);\n    } else {\n      setDisabledBtn(true);\n    }\n  };\n\n  const onSubmitHandler = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    dispatch(searchSaga(searchLogin));\n    setsearchLogin('');\n    setDisabledBtn(true);\n  };\n\n  return (\n    <form className=\"form\" onSubmit={onSubmitHandler}>\n      <input\n        ref={ref}\n        className=\"input\"\n        type=\"text\"\n        placeholder=\"Enter the github login\"\n        value={searchLogin}\n        onChange={changeTextHandler}\n      />\n      <SubmitButton disabled={disabledBtn}>Search</SubmitButton>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Card from '../../components/Card';\nimport SearchForm from '../../components/SearchForm';\n\nimport { AppStateType } from '../../store/RootReducer';\n// import { SearchReducer } from '../../store/SearchReducer/SearchReducer';\n\nimport './styles.css';\n\nconst Root: React.FC = () => {\n  const storeData = useSelector<AppStateType, any>((store) => store.search);\n\n  return (\n    <div className=\"root_wrapper\">\n      <header className=\"root_header\">Find github&apos;s user</header>\n      <section className=\"root_section\">\n        <SearchForm />\n      </section>\n\n      <section className=\"root_section\">\n        {storeData.cardOpened && <Card user={storeData.user} />}\n      </section>\n    </div>\n  );\n};\n\nexport default Root;\n","import React from 'react';\n\nimport Root from '../view/Root';\n\nimport './styles.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Root />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { RootReducer } from './store/RootReducer';\nimport RootSaga from './store/RootSaga';\n\nimport App from './App';\nimport './index.css';\n\nconst saga = createSagaMiddleware();\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(RootReducer, composeEnhancers(applyMiddleware(saga)));\n\nsaga.run(RootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}