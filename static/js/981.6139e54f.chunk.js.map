{"version":3,"file":"static/js/981.6139e54f.chunk.js","mappings":"sOACA,EAA8B,4BAA9B,EAA0E,8BAA1E,EAAoH,0BAApH,EAA+J,+BAA/J,EAA0M,0BAA1M,EAA2O,qB,SCuBrOA,EAAsB,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAkBJ,EAAAA,EAAAA,IAAYK,EAAAA,IAC9BC,GAAYN,EAAAA,EAAAA,IAAYO,EAAAA,IAQ9B,OACE,gBAAKC,WAAWC,EAAAA,EAAAA,GAAKC,EAAoBJ,GAAaI,GAAtD,SACGR,EAAUS,QACT,SAACC,EAAAA,GAAD,CAAIJ,UAAWE,EAAf,SACGR,EAAUW,KAAI,SAACC,GAAD,OACb,yBACE,SAACC,EAAA,EAAD,CAAUhB,KAAMe,KADTA,EAAGE,MADC,OAOjB,gBAAKR,UAAWE,EAAhB,UACE,+CAEE,kBAAMF,UAAWE,EAAjB,UACG,KACD,mBACEO,KAAK,SACLC,QAxBU,WACtBrB,GAASsB,EAAAA,EAAAA,KAAa,IACtBtB,GAASuB,EAAAA,EAAAA,KAAa,IACtBvB,GAASwB,EAAAA,EAAAA,KAAQ,GAClB,EAqBab,UAAWE,EAHb,SAKGX,EAAKiB,QACE,OAVd,cAYkBZ,QAM3B,EAED,GAAekB,EAAAA,EAAAA,MAAK1B,E","sources":["webpack://github_info/./src/components/UsersList/styles.module.css?b79e","components/UsersList/UsersList.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"listWrapper\":\"styles_listWrapper__blTxs\",\"listWrapperUl\":\"styles_listWrapperUl__z+l1G\",\"listError\":\"styles_listError__vjDWX\",\"listErrorLogin\":\"styles_listErrorLogin__LOoRB\",\"cardLogin\":\"styles_cardLogin__KowuM\",\"hide\":\"styles_hide__NGyPC\"};","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { UserItem } from '../UserItem';\n\nimport { Ul } from 'ui/Ul';\n\nimport {\n  setCard,\n  setReposList,\n  setUsersList,\n} from 'store/SearchReducer/actions/actions';\nimport {\n  isLoadingSelect,\n  lastRequestTypeSelect,\n  userSelect,\n  usersListSelect,\n} from 'store/SearchReducer/selectors';\n\nimport { IUserInner } from 'model/search/types';\n\nimport styles from './styles.module.css';\n\nconst UsersList: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const user = useSelector(userSelect);\n  const usersList = useSelector(usersListSelect);\n  const lastRequestType = useSelector(lastRequestTypeSelect);\n  const isLoading = useSelector(isLoadingSelect);\n\n  const loginBtnHandler = () => {\n    dispatch(setUsersList(false));\n    dispatch(setReposList(false));\n    dispatch(setCard(true));\n  };\n\n  return (\n    <div className={clsx(styles.listWrapper, isLoading && styles.hide)}>\n      {usersList.length ? (\n        <Ul className={styles.listWrapperUl}>\n          {usersList.map((el: IUserInner) => (\n            <li key={el.login}>\n              <UserItem user={el} />\n            </li>\n          ))}\n        </Ul>\n      ) : (\n        <div className={styles.listError}>\n          <h2>\n            It seems the user\n            <span className={styles.listErrorLogin}>\n              {' '}\n              <button\n                type=\"button\"\n                onClick={loginBtnHandler}\n                className={styles.cardLogin}\n              >\n                {user.login}\n              </button>{' '}\n            </span>\n            hasn&#39;t any {lastRequestType}\n          </h2>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(UsersList);\n"],"names":["UsersList","dispatch","useDispatch","user","useSelector","userSelect","usersList","usersListSelect","lastRequestType","lastRequestTypeSelect","isLoading","isLoadingSelect","className","clsx","styles","length","Ul","map","el","UserItem","login","type","onClick","setUsersList","setReposList","setCard","memo"],"sourceRoot":""}