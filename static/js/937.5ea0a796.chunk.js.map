{"version":3,"file":"static/js/937.5ea0a796.chunk.js","mappings":"4NAAaA,EAAgB,SAACC,GAC5B,IAAMC,EACJD,EAAWE,WAAa,GAAxB,WACQF,EAAWE,YACfF,EAAWE,WAEXC,EACJH,EAAWI,aAAe,GAA1B,WACQJ,EAAWI,cACfJ,EAAWI,aAEXC,EACJL,EAAWM,aAAe,GAA1B,WACQN,EAAWM,cACfN,EAAWM,aAEjB,MAAM,GAAN,OAAUL,EAAV,YAAkBE,EAAlB,YAA4BE,EAC7B,E,wCChBD,EAA6B,2BAA7B,EAAoE,0BAApE,EAA4G,4BAA5G,EAAqJ,2BAArJ,EAAuL,qB,SC4BjLE,EAAuB,WAC3B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAeF,EAAAA,EAAAA,IAAYG,EAAAA,IAC3BC,GAAOJ,EAAAA,EAAAA,IAAYK,EAAAA,IACnBC,GAAcN,EAAAA,EAAAA,IAAYO,EAAAA,IAC1BC,GAAcR,EAAAA,EAAAA,IAAYS,EAAAA,IAC1BC,GAAWV,EAAAA,EAAAA,IAAYW,EAAAA,IACvBC,GAAYZ,EAAAA,EAAAA,IAAYa,EAAAA,IA+B9B,OACE,UAACC,EAAA,EAAD,CACEC,WAAWC,EAAAA,EAAAA,GAAKC,EAAmBP,GAAYE,GAAaK,GAD9D,WAGE,oBAAQF,UAAWE,EAAnB,WACE,yCACA,SAACC,EAAA,EAAD,CAAaC,QAtBK,WACtBtB,GAASuB,EAAAA,EAAAA,KAAc,GACxB,QAuBG,wBACGrB,EAAWsB,KAAI,SAACC,EAAIC,GAAL,OAEd,2BACE,mBACER,UAAWE,EACXO,KAAK,SACLL,QAAS,kBA7Ce,SAACM,GACnC,GAAIA,IAAUrB,EAAKqB,MAOjB,OANInB,GACFT,GAAS6B,EAAAA,EAAAA,KAAa,SAEpBlB,GACFX,GAAS8B,EAAAA,EAAAA,KAAa,KAI1B9B,GAAS+B,EAAAA,EAAAA,IAAWH,EAAO1B,EAAYG,GACxC,CAkC0B2B,CAA4BP,EAAGG,MAArC,EAHX,SAKGH,EAAGG,SAEN,uCAAYK,EAAAA,EAAAA,GACV,IAAIC,KAAKT,EAAGU,eADd,aAEM5C,EAAc,IAAI2C,KAAKT,EAAGU,eAFhC,SARF,UAAYV,EAAGG,MAAf,cAA0BF,GAFZ,OAiBlB,mBACER,UAAWE,EACXO,KAAK,SACLL,QA1CkB,WACtBtB,GACEoC,EAAAA,EAAAA,KACE,EADM,iCAEoBlC,EAAWmC,OAAS,EAAI,MAAQ,GAFpD,YAGJnC,EAAWmC,OAAS,EAApB,WAA4BnC,EAAWmC,OAAvC,KAAmD,GAH/C,YAIFnC,EAAWmC,OAAS,EAAI,QAAU,WAJhC,uBAKN,UAGL,EA6BG,8BASL,EAED,GAAeC,EAAAA,EAAAA,MAAKvC,E,+EC1GpB,EAA2B,yBAA3B,EAA8D,wBAA9D,EAAoG,4B,SCIvFsB,GAAiDiB,EAAAA,EAAAA,OAC5D,YAAkB,IAAfhB,EAAc,EAAdA,QACD,OACE,mBACEJ,WAAWC,EAAAA,EAAAA,GAAKC,EAAiBA,GACjCO,KAAK,SACL,aAAW,QACXL,QAASA,EAJX,UAME,gBAAKJ,UAAWE,EAAhB,oBAGL,G,uDCjBI,IAAMa,EAAgB,SAACM,GAC5B,IAAMC,EACJD,EAAYE,UAAY,GAAxB,WACQF,EAAYE,WAChBF,EAAYE,UAEZC,EACJH,EAAYI,WAAa,EAAzB,WACQJ,EAAYI,WAAa,GAC7BJ,EAAYI,WAAa,EAEzBC,EAAOL,EAAYM,cAEzB,MAAM,GAAN,OAAUL,EAAV,YAAiBE,EAAjB,YAA0BE,EAC3B,C","sources":["utils/timeFormatter.ts","webpack://github_info/./src/components/SearchList/styles.module.css?042a","components/SearchList/SearchList.tsx","webpack://github_info/./src/ui/CloseButton/styles.module.css?1f8d","ui/CloseButton/CloseButton.tsx","utils/dateFormatter.ts"],"sourcesContent":["export const timeFormatter = (incomeDate: Date): string => {\n  const hour =\n    incomeDate.getHours() < 10\n      ? `0${incomeDate.getHours()}`\n      : incomeDate.getHours();\n\n  const minute =\n    incomeDate.getMinutes() < 10\n      ? `0${incomeDate.getMinutes()}`\n      : incomeDate.getMinutes();\n\n  const second =\n    incomeDate.getSeconds() < 10\n      ? `0${incomeDate.getSeconds()}`\n      : incomeDate.getSeconds();\n\n  return `${hour}:${minute}:${second}`;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"shlWrapper\":\"styles_shlWrapper__cYx5+\",\"shlButton\":\"styles_shlButton__nwBxF\",\"clearButton\":\"styles_clearButton__p+P4V\",\"listHeader\":\"styles_listHeader__5JR7w\",\"hide\":\"styles_hide__aipSK\"};","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { CloseButton } from '../../ui/CloseButton';\nimport { Flex } from '../../ui/Flex';\n\nimport { dateFormatter } from '../../utils/dateFormatter';\nimport { timeFormatter } from '../../utils/timeFormatter';\n\nimport { favoriteListSelect } from '../../store/FavoriteReduser/selectors';\nimport {\n  setModal,\n  setReposList,\n  setSearchList,\n  setUsersList,\n} from '../../store/SearchReducer/actions/actions';\nimport { searchSaga } from '../../store/SearchReducer/actions/actionsSagas';\nimport {\n  isLoadingSelect,\n  isMobileSelect,\n  isReposListSelect,\n  isUsersListSelect,\n  searchListSelect,\n  userSelect,\n} from '../../store/SearchReducer/selectors';\n\nimport styles from './styles.module.css';\n\nconst SearchList: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const searchList = useSelector(searchListSelect);\n  const favoriteList = useSelector(favoriteListSelect);\n  const user = useSelector(userSelect);\n  const isUsersList = useSelector(isUsersListSelect);\n  const isReposList = useSelector(isReposListSelect);\n  const isMobile = useSelector(isMobileSelect);\n  const isLoading = useSelector(isLoadingSelect);\n\n  const searchHistoriListBtnHandler = (login: string) => {\n    if (login === user.login) {\n      if (isUsersList) {\n        dispatch(setUsersList(false));\n      }\n      if (isReposList) {\n        dispatch(setReposList(false));\n      }\n      return;\n    }\n    dispatch(searchSaga(login, searchList, favoriteList));\n  };\n\n  const closeBtnHandler = () => {\n    dispatch(setSearchList(false));\n  };\n\n  const clearBtnHandler = () => {\n    dispatch(\n      setModal(\n        true,\n        `Are you sure to delete ${searchList.length > 1 ? 'all' : ''} ${\n          searchList.length > 1 ? `(${searchList.length})` : ''\n        } ${searchList.length > 1 ? 'items' : 'the item'} of search history?`,\n        'search',\n      ),\n    );\n  };\n\n  return (\n    <Flex\n      className={clsx(styles.shlWrapper, isMobile && isLoading && styles.hide)}\n    >\n      <header className={styles.listHeader}>\n        <h3>Search list</h3>\n        <CloseButton onClick={closeBtnHandler} />\n      </header>\n\n      <ol>\n        {searchList.map((el, i) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <li key={`${el.login} + ${i}`}>\n            <button\n              className={styles.shlButton}\n              type=\"button\"\n              onClick={() => searchHistoriListBtnHandler(el.login)}\n            >\n              {el.login}\n            </button>\n            <span>{` (${dateFormatter(\n              new Date(el.dateOfSearch),\n            )}, ${timeFormatter(new Date(el.dateOfSearch))})`}</span>\n          </li>\n        ))}\n      </ol>\n\n      <button\n        className={styles.clearButton}\n        type=\"button\"\n        onClick={clearBtnHandler}\n      >\n        Delete history\n      </button>\n    </Flex>\n  );\n};\n\nexport default memo(SearchList);\n","// extracted by mini-css-extract-plugin\nexport default {\"closeBtn\":\"styles_closeBtn__X+jYU\",\"tooltip\":\"styles_tooltip__OqpEW\",\"tooltipText\":\"styles_tooltipText__-fVSx\"};","import React, { memo } from 'react';\nimport clsx from 'clsx';\n\nimport styles from './styles.module.css';\n\nexport const CloseButton: React.FC<{ onClick: () => void }> = memo(\n  ({ onClick }) => {\n    return (\n      <button\n        className={clsx(styles.closeBtn, styles.tooltip)}\n        type=\"button\"\n        aria-label=\"Close\"\n        onClick={onClick}\n      >\n        <div className={styles.tooltipText}>Close</div>\n      </button>\n    );\n  },\n);\n","export const dateFormatter = (dataCreated: Date): string => {\n  const day =\n    dataCreated.getDate() < 10\n      ? `0${dataCreated.getDate()}`\n      : dataCreated.getDate();\n\n  const month =\n    dataCreated.getMonth() < 9\n      ? `0${dataCreated.getMonth() + 1}`\n      : dataCreated.getMonth() + 1;\n\n  const year = dataCreated.getFullYear();\n\n  return `${day}.${month}.${year}`;\n};\n"],"names":["timeFormatter","incomeDate","hour","getHours","minute","getMinutes","second","getSeconds","SearchList","dispatch","useDispatch","searchList","useSelector","searchListSelect","favoriteList","favoriteListSelect","user","userSelect","isUsersList","isUsersListSelect","isReposList","isReposListSelect","isMobile","isMobileSelect","isLoading","isLoadingSelect","Flex","className","clsx","styles","CloseButton","onClick","setSearchList","map","el","i","type","login","setUsersList","setReposList","searchSaga","searchHistoriListBtnHandler","dateFormatter","Date","dateOfSearch","setModal","length","memo","dataCreated","day","getDate","month","getMonth","year","getFullYear"],"sourceRoot":""}