{"version":3,"file":"static/js/90.d6706682.chunk.js","mappings":"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","sources":["webpack://github_info/./src/components/FavoriteList/styles.module.css?c91b","components/FavoriteList/FavoriteList.tsx","webpack://github_info/./src/ui/CloseButton/styles.module.css?1f8d","ui/CloseButton/CloseButton.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"shlWrapper\":\"styles_shlWrapper__f-rVV\",\"list\":\"styles_list__i0M8i\",\"itemWrapper\":\"styles_itemWrapper__mxdIE\",\"shlButton\":\"styles_shlButton__pyJdW\",\"clearButton\":\"styles_clearButton__0SCFy\",\"deleteListItemBtn\":\"styles_deleteListItemBtn__GXqG4\",\"miniModal\":\"styles_miniModal__c9sGa\",\"btnsWrapper\":\"styles_btnsWrapper__7jukN\",\"deletedUserLogin\":\"styles_deletedUserLogin__i5JVT\",\"icon\":\"styles_icon__8ZZSc\",\"tooltip\":\"styles_tooltip__E903r\",\"tooltipText\":\"styles_tooltipText__WLX7l\",\"downloadBtn\":\"styles_downloadBtn__SUnD8\",\"tooltipTextDownload\":\"styles_tooltipTextDownload__pMTeA\",\"listHeader\":\"styles_listHeader__HNYoL\",\"hide\":\"styles_hide__5ou-l\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { CloseButton } from 'ui/CloseButton';\nimport { Flex } from 'ui/Flex';\n\nimport { favoriteListSelect } from 'selectors/favorite';\nimport {\n  isLoadingSelect,\n  isMobileSelect,\n  searchListSelect,\n  userSelect,\n} from 'selectors/search';\n\nimport {\n  fetchFavoriteList,\n  setFavoriteList,\n  setFavoriteUser,\n} from 'store/FavoriteReduser/favoriteReducer';\nimport { getGithubUserSaga } from 'store/SearchReducer/actions';\nimport { setModal } from 'store/SearchReducer/searchReducer';\n\nimport styles from './styles.module.css';\n\nconst FavoriteList = () => {\n  const dispatch = useDispatch();\n\n  const favoriteList = useSelector(favoriteListSelect);\n  const searchList = useSelector(searchListSelect);\n  const user = useSelector(userSelect);\n  const isMobile = useSelector(isMobileSelect);\n  const isLoading = useSelector(isLoadingSelect);\n\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [deletedElem, setDeletedElem] = useState('');\n\n  const closeBtnHandler = () => dispatch(setFavoriteList(false));\n\n  const searchHistoriListBtnHandler = (login: string) => {\n    if (!login?.length) return;\n\n    dispatch(getGithubUserSaga(login, searchList, favoriteList));\n  };\n\n  const clearBtnHandler = () => {\n    dispatch(\n      setModal({\n        isModal: true,\n        modalText: `Are you sure to delete ${\n          favoriteList.length > 1 ? 'all' : ''\n        } your ${\n          favoriteList.length > 1 ? `(${favoriteList.length})` : ''\n        } favorite ${favoriteList.length > 1 ? 'users' : 'user'}?`,\n        modalType: 'favorite',\n      }),\n    );\n  };\n\n  const openDeleteModal = (delElem: string) => {\n    setDeleteModal(true);\n    setDeletedElem(delElem);\n  };\n\n  const deleteBtnHandler = () => {\n    const newFavoriteUsersList = favoriteList.filter(\n      (el) => el.name !== deletedElem,\n    );\n\n    dispatch(fetchFavoriteList(newFavoriteUsersList));\n\n    localStorage.setItem('favorite', JSON.stringify(newFavoriteUsersList));\n\n    if (user.login === deletedElem) dispatch(setFavoriteUser(false));\n\n    setDeleteModal(false);\n    setDeletedElem('');\n  };\n\n  const cancelDelete = () => {\n    setDeleteModal(false);\n    setDeletedElem('');\n  };\n\n  // const onDownloadHandler = () => {\n  // let element = document.createElement('a');\n  // const usersArr = favoriteList.map((el) => {\n  //   console.log(el);\n  //   return fileText(el, el.note);\n  // });\n  // const text = fileText(user, note);\n  // element.setAttribute(\n  //   'href',\n  //   `data:text/plain;charset=utf-8,${encodeURIComponent(text)}`,\n  // );\n  // element.setAttribute('download', `${user.login}.doc`);\n  // element.style.display = 'none';\n  // document.body.appendChild(element);\n  // element.click();\n  // document.body.removeChild(element);\n  // };\n\n  return (\n    <Flex\n      className={clsx(styles.shlWrapper, isMobile && isLoading && styles.hide)}\n    >\n      <div className={styles.listHeader}>\n        <h3>Favorite list</h3>\n        <CloseButton onClick={closeBtnHandler} />\n      </div>\n      {/* <button\n          type=\"button\"\n          className={clsx(styles.button, styles.downloadBtn, styles.tooltip)}\n          onClick={onDownloadHandler}\n        >\n          <span>&#10515;</span>\n          <div className={clsx(styles.tooltipText, styles.tooltipTextDownload)}>\n            Download list\n          </div>\n        </button> */}\n\n      <ol className={styles.list}>\n        {favoriteList.map((el) => (\n          <li key={el.name}>\n            <div className={styles.itemWrapper}>\n              <button\n                className={styles.shlButton}\n                type=\"button\"\n                onClick={() => searchHistoriListBtnHandler(el.name)}\n              >\n                {el.name}\n              </button>\n\n              {el.note && <div className={styles.icon}>&#9998;</div>}\n\n              <button\n                type=\"button\"\n                className={clsx(styles.deleteListItemBtn, styles.tooltip)}\n                onClick={() => openDeleteModal(el.name)}\n              >\n                <div className={styles.tooltipText}>Delete</div>\n              </button>\n            </div>\n          </li>\n        ))}\n      </ol>\n\n      <button\n        className={styles.clearButton}\n        type=\"button\"\n        onClick={clearBtnHandler}\n      >\n        Delete all favorite users\n      </button>\n\n      {deleteModal && (\n        <Flex className={styles.miniModal}>\n          <span>\n            Are you sure to delete user{' '}\n            <span className={styles.deletedUserLogin}>{deletedElem}</span> from\n            favorite list?\n          </span>\n          <div className={styles.btnsWrapper}>\n            <button type=\"button\" onClick={deleteBtnHandler}>\n              Delete\n            </button>\n            <button type=\"button\" onClick={cancelDelete}>\n              Cansel\n            </button>\n          </div>\n        </Flex>\n      )}\n    </Flex>\n  );\n};\n\nexport default FavoriteList;\n","// extracted by mini-css-extract-plugin\nexport default {\"closeBtn\":\"styles_closeBtn__rMvYi\",\"tooltipText\":\"styles_tooltipText__j5iU1\"};","import type { FC } from 'react';\nimport React from 'react';\n\nimport styles from './styles.module.css';\n\nexport const CloseButton: FC<{ onClick: () => void }> = ({ onClick }) => {\n  return (\n    <button\n      className={styles.closeBtn}\n      type=\"button\"\n      aria-label=\"Close\"\n      onClick={onClick}\n    >\n      <div className={styles.tooltipText}>Close</div>\n    </button>\n  );\n};\n"],"names":["dispatch","useDispatch","favoriteList","useSelector","favoriteListSelect","searchList","searchListSelect","user","userSelect","isMobile","isMobileSelect","isLoading","isLoadingSelect","_useState","useState","_useState2","_slicedToArray","deleteModal","setDeleteModal","_useState3","_useState4","deletedElem","setDeletedElem","_jsxs","Flex","className","clsx","styles","children","_jsx","CloseButton","onClick","setFavoriteList","map","el","type","login","name","length","getGithubUserSaga","note","delElem","setModal","isModal","modalText","concat","modalType","newFavoriteUsersList","filter","fetchFavoriteList","localStorage","setItem","JSON","stringify","setFavoriteUser","_ref"],"sourceRoot":""}