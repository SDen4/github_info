{"version":3,"sources":["store/SearchReducer/constants.ts","store/SearchReducer/SearchReducer.ts","store/RootReducer.ts","store/SearchReducer/actions.ts","api/API.ts","store/SearchReducer/sagas/SearchSaga.ts","store/SearchReducer/sagas/FetchUsersListSaga.ts","store/RootSaga.ts","utils/dateFormatter.ts","utils/periodCounter.ts","components/Card/Card.tsx","components/Error/Error.tsx","components/UserItem/UserItem.tsx","components/UsersList/UsersList.tsx","ui/SubmitButton/SubmitButton.tsx","components/SearchForm/SearchForm.tsx","ui/Loader/Loader.tsx","view/Root/Root.tsx","App/App.tsx","index.tsx"],"names":["SEARCH_LOGIN_SAGA","FETCH_LOGIN","FETCH_USERS_LIST","FETCH_USERS_LIST_SAGA","USERS_LIST_OPENED_FLAG","CARD_OPEN_FLAG","LOADING","ERROR","initialState","user","name","login","followersUrl","followingUrl","avatarUrl","followersNum","followingNum","dataCreated","Date","company","email","reposNum","reposUrl","usersList","lastRequestType","usersListOpened","cardOpened","loading","error","RootReducer","combineReducers","search","state","action","type","followers_url","following_url","avatar_url","followers","following","created_at","public_repos","repos_url","cardOPenedFlag","loadingFlag","errorFlag","userListFlag","searchSaga","userListOpenedFlag","API","axios","create","baseURL","sagaWorker","SearchSagaWatcher","getUserInfo","a","get","then","res","data","response","put","allData","console","log","takeEvery","FetchUsersListSagaWatcher","requestType","rootSaga","all","fork","dateFormatter","day","getDate","month","getMonth","year","getFullYear","periodCounter","duration","getTime","years","Math","floor","months","days","yearsStr","monthsStr","daysStr","Card","dispatch","useDispatch","onBtnClickHandler","fetchUsersListSaga","className","src","alt","href","clsx","onClick","Error","userName","UserItem","UsersList","users","length","map","el","SubmitButton","children","disabled","SearchForm","useState","searchLogin","setsearchLogin","disabledBtn","setDisabledBtn","ref","useRef","useEffect","current","focus","onSubmit","event","preventDefault","placeholder","value","onChange","textValue","target","trim","Loader","Root","storeData","useSelector","store","setUser","App","saga","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","RootSaga","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.513e5b30.chunk.js","sourcesContent":["export const SEARCH_LOGIN_SAGA = 'SEARCH_LOGIN_SAGA';\n\nexport const FETCH_LOGIN = 'FETCH_LOGIN';\nexport const FETCH_USERS_LIST = 'FETCH_USERS_LIST';\nexport const FETCH_USERS_LIST_SAGA = 'FETCH_USERS_LIST_SAGA';\nexport const USERS_LIST_OPENED_FLAG = 'USERS_LIST_OPENED_FLAG';\n\nexport const CARD_OPEN_FLAG = 'CARD_OPEN_FLAG';\n\nexport const LOADING = 'LOADING';\n\nexport const ERROR = 'ERROR';\n","import {\n  FETCH_LOGIN,\n  CARD_OPEN_FLAG,\n  LOADING,\n  ERROR,\n  USERS_LIST_OPENED_FLAG,\n  FETCH_USERS_LIST,\n} from './constants';\n\nimport { InitialStateType } from './types';\n\nimport { ActionsType } from './actions';\n\nconst initialState: InitialStateType = {\n  user: {\n    name: '',\n    login: '',\n    followersUrl: '',\n    followingUrl: '',\n    avatarUrl: '',\n    followersNum: 0,\n    followingNum: 0,\n    dataCreated: new Date(),\n    company: '',\n    email: '',\n    reposNum: 0,\n    reposUrl: '',\n  },\n  usersList: [],\n  lastRequestType: '',\n  usersListOpened: false,\n  cardOpened: false,\n  loading: false,\n  error: false,\n};\n\nexport const SearchReducer = (\n  state = initialState,\n  action: ActionsType,\n): typeof state => {\n  switch (action.type) {\n    case FETCH_LOGIN:\n      return {\n        ...state,\n        user: {\n          name: action.name,\n          login: action.login,\n          followersUrl: action.followers_url,\n          followingUrl: action.following_url,\n          avatarUrl: action.avatar_url,\n          followersNum: action.followers,\n          followingNum: action.following,\n          dataCreated: action.created_at,\n          company: action.company,\n          email: action.email,\n          reposNum: action.public_repos,\n          reposUrl: action.repos_url,\n        },\n      };\n\n    case CARD_OPEN_FLAG:\n      return {\n        ...state,\n        cardOpened: action.cardOPenedFlag,\n      };\n\n    case LOADING:\n      return {\n        ...state,\n        loading: action.loadingFlag,\n      };\n\n    case ERROR:\n      return {\n        ...state,\n        error: action.errorFlag,\n      };\n\n    case USERS_LIST_OPENED_FLAG:\n      return {\n        ...state,\n        usersListOpened: action.userListFlag,\n      };\n\n    case FETCH_USERS_LIST:\n      return {\n        ...state,\n        usersList: action.usersList,\n        lastRequestType: action.lastRequestType,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { SearchReducer } from './SearchReducer/SearchReducer';\n\nexport const RootReducer = combineReducers({\n  search: SearchReducer,\n});\n\nexport type AppStateType = ReturnType<typeof RootReducer>;\n","/* eslint-disable camelcase */\nimport {\n  SEARCH_LOGIN_SAGA,\n  FETCH_LOGIN,\n  CARD_OPEN_FLAG,\n  LOADING,\n  ERROR,\n  USERS_LIST_OPENED_FLAG,\n  FETCH_USERS_LIST_SAGA,\n  FETCH_USERS_LIST,\n} from './constants';\n\nimport { UserInnerType } from './types';\n\nexport const searchSaga = (login: string) => {\n  return {\n    type: SEARCH_LOGIN_SAGA,\n    login,\n  } as const;\n};\n\nexport const fetchLogin = (\n  name: string,\n  login: string,\n  followers_url: string,\n  following_url: string,\n  followers: number,\n  following: number,\n  created_at: Date,\n  avatar_url?: string,\n  company?: string,\n  email?: string,\n  public_repos?: number,\n  repos_url?: string,\n) => {\n  return {\n    type: FETCH_LOGIN,\n    name,\n    login,\n    followers_url,\n    following_url,\n    followers,\n    following,\n    created_at,\n    avatar_url,\n    company,\n    email,\n    public_repos,\n    repos_url,\n  } as const;\n};\n\nexport const cardOPenedFlag = (cardOPenedFlag: boolean) => {\n  return {\n    type: CARD_OPEN_FLAG,\n    cardOPenedFlag,\n  } as const;\n};\n\nexport const loadingFlag = (loadingFlag: boolean) => {\n  return {\n    type: LOADING,\n    loadingFlag,\n  } as const;\n};\n\nexport const errorFlag = (errorFlag: boolean) => {\n  return {\n    type: ERROR,\n    errorFlag,\n  } as const;\n};\n\nexport const userListOpenedFlag = (userListFlag: boolean) => {\n  return {\n    type: USERS_LIST_OPENED_FLAG,\n    userListFlag,\n  } as const;\n};\n\nexport const fetchUsersListSaga = (login: string, requestType: string) => {\n  return {\n    type: FETCH_USERS_LIST_SAGA,\n    login,\n    requestType,\n  } as const;\n};\n\nexport const fetchUsersList = (\n  usersList: UserInnerType[],\n  lastRequestType: string,\n) => {\n  return {\n    type: FETCH_USERS_LIST,\n    usersList,\n    lastRequestType,\n  } as const;\n};\n\ntype searchSagaType = ReturnType<typeof searchSaga>;\ntype fetchLoginType = ReturnType<typeof fetchLogin>;\ntype cardOPenedFlagType = ReturnType<typeof cardOPenedFlag>;\ntype loadingFlagType = ReturnType<typeof loadingFlag>;\ntype errorFlagType = ReturnType<typeof errorFlag>;\ntype userListOpenedFlagType = ReturnType<typeof userListOpenedFlag>;\ntype fetchUsersListType = ReturnType<typeof fetchUsersList>;\n\nexport type ActionsType =\n  | searchSagaType\n  | fetchLoginType\n  | cardOPenedFlagType\n  | loadingFlagType\n  | errorFlagType\n  | userListOpenedFlagType\n  | fetchUsersListType;\n","import axios from 'axios';\n\nexport const API = axios.create({\n  baseURL: 'https://api.github.com/users/',\n});\n","import { takeEvery, put } from 'redux-saga/effects';\n\nimport { SEARCH_LOGIN_SAGA } from '../constants';\nimport {\n  cardOPenedFlag,\n  errorFlag,\n  fetchLogin,\n  loadingFlag,\n  userListOpenedFlag,\n} from '../actions';\nimport { SearchSagaWorkerType, UserInnerType } from '../types';\n\nimport { API } from '../../../api/API';\n\nasync function getUserInfo(login: string) {\n  const response = await API.get(`${login}`).then((res) => res.data);\n  return response;\n}\n\nfunction* sagaWorker(action: SearchSagaWorkerType) {\n  try {\n    yield put(errorFlag(false));\n    yield put(userListOpenedFlag(false));\n    yield put(cardOPenedFlag(false));\n    yield put(loadingFlag(true));\n\n    const allData: UserInnerType = yield getUserInfo(action.login);\n    // eslint-disable-next-line no-console\n    console.log(allData);\n\n    yield put(\n      fetchLogin(\n        allData.name,\n        allData.login,\n        allData.followers_url,\n        allData.following_url,\n        allData.followers,\n        allData.following,\n        new Date(allData.created_at),\n        allData.avatar_url,\n        allData.company,\n        allData.email,\n        allData.public_repos,\n        allData.repos_url,\n      ),\n    );\n\n    yield put(loadingFlag(false));\n    yield put(cardOPenedFlag(true));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n    yield put(loadingFlag(false));\n    yield put(errorFlag(true));\n  }\n}\n\nexport function* SearchSagaWatcher() {\n  yield takeEvery(SEARCH_LOGIN_SAGA, sagaWorker);\n}\n","import { takeEvery, put } from 'redux-saga/effects';\n\nimport { FETCH_USERS_LIST_SAGA } from '../constants';\nimport {\n  cardOPenedFlag,\n  fetchUsersList,\n  loadingFlag,\n  userListOpenedFlag,\n} from '../actions';\nimport { IFetchUsersListSagaWorker, UserInnerType } from '../types';\n\nimport { API } from '../../../api/API';\n\nasync function getUserInfo(login: string, requestType: string) {\n  const response = await API.get(`${login}/${requestType}`).then(\n    (res) => res.data,\n  );\n  return response;\n}\n\nfunction* sagaWorker(action: IFetchUsersListSagaWorker) {\n  try {\n    yield put(cardOPenedFlag(false));\n    yield put(loadingFlag(true));\n\n    const allData: UserInnerType[] = yield getUserInfo(\n      action.login,\n      action.requestType,\n    );\n\n    yield put(fetchUsersList(allData, action.requestType));\n\n    yield put(loadingFlag(false));\n    yield put(userListOpenedFlag(true));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n    yield put(loadingFlag(false));\n  }\n}\n\nexport function* FetchUsersListSagaWatcher() {\n  yield takeEvery(FETCH_USERS_LIST_SAGA, sagaWorker);\n}\n","import { fork, all } from 'redux-saga/effects';\n\nimport { SearchSagaWatcher } from './SearchReducer/sagas/SearchSaga';\nimport { FetchUsersListSagaWatcher } from './SearchReducer/sagas/FetchUsersListSaga';\n\nexport default function* rootSaga() {\n  yield all([fork(SearchSagaWatcher), fork(FetchUsersListSagaWatcher)]);\n}\n","export const dateFormatter = (dataCreated: Date): string => {\n  const day =\n    dataCreated.getDate() < 10\n      ? `0${dataCreated.getDate()}`\n      : dataCreated.getDate();\n\n  const month =\n    dataCreated.getMonth() < 9\n      ? `0${dataCreated.getMonth() + 1}`\n      : dataCreated.getMonth() + 1;\n\n  const year = dataCreated.getFullYear();\n\n  return ` ${day}.${month}.${year}. `;\n};\n","export const periodCounter = (dataCreated: Date): string => {\n  const currentDayDuration = new Date().getTime();\n  const dataCreatedDuration = dataCreated.getTime();\n  const duration = currentDayDuration - dataCreatedDuration;\n\n  const years = Math.floor(duration / 1000 / 60 / 60 / 24 / 365.25);\n  const months = Math.floor(\n    (duration - years * 365.25 * 24 * 60 * 60 * 1000) /\n      1000 /\n      60 /\n      60 /\n      24 /\n      30,\n  );\n  const days = Math.floor(\n    (duration -\n      years * 365.25 * 24 * 60 * 60 * 1000 -\n      months * 30 * 24 * 60 * 60 * 1000) /\n      1000 /\n      60 /\n      60 /\n      24,\n  );\n\n  const yearsStr = years > 1 ? `${years} years` : `${years} year`;\n\n  let monthsStr = '';\n  if (months === 0) {\n    monthsStr = '';\n  } else if (months === 1) {\n    monthsStr = `${months} month`;\n  } else {\n    monthsStr = `${months} months`;\n  }\n\n  let daysStr = '';\n  if (days === 0) {\n    daysStr = 'ago';\n  } else if (days === 1) {\n    daysStr = `and ${days} day ago`;\n  } else {\n    daysStr = `and ${days} days ago`;\n  }\n\n  if (years >= 1) {\n    return `${yearsStr} ${monthsStr} ${daysStr}`;\n  }\n  if (months >= 1) {\n    return `${monthsStr} ${daysStr}`;\n  }\n  return `${daysStr}`;\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { dateFormatter } from '../../utils/dateFormatter';\nimport { periodCounter } from '../../utils/periodCounter';\n\nimport {\n  cardOPenedFlag,\n  fetchUsersListSaga,\n} from '../../store/SearchReducer/actions';\n\nimport { CardType } from './types';\n\nimport './styles.css';\n\nconst Card: React.FC<CardType> = ({ user }) => {\n  const dispatch = useDispatch();\n\n  const onClickCloseBtnHandler = () => {\n    dispatch(cardOPenedFlag(false));\n  };\n\n  const onBtnClickHandler = (requestType: string) => {\n    dispatch(fetchUsersListSaga(user.login, requestType));\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card_element\">\n        <div className=\"card_photo_wrapper\">\n          <img src={user.avatarUrl} alt=\"User's avatar\" />\n        </div>\n      </div>\n\n      <div className=\"card_element\">\n        <div className=\"card_sub_element\">\n          {user.name ? (\n            <h2>\n              {user.name} &#40;{user.login}&#41;\n            </h2>\n          ) : (\n            <h2>{user.login}</h2>\n          )}\n        </div>\n\n        {user.company && (\n          <div className=\"card_sub_element\">\n            <span>Company:&nbsp;</span>\n            <div className=\"card_user_info\">{user.company}</div>\n          </div>\n        )}\n\n        {user.email && (\n          <div className=\"card_sub_element\">\n            <span>Email:&nbsp;</span>\n            <a href={`mailto:${user.email}`} className=\"card_user_info\">\n              {user.email}\n            </a>\n          </div>\n        )}\n\n        {user.reposNum ? (\n          <div className=\"card_sub_element\">\n            <span>Public repositories:&nbsp;</span>\n            <button\n              type=\"button\"\n              className={clsx('card_user_info', 'card_user_info_btn')}\n            >\n              {user.reposNum}\n            </button>\n          </div>\n        ) : (\n          ''\n        )}\n\n        <div className=\"card_followers_wrapper\">\n          <div className=\"card_followers_unit\">\n            <span>Followers:&nbsp;</span>\n            <button\n              type=\"button\"\n              className={clsx('card_user_info', 'card_user_info_btn')}\n              onClick={() => onBtnClickHandler('followers')}\n            >\n              {user.followersNum}\n            </button>\n          </div>\n\n          <div className=\"card_followers_unit\">\n            <span>Following:&nbsp;</span>\n            <button\n              type=\"button\"\n              className={clsx('card_user_info', 'card_user_info_btn')}\n              onClick={() => onBtnClickHandler('following')}\n            >\n              {user.followingNum}\n            </button>\n          </div>\n        </div>\n\n        <div className=\"card_sub_element\">\n          <span>Created at&nbsp;</span>\n          <div className=\"card_user_info\">\n            {dateFormatter(user.dataCreated)}\n          </div>\n          <div className=\"card_user_info\">\n            &nbsp;({periodCounter(user.dataCreated)})\n          </div>\n        </div>\n      </div>\n\n      <div className=\"card_close_btn_wrapper\">\n        <button\n          className=\"card_close_btn\"\n          type=\"button\"\n          aria-label=\"Close\"\n          onClick={onClickCloseBtnHandler}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport './styles.css';\nimport { IError } from './types';\n\nconst Error: React.FC<IError> = ({ userName }): JSX.Element => {\n  return (\n    <div className=\"error_wrapper\">\n      <h2>\n        User\n        <span className=\"error_user_info\"> {userName} </span>\n        is not found...\n      </h2>\n    </div>\n  );\n};\n\nexport default Error;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { searchSaga } from '../../store/SearchReducer/actions';\n\nimport { IUserItem } from './types';\n\nimport './styles.css';\n\nconst UserItem: React.FC<IUserItem> = ({ user }) => {\n  const dispatch = useDispatch();\n\n  const itemBthHandler = () => {\n    dispatch(searchSaga(user.login));\n  };\n\n  return (\n    <div className=\"user_item_wrapper\">\n      <div className=\"user_item_photo_wrapper\">\n        <img src={user.avatar_url} alt=\"User's avatar\" />\n      </div>\n\n      <div className=\"user_info\">\n        <div className=\"user_info_unit\">\n          <button type=\"button\" onClick={itemBthHandler}>\n            <h2>{user.login}</h2>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserItem;\n","import React from 'react';\nimport { UserInnerType } from '../../store/SearchReducer/types';\nimport UserItem from '../UserItem';\n\nimport { IUsersList } from './types';\n\nimport './styles.css';\n\nconst UsersList: React.FC<IUsersList> = ({ users, login, requestType }) => {\n  return (\n    <div className=\"list_wrapper\">\n      {users.length ? (\n        <ul className=\"list_wrapper_ul\">\n          {users.map((el: UserInnerType) => (\n            <li key={el.login}>\n              <UserItem user={el} />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div className=\"list_error\">\n          <h2>\n            It seems the user\n            <span className=\"list_error_login\"> {login} </span>\n            hasn&#39;t any {requestType}\n          </h2>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UsersList;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport { IButton } from './types';\n\nimport './styles.css';\n\nconst SubmitButton: React.FC<IButton> = ({ children, disabled }) => {\n  return (\n    <button\n      className={clsx(disabled && 'button_unactive', 'button')}\n      type=\"submit\"\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default SubmitButton;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { searchSaga } from '../../store/SearchReducer/actions';\n\nimport SubmitButton from '../../ui/SubmitButton';\n\nimport './styles.css';\nimport { ISearch } from './types';\n\nconst SearchForm: React.FC<ISearch> = ({ search }) => {\n  const [searchLogin, setsearchLogin] = useState<string>('');\n  const [disabledBtn, setDisabledBtn] = useState(true);\n  const dispatch = useDispatch();\n\n  // auto focus on input\n  const ref: any = useRef(null);\n  useEffect(() => {\n    ref.current.focus();\n  }, []);\n\n  const changeTextHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let textValue = event?.target.value;\n    setsearchLogin(textValue);\n\n    if (textValue.trim()) {\n      setDisabledBtn(false);\n    } else {\n      setDisabledBtn(true);\n    }\n  };\n\n  const onSubmitHandler = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    dispatch(searchSaga(searchLogin));\n\n    search(searchLogin);\n\n    setsearchLogin('');\n    setDisabledBtn(true);\n  };\n\n  return (\n    <form className=\"form\" onSubmit={onSubmitHandler}>\n      <input\n        ref={ref}\n        className=\"input\"\n        type=\"text\"\n        placeholder=\"Enter the github login\"\n        value={searchLogin}\n        onChange={changeTextHandler}\n      />\n      <SubmitButton disabled={disabledBtn}>Search</SubmitButton>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import React from 'react';\n\nimport './styles.css';\n\nconst Loader: React.FC = () => {\n  return (\n    <div className=\"loader_wrapper\">\n      <div className=\"lds-default\">\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Card from '../../components/Card';\nimport Error from '../../components/Error';\nimport UsersList from '../../components/UsersList';\nimport SearchForm from '../../components/SearchForm';\nimport Loader from '../../ui/Loader';\n\nimport { AppStateType } from '../../store/RootReducer';\nimport {\n  cardOPenedFlag,\n  userListOpenedFlag,\n} from '../../store/SearchReducer/actions';\n\nimport './styles.css';\nimport clsx from 'clsx';\nimport { InitialStateType } from '../../store/SearchReducer/types';\n\nconst Root: React.FC = () => {\n  const dispatch = useDispatch();\n  const storeData = useSelector<AppStateType, InitialStateType>(\n    (store) => store.search,\n  );\n  const [user, setUser] = useState<string>('');\n\n  const search = (searchLogin: string) => {\n    setUser(searchLogin);\n  };\n\n  const backBtnHandler = () => {\n    dispatch(userListOpenedFlag(false));\n    dispatch(cardOPenedFlag(true));\n  };\n\n  return (\n    <div className=\"root_wrapper\">\n      <header className=\"root_header\">Find github&apos;s user</header>\n      <section className={clsx('root_section', 'root_section_search')}>\n        <SearchForm search={search} />\n\n        {storeData.usersListOpened && (\n          <button type=\"button\" onClick={backBtnHandler} className=\"root_btn\">\n            Back\n          </button>\n        )}\n      </section>\n\n      <section className=\"root_section\">\n        {storeData.loading && <Loader />}\n        {storeData.cardOpened && <Card user={storeData.user} />}\n        {storeData.usersListOpened && (\n          <UsersList\n            users={storeData.usersList}\n            login={storeData.user.login}\n            requestType={storeData.lastRequestType}\n          />\n        )}\n        {storeData.error && <Error userName={user} />}\n      </section>\n    </div>\n  );\n};\n\nexport default Root;\n","import React from 'react';\n\nimport Root from '../view/Root';\n\nimport './styles.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Root />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { RootReducer } from './store/RootReducer';\nimport RootSaga from './store/RootSaga';\n\nimport App from './App';\nimport './index.css';\n\nconst saga = createSagaMiddleware();\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(RootReducer, composeEnhancers(applyMiddleware(saga)));\n\nsaga.run(RootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}