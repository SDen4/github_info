{"version":3,"file":"static/js/108.240b7e4e.chunk.js","mappings":"kNAAaA,EAAgB,SAACC,GAC5B,IAEMC,GAFqB,IAAIC,MAAOC,UACVH,EAAYG,UAGlCC,EAAQC,KAAKC,MAAML,EAAW,IAAO,GAAK,GAAK,GAAK,QACpDM,EAASF,KAAKC,OACjBL,EAAmB,OAARG,EAAiB,GAAK,GAAK,GAAK,KAC1C,IACA,GACA,GACA,GACA,IAEEI,EAAOH,KAAKC,OACfL,EACS,OAARG,EAAiB,GAAK,GAAK,GAAK,IACvB,GAATG,EAAc,GAAK,GAAK,GAAK,KAC7B,IACA,GACA,GACA,IAGEE,EAAW,UAAeL,EAAfA,EAAQ,EAAR,kBAEbM,EAAY,GAEdA,EADa,IAAXH,EACU,GAEH,UAAMA,EADK,IAAXA,EACA,SAEA,WAGX,IAAII,EAAU,GASd,OAPEA,EADW,IAATH,EACQ,MAEH,cAAUA,EADC,IAATA,EACF,WAEA,aAGLJ,GAAS,EACL,GAAN,OAAUK,EAAV,YAAsBC,EAAtB,YAAmCC,GAEjCJ,GAAU,EACN,GAAN,OAAUG,EAAV,YAAuBC,GAEnB,GAAN,OAAUA,EACX,E,qEClDD,EAAuB,qBAAvB,EAA0D,4BAA1D,EAAyG,iCAAzG,EAAiK,qCAAjK,EAA0N,kCAA1N,EAA0Q,4BAA1Q,EAA0T,kCAA1T,EAAwW,0BAAxW,EAAiZ,6BAAjZ,EAAoc,oCAApc,EAA0f,gCAA1f,EAA4iB,gCAA5iB,EAAqlB,uBAArlB,EAAmnB,qBAAnnB,EAAqpB,2BAArpB,EAA8rB,4BAA9rB,EAAuuB,2BAAvuB,EAAixB,6BAAjxB,EAAwzB,wBAAxzB,EAAw1B,sBAAx1B,EAAq3B,qBAAr3B,EAAi5B,qBAAj5B,EAAo7B,4B,SCqC96BC,EAAiB,WACrB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,IAC3BC,GAAOF,EAAAA,EAAAA,IAAYG,EAAAA,IACnBC,GAAOJ,EAAAA,EAAAA,IAAYK,EAAAA,IACnBC,GAASN,EAAAA,EAAAA,IAAYO,EAAAA,IACrBC,GAAYR,EAAAA,EAAAA,IAAYS,EAAAA,IACxBC,GAAYV,EAAAA,EAAAA,IAAYW,EAAAA,IACxBC,GAAiBZ,EAAAA,EAAAA,IAAYa,EAAAA,GAa7BC,EAAoB,SAACC,GACzBlB,GAASmB,EAAAA,EAAAA,IAAmBD,GAC7B,EAmDD,OACE,iBAAKE,WAAWC,EAAAA,EAAAA,GAAKC,EAAaX,GAAaW,GAA/C,WACE,kBAAOF,UAAWE,EAAlB,UACE,gBAAKF,UAAWE,EAAhB,UACE,gBAAKC,IAAKhB,EAAKiB,UAAWC,IAAI,uBAIlC,UAACC,EAAA,EAAD,CAAMN,UAAWE,EAAjB,WACE,mBAAQF,UAAWE,EAAnB,SACGf,EAAKoB,MACJ,eACEC,KAAI,6BAAwBrB,EAAKsB,OACjCT,UAAWE,EAFb,UAIGf,EAAKoB,KAJR,KAIoBpB,EAAKsB,MAJzB,QAOA,cACED,KAAI,6BAAwBrB,EAAKsB,OACjCT,UAAWE,EAFb,SAIGf,EAAKsB,UAKXtB,EAAKuB,UACJ,iBAAKV,UAAWE,EAAhB,WACE,4CACA,gBAAKF,UAAWE,EAAhB,SAAsCf,EAAKuB,aAI9CvB,EAAKwB,WACJ,iBAAKX,UAAWE,EAAhB,WACE,6CACA,gBAAKF,UAAWE,EAAhB,SAAsCf,EAAKwB,cAI9CxB,EAAKyB,QACJ,iBAAKZ,UAAWE,EAAhB,WACE,0CACA,cAAGM,KAAI,iBAAYrB,EAAKyB,OAASZ,UAAWE,EAA5C,SACGf,EAAKyB,WAKXzB,EAAK0B,UACJ,iBAAKb,UAAWE,EAAhB,WACE,wDACA,mBACEY,KAAK,SACLd,WAAWC,EAAAA,EAAAA,GAAKC,EAAqBA,GACrCa,QAzGgB,WAC1BnC,GAASoC,EAAAA,EAAAA,MACV,EAoGS,SAKG7B,EAAK0B,cAIV,IAGF,iBAAKb,UAAWE,EAAhB,WACE,iBAAKF,UAAWE,EAAhB,WACE,8CACA,mBACEY,KAAK,SACLd,WAAWC,EAAAA,EAAAA,GAAKC,EAAqBA,GACrCa,QAAS,kBAAMlB,EAAkB,YAAxB,EAHX,SAKGV,EAAK8B,mBAIV,iBAAKjB,UAAWE,EAAhB,WACE,8CACA,mBACEY,KAAK,SACLd,WAAWC,EAAAA,EAAAA,GAAKC,EAAqBA,GACrCa,QAAS,kBAAMlB,EAAkB,YAAxB,EAHX,SAKGV,EAAK+B,sBAKZ,iBAAKlB,WAAWC,EAAAA,EAAAA,GAAKC,EAAoBA,GAAzC,WACE,kDACA,iBAAKF,UAAWE,EAAhB,WACE,gBAAKF,UAAWE,EAAhB,UACGiB,EAAAA,EAAAA,GAAchC,EAAKpB,gBAEtB,iBAAKiC,UAAWE,EAAhB,cACIpC,EAAcqB,EAAKpB,aADvB,aAMHoB,EAAKiC,mBACJ,iBAAKpB,UAAWE,EAAhB,WACE,2DACA,gBAAKF,UAAWE,EAAhB,UACGiB,EAAAA,EAAAA,GAAc,IAAIlD,KAAKkB,EAAKiC,4BAKrC,iBAAKpB,UAAWE,EAAhB,WACE,oBACEY,KAAK,SACLd,WAAWC,EAAAA,EAAAA,GACTR,GAAaS,EACbA,EACAA,EACAA,GAEFa,QA7He,WAChB1B,GACHT,GAASyC,EAAAA,EAAAA,KAAQ,GAEpB,EAiHK,WAUE,sCACA,gBAAKrB,UAAWE,EAAhB,SACGT,EAAY,YAAc,iBAI/B,oBACEqB,KAAK,SACLd,WAAWC,EAAAA,EAAAA,GAAKC,EAAeA,EAAoBA,GACnDa,QA3JkB,WACxB,IAAIO,EAAUC,SAASC,cAAc,KAE/BC,ECrFc,SAACtC,EAAaF,GACpC,IAAMyC,EAAU,IAEhB,MAAM,qCAAN,QACgCP,EAAAA,EAAAA,GAAc,IAAIlD,MADlD,6BAIWkB,EAAKsB,MAJhB,mBAIgCtB,EAAKoB,MAAQmB,EAJ7C,2CAMwBvC,EAAK8B,aAN7B,iCAOE9B,EAAK+B,aAPP,6BAUc/B,EAAKwB,UAAYe,EAV/B,4BAYavC,EAAKuB,SAAWgB,EAZ7B,0BAcWvC,EAAKyB,OAASc,EAdzB,qDAiBIP,EAAAA,EAAAA,GAAchC,EAAKpB,cAAgB2D,EAjBvC,kBAmBK5D,EAAcqB,EAAKpB,aAnBxB,qDAsBKoB,EAAKiC,mBACJD,EAAAA,EAAAA,GAAc,IAAIlD,KAAKkB,EAAKiC,oBAC9BM,EAxBJ,iDA2BkCvC,EAAK0B,UAAYa,EA3BnD,qEAgCkCvC,EAAKsB,MAhCvC,iCAkCkBtB,EAAKwC,SAlCvB,2BAoCYxC,EAAKiB,UApCjB,8BAsCejB,EAAKyC,aAtCpB,8BAwCezC,EAAK0C,aAxCpB,6CA6CK5C,EA7CL,UA+CD,CDmCgB6C,CAAS3C,EAAMF,GAE5BqC,EAAQS,aACN,OADF,wCAEmCC,mBAAmBP,KAEtDH,EAAQS,aAAa,WAArB,UAAoC5C,EAAKsB,MAAzC,SAEAa,EAAQW,MAAMC,QAAU,OACxBX,SAASY,KAAKC,YAAYd,GAE1BA,EAAQe,QAERd,SAASY,KAAKG,YAAYhB,EAC3B,EAuIK,WAKE,iBAAMtB,UAAWE,EAAjB,qBACA,gBAAKF,UAAWE,KAChB,gBAAKF,UAAWE,EAAhB,oCAGF,oBACEY,KAAK,SACLd,WAAWC,EAAAA,EAAAA,GAAKC,EAAeA,GAC/Ba,QAzLqB,WAC3B,GAAIpB,EAAgB,CAClB,IAAM4C,EAAuBzD,EAAa0D,QACxC,SAACC,GAAD,OAAQA,EAAGlC,OAASpB,EAAKsB,KAAzB,IAEF7B,GAAS8D,EAAAA,EAAAA,KAAgB,IACzB9D,GAAS+D,EAAAA,EAAAA,IAAkBJ,IAC3BK,aAAaC,QAAQ,WAAYC,KAAKC,UAAUR,GACjD,KAAM,CACL3D,GAAS8D,EAAAA,EAAAA,KAAgB,IACzB,IAAMM,EAAkB,CAAEzC,KAAMpB,EAAKsB,OACrC7B,GAASqE,EAAAA,EAAAA,IAAqBD,IAC9BJ,aAAaC,QACX,WACAC,KAAKC,UAAL,kBAAmBjE,GAAnB,CAAiCkE,MAEnCpE,GAASsE,EAAAA,EAAAA,KAAmB,GAC7B,CACF,EAoKK,WAKE,iBACElD,WAAWC,EAAAA,EAAAA,GAAKN,GAAkBO,EAAmBA,GADvD,qBAKA,gBAAKF,UAAWE,EAAhB,SACGP,EAAiB,wBAA0B,yBAIhD,SAACwD,EAAA,EAAD,CAAapC,QAxNY,WAC7BnC,GAASwE,EAAAA,EAAAA,KAAQ,IACjBxE,GACEyE,EAAAA,EAAAA,IAAW,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,IAAIpF,KAAQ,GAAI,GAAI,GAAI,EAAG,GAAI,KAG9DoB,GACFT,GAASyC,EAAAA,EAAAA,KAAQ,GAEpB,SAmNF,EAED,GAAeiC,EAAAA,EAAAA,MAAK3E,E,+EE9QpB,EAA2B,yBAA3B,EAA8D,wBAA9D,EAAoG,4B,SCIvFwE,GAAiDG,EAAAA,EAAAA,OAC5D,YAAkB,IAAfvC,EAAc,EAAdA,QACD,OACE,mBACEf,WAAWC,EAAAA,EAAAA,GAAKC,EAAiBA,GACjCY,KAAK,SACL,aAAW,QACXC,QAASA,EAJX,UAME,gBAAKf,UAAWE,EAAhB,oBAGL,G,uDCjBI,IAAMiB,EAAgB,SAACpD,GAC5B,IAAMwF,EACJxF,EAAYyF,UAAY,GAAxB,WACQzF,EAAYyF,WAChBzF,EAAYyF,UAEZC,EACJ1F,EAAY2F,WAAa,EAAzB,WACQ3F,EAAY2F,WAAa,GAC7B3F,EAAY2F,WAAa,EAEzBC,EAAO5F,EAAY6F,cAEzB,MAAM,GAAN,OAAUL,EAAV,YAAiBE,EAAjB,YAA0BE,EAC3B,C","sources":["utils/periodCounter.ts","webpack://github_info/./src/components/Card/styles.module.css?1dfa","components/Card/Card.tsx","components/Card/fileText.ts","webpack://github_info/./src/ui/CloseButton/styles.module.css?1f8d","ui/CloseButton/CloseButton.tsx","utils/dateFormatter.ts"],"sourcesContent":["export const periodCounter = (dataCreated: Date): string => {\n  const currentDayDuration = new Date().getTime();\n  const dataCreatedDuration = dataCreated.getTime();\n  const duration = currentDayDuration - dataCreatedDuration;\n\n  const years = Math.floor(duration / 1000 / 60 / 60 / 24 / 365.25);\n  const months = Math.floor(\n    (duration - years * 365.25 * 24 * 60 * 60 * 1000) /\n      1000 /\n      60 /\n      60 /\n      24 /\n      30,\n  );\n  const days = Math.floor(\n    (duration -\n      years * 365.25 * 24 * 60 * 60 * 1000 -\n      months * 30 * 24 * 60 * 60 * 1000) /\n      1000 /\n      60 /\n      60 /\n      24,\n  );\n\n  const yearsStr = years > 1 ? `${years} years` : `${years} year`;\n\n  let monthsStr = '';\n  if (months === 0) {\n    monthsStr = '';\n  } else if (months === 1) {\n    monthsStr = `${months} month`;\n  } else {\n    monthsStr = `${months} months`;\n  }\n\n  let daysStr = '';\n  if (days === 0) {\n    daysStr = 'ago';\n  } else if (days === 1) {\n    daysStr = `and ${days} day ago`;\n  } else {\n    daysStr = `and ${days} days ago`;\n  }\n\n  if (years >= 1) {\n    return `${yearsStr} ${monthsStr} ${daysStr}`;\n  }\n  if (months >= 1) {\n    return `${monthsStr} ${daysStr}`;\n  }\n  return `${daysStr}`;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"styles_card__q1XHp\",\"cardElement\":\"styles_cardElement__elbfR\",\"cardPhotoWrapper\":\"styles_cardPhotoWrapper__XJJ2J\",\"cardFollowersWrapper\":\"styles_cardFollowersWrapper__2K9Vl\",\"cardFollowersUnit\":\"styles_cardFollowersUnit__S+GVb\",\"cardSubElem\":\"styles_cardSubElem__ElnRT\",\"cardSubElemCreate\":\"styles_cardSubElemCreate__pRlwn\",\"cardLogin\":\"styles_cardLogin__o0yAQ\",\"cardUserInfo\":\"styles_cardUserInfo__zqfVi\",\"cardUserInfoWrapper\":\"styles_cardUserInfoWrapper__hmBA-\",\"cardUserInfoBtn\":\"styles_cardUserInfoBtn__FPyvJ\",\"closeBtnWrapper\":\"styles_closeBtnWrapper__zGdqX\",\"button\":\"styles_button__QlIOg\",\"star\":\"styles_star__tXtfa\",\"starActive\":\"styles_starActive__bWdPG\",\"downloadBtn\":\"styles_downloadBtn__qU1+N\",\"addNoteBtn\":\"styles_addNoteBtn__YFtKt\",\"buttonActive\":\"styles_buttonActive__GNvZn\",\"tooltip\":\"styles_tooltip__z9OEB\",\"arrow\":\"styles_arrow__Tmvtg\",\"line\":\"styles_line__BgkIO\",\"hide\":\"styles_hide__ecytM\",\"tooltipText\":\"styles_tooltipText__frtHj\"};","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { fileText } from './fileText';\n\nimport { CloseButton } from '../../ui/CloseButton';\nimport { Flex } from '../../ui/Flex';\n\nimport { dateFormatter } from '../../utils/dateFormatter';\nimport { periodCounter } from '../../utils/periodCounter';\n\nimport {\n  fetchFavoriteList,\n  fetchFavoriteListAdd,\n  setFavoriteBtnFlag,\n  setFavoriteUser,\n  setNote,\n} from '../../store/FavoriteReduser/actions/actions';\nimport {\n  favoriteListSelect,\n  isFavoriteUserSelect,\n  isNoteBtnSelect,\n  isNoteSelect,\n  noteSelect,\n} from '../../store/FavoriteReduser/selectors';\nimport { fetchLogin, setCard } from '../../store/SearchReducer/actions/actions';\nimport {\n  fetchUsersListSaga,\n  reposListSaga,\n} from '../../store/SearchReducer/actions/actionsSagas';\nimport {\n  isLoadingSelect,\n  userSelect,\n} from '../../store/SearchReducer/selectors';\n\nimport styles from './styles.module.css';\n\nconst Card: React.FC = (): JSX.Element => {\n  const dispatch = useDispatch();\n\n  const favoriteList = useSelector(favoriteListSelect);\n  const note = useSelector(noteSelect);\n  const user = useSelector(userSelect);\n  const isNote = useSelector(isNoteSelect);\n  const isLoading = useSelector(isLoadingSelect);\n  const isNoteBtn = useSelector(isNoteBtnSelect);\n  const isFavoriteUser = useSelector(isFavoriteUserSelect);\n\n  const onClickCloseBtnHandler = () => {\n    dispatch(setCard(false));\n    dispatch(\n      fetchLogin('', '', '', '', 0, 0, new Date(), '', '', '', 0, '', ''),\n    );\n\n    if (isNote) {\n      dispatch(setNote(false));\n    }\n  };\n\n  const onBtnClickHandler = (requestType: string) => {\n    dispatch(fetchUsersListSaga(requestType));\n  };\n\n  const onReposClickHandler = () => {\n    dispatch(reposListSaga());\n  };\n\n  const onClickAddBtnHandler = () => {\n    if (isFavoriteUser) {\n      const newFavoriteUsersList = favoriteList.filter(\n        (el) => el.name !== user.login,\n      );\n      dispatch(setFavoriteUser(false));\n      dispatch(fetchFavoriteList(newFavoriteUsersList));\n      localStorage.setItem('favorite', JSON.stringify(newFavoriteUsersList));\n    } else {\n      dispatch(setFavoriteUser(true));\n      const newfavoriteUser = { name: user.login };\n      dispatch(fetchFavoriteListAdd(newfavoriteUser));\n      localStorage.setItem(\n        'favorite',\n        JSON.stringify([...favoriteList, newfavoriteUser]),\n      );\n      dispatch(setFavoriteBtnFlag(true));\n    }\n  };\n\n  const onDownloadHandler = () => {\n    let element = document.createElement('a');\n\n    const text = fileText(user, note);\n\n    element.setAttribute(\n      'href',\n      `data:text/plain;charset=utf-8,${encodeURIComponent(text)}`,\n    );\n    element.setAttribute('download', `${user.login}.doc`);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  };\n\n  const addNoteHandler = () => {\n    if (!isNote) {\n      dispatch(setNote(true));\n    }\n  };\n\n  return (\n    <div className={clsx(styles.card, isLoading && styles.hide)}>\n      <aside className={styles.cardElement}>\n        <div className={styles.cardPhotoWrapper}>\n          <img src={user.avatarUrl} alt=\"User's avatar\" />\n        </div>\n      </aside>\n\n      <Flex className={styles.cardElement}>\n        <header className={styles.cardSubElem}>\n          {user.name ? (\n            <a\n              href={`https://github.com/${user.login}`}\n              className={styles.cardLogin}\n            >\n              {user.name} &#40;{user.login}&#41;\n            </a>\n          ) : (\n            <a\n              href={`https://github.com/${user.login}`}\n              className={styles.cardLogin}\n            >\n              {user.login}\n            </a>\n          )}\n        </header>\n\n        {user.company && (\n          <div className={styles.cardSubElem}>\n            <span>Company:&nbsp;</span>\n            <div className={styles.cardUserInfo}>{user.company}</div>\n          </div>\n        )}\n\n        {user.location && (\n          <div className={styles.cardSubElem}>\n            <span>Location:&nbsp;</span>\n            <div className={styles.cardUserInfo}>{user.location}</div>\n          </div>\n        )}\n\n        {user.email && (\n          <div className={styles.cardSubElem}>\n            <span>Email:&nbsp;</span>\n            <a href={`mailto:${user.email}`} className={styles.cardUserInfo}>\n              {user.email}\n            </a>\n          </div>\n        )}\n\n        {user.reposNum ? (\n          <div className={styles.cardSubElem}>\n            <span>Public repositories:&nbsp;</span>\n            <button\n              type=\"button\"\n              className={clsx(styles.cardUserInfo, styles.cardUserInfoBtn)}\n              onClick={onReposClickHandler}\n            >\n              {user.reposNum}\n            </button>\n          </div>\n        ) : (\n          ''\n        )}\n\n        <div className={styles.cardFollowersWrapper}>\n          <div className={styles.cardFollowersUnit}>\n            <span>Followers:&nbsp;</span>\n            <button\n              type=\"button\"\n              className={clsx(styles.cardUserInfo, styles.cardUserInfoBtn)}\n              onClick={() => onBtnClickHandler('followers')}\n            >\n              {user.followersNum}\n            </button>\n          </div>\n\n          <div className={styles.cardFollowersUnit}>\n            <span>Following:&nbsp;</span>\n            <button\n              type=\"button\"\n              className={clsx(styles.cardUserInfo, styles.cardUserInfoBtn)}\n              onClick={() => onBtnClickHandler('following')}\n            >\n              {user.followingNum}\n            </button>\n          </div>\n        </div>\n\n        <div className={clsx(styles.cardSubElem, styles.cardSubElemCreate)}>\n          <span>Created&nbsp;at:&nbsp;</span>\n          <div className={styles.cardUserInfoWrapper}>\n            <div className={styles.cardUserInfo}>\n              {dateFormatter(user.dataCreated)}\n            </div>\n            <div className={styles.cardUserInfo}>\n              ({periodCounter(user.dataCreated)})\n            </div>\n          </div>\n        </div>\n\n        {user.lastActivityDate && (\n          <div className={styles.cardSubElem}>\n            <span>Last&nbsp;activity&nbsp;at:&nbsp;</span>\n            <div className={styles.cardUserInfo}>\n              {dateFormatter(new Date(user.lastActivityDate))}\n            </div>\n          </div>\n        )}\n      </Flex>\n      <div className={styles.closeBtnWrapper}>\n        <button\n          type=\"button\"\n          className={clsx(\n            isNoteBtn && styles.buttonActive,\n            styles.button,\n            styles.addNoteBtn,\n            styles.tooltip,\n          )}\n          onClick={addNoteHandler}\n        >\n          <span>&#9998;</span>\n          <div className={styles.tooltipText}>\n            {isNoteBtn ? 'Show note' : 'Add note'}\n          </div>\n        </button>\n\n        <button\n          type=\"button\"\n          className={clsx(styles.button, styles.downloadBtn, styles.tooltip)}\n          onClick={onDownloadHandler}\n        >\n          <span className={styles.arrow}>&#8595;</span>\n          <div className={styles.line} />\n          <div className={styles.tooltipText}>Download .doc file</div>\n        </button>\n\n        <button\n          type=\"button\"\n          className={clsx(styles.button, styles.tooltip)}\n          onClick={onClickAddBtnHandler}\n        >\n          <span\n            className={clsx(isFavoriteUser && styles.starActive, styles.star)}\n          >\n            &#9733;\n          </span>\n          <div className={styles.tooltipText}>\n            {isFavoriteUser ? 'Remove from favorites' : 'Add to favorites'}\n          </div>\n        </button>\n\n        <CloseButton onClick={onClickCloseBtnHandler} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Card);\n","/* eslint-disable indent */\nimport { dateFormatter } from '../../utils/dateFormatter';\nimport { periodCounter } from '../../utils/periodCounter';\n\nimport { IUser } from '../../model/search/types';\n\nexport const fileText = (user: IUser, note: string) => {\n  const noneVar = '-';\n\n  return `\n    User information report for ${dateFormatter(new Date())}.\n\n\n    Login: ${user.login}, name: ${user.name || noneVar}\n    \n    Followers quantity: ${user.followersNum}. Following quantity: ${\n    user.followingNum\n  }\n\n    Location: ${user.location || noneVar}\n\n    Company: ${user.company || noneVar}\n\n    Email: ${user.email || noneVar}\n\n    Date of creation Github account: ${\n      dateFormatter(user.dataCreated) || noneVar\n    }\n    (${periodCounter(user.dataCreated)})\n\n    Date of last activity on Github: ${\n      (user.lastActivityDate &&\n        dateFormatter(new Date(user.lastActivityDate))) ||\n      noneVar\n    }\n\n    Public repositories quantity: ${user.reposNum || noneVar}\n\n\n    Links.\n    \n    User page: https://github.com/${user.login}\n\n    Repositories: ${user.reposUrl}\n\n    Avatar: ${user.avatarUrl}\n\n    Followers: ${user.followersUrl}\n\n    Following: ${user.followingUrl}\n\n    \n    Your notes:\n\n    \"${note}\"\n    `;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"closeBtn\":\"styles_closeBtn__rMvYi\",\"tooltip\":\"styles_tooltip__YJmbK\",\"tooltipText\":\"styles_tooltipText__j5iU1\"};","import React, { memo } from 'react';\nimport clsx from 'clsx';\n\nimport styles from './styles.module.css';\n\nexport const CloseButton: React.FC<{ onClick: () => void }> = memo(\n  ({ onClick }) => {\n    return (\n      <button\n        className={clsx(styles.closeBtn, styles.tooltip)}\n        type=\"button\"\n        aria-label=\"Close\"\n        onClick={onClick}\n      >\n        <div className={styles.tooltipText}>Close</div>\n      </button>\n    );\n  },\n);\n","export const dateFormatter = (dataCreated: Date): string => {\n  const day =\n    dataCreated.getDate() < 10\n      ? `0${dataCreated.getDate()}`\n      : dataCreated.getDate();\n\n  const month =\n    dataCreated.getMonth() < 9\n      ? `0${dataCreated.getMonth() + 1}`\n      : dataCreated.getMonth() + 1;\n\n  const year = dataCreated.getFullYear();\n\n  return `${day}.${month}.${year}`;\n};\n"],"names":["periodCounter","dataCreated","duration","Date","getTime","years","Math","floor","months","days","yearsStr","monthsStr","daysStr","Card","dispatch","useDispatch","favoriteList","useSelector","favoriteListSelect","note","noteSelect","user","userSelect","isNote","isNoteSelect","isLoading","isLoadingSelect","isNoteBtn","isNoteBtnSelect","isFavoriteUser","isFavoriteUserSelect","onBtnClickHandler","requestType","fetchUsersListSaga","className","clsx","styles","src","avatarUrl","alt","Flex","name","href","login","company","location","email","reposNum","type","onClick","reposListSaga","followersNum","followingNum","dateFormatter","lastActivityDate","setNote","element","document","createElement","text","noneVar","reposUrl","followersUrl","followingUrl","fileText","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","newFavoriteUsersList","filter","el","setFavoriteUser","fetchFavoriteList","localStorage","setItem","JSON","stringify","newfavoriteUser","fetchFavoriteListAdd","setFavoriteBtnFlag","CloseButton","setCard","fetchLogin","memo","day","getDate","month","getMonth","year","getFullYear"],"sourceRoot":""}