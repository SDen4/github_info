{"version":3,"file":"static/js/169.9cceb111.chunk.js","mappings":"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","sources":["utils/timeFormatter.ts","webpack://github_info/./src/components/SearchHistoryList/styles.module.css?ce43","components/SearchHistoryList/SearchHistoryList.tsx","webpack://github_info/./src/ui/CloseButton/styles.module.css?1f8d","ui/CloseButton/CloseButton.tsx","utils/dateFormatter.ts"],"sourcesContent":["export const timeFormatter = (incomeDate: Date): string => {\n  const hour =\n    incomeDate.getHours() < 10\n      ? `0${incomeDate.getHours()}`\n      : incomeDate.getHours();\n\n  const minute =\n    incomeDate.getMinutes() < 10\n      ? `0${incomeDate.getMinutes()}`\n      : incomeDate.getMinutes();\n\n  const second =\n    incomeDate.getSeconds() < 10\n      ? `0${incomeDate.getSeconds()}`\n      : incomeDate.getSeconds();\n\n  return `${hour}:${minute}:${second}`;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"shlWrapper\":\"styles_shlWrapper__+Ty4C\",\"shlButton\":\"styles_shlButton__Geqlx\",\"clearButton\":\"styles_clearButton__SVhnE\",\"listHeader\":\"styles_listHeader__Ugauk\",\"hide\":\"styles_hide__ZwlT5\"};","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { CloseButton } from '../../ui/CloseButton';\nimport { Flex } from '../../ui/Flex';\n\nimport { dateFormatter } from '../../utils/dateFormatter';\nimport { timeFormatter } from '../../utils/timeFormatter';\n\nimport {\n  modalFlag,\n  reposOpenedListFlag,\n  searchHistoryListFlag,\n  userListOpenedFlag,\n} from '../../store/SearchReducer/actions';\nimport { searchSaga } from '../../store/SearchReducer/actionsSagas';\nimport { FavoriteUser } from '$store/FavoriteReduser/types';\nimport { AppStateType } from '$store/RootReducer';\nimport { ISearhHistoryItem } from '$store/SearchReducer/types';\n\nimport styles from './styles.module.css';\n\nconst SearchHistoryList: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const searchList = useSelector<AppStateType, ISearhHistoryItem[]>(\n    (store) => store.search.searchHistory,\n  );\n  const favoritesList = useSelector<AppStateType, FavoriteUser[]>(\n    (store) => store.favorite.favoriteList,\n  );\n  const currentUserLogin = useSelector<AppStateType, string>(\n    (store) => store.search.user.login,\n  );\n  const userListOpened = useSelector<AppStateType, boolean>(\n    (store) => store.search.usersListOpened,\n  );\n  const reposListOpened = useSelector<AppStateType, boolean>(\n    (store) => store.search.reposListOpened,\n  );\n  const isMobile = useSelector<AppStateType, boolean>(\n    (store) => store.search.isMobile,\n  );\n  const loading = useSelector<AppStateType, boolean>(\n    (store) => store.search.loading,\n  );\n\n  const searchHistoriListBtnHandler = (login: string) => {\n    if (login === currentUserLogin) {\n      if (userListOpened) {\n        dispatch(userListOpenedFlag(false));\n      }\n      if (reposListOpened) {\n        dispatch(reposOpenedListFlag(false));\n      }\n      return;\n    }\n    dispatch(searchSaga(login, searchList, isMobile, favoritesList));\n  };\n\n  const closeBtnHandler = () => {\n    dispatch(searchHistoryListFlag(false));\n  };\n\n  const clearBtnHandler = () => {\n    dispatch(\n      modalFlag(\n        true,\n        `Are you sure to delete ${searchList.length > 1 ? 'all' : ''} ${\n          searchList.length > 1 ? `(${searchList.length})` : ''\n        } ${searchList.length > 1 ? 'items' : 'the item'} of search history?`,\n        'search',\n      ),\n    );\n  };\n\n  return (\n    <Flex\n      className={clsx(styles.shlWrapper, isMobile && loading && styles.hide)}\n    >\n      <header className={styles.listHeader}>\n        <h3>Search list</h3>\n        <CloseButton onClick={closeBtnHandler} />\n      </header>\n\n      <ol>\n        {searchList.map((el, i) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <li key={`${el.login} + ${i}`}>\n            <button\n              className={styles.shlButton}\n              type=\"button\"\n              onClick={() => searchHistoriListBtnHandler(el.login)}\n            >\n              {el.login}\n            </button>\n            <span>{` (${dateFormatter(\n              new Date(el.dateOfSearch),\n            )}, ${timeFormatter(new Date(el.dateOfSearch))})`}</span>\n          </li>\n        ))}\n      </ol>\n\n      <button\n        className={styles.clearButton}\n        type=\"button\"\n        onClick={clearBtnHandler}\n      >\n        Delete history\n      </button>\n    </Flex>\n  );\n};\n\nexport default memo(SearchHistoryList);\n","// extracted by mini-css-extract-plugin\nexport default {\"closeBtn\":\"styles_closeBtn__rMvYi\",\"tooltip\":\"styles_tooltip__YJmbK\",\"tooltipText\":\"styles_tooltipText__j5iU1\"};","import React, { memo } from 'react';\nimport clsx from 'clsx';\n\nimport styles from './styles.module.css';\n\nexport interface IProps {\n  onClick: () => void;\n}\n\nexport const CloseButton: React.FC<IProps> = memo(({ onClick }) => {\n  return (\n    <button\n      className={clsx(styles.closeBtn, styles.tooltip)}\n      type=\"button\"\n      aria-label=\"Close\"\n      onClick={onClick}\n    >\n      <div className={styles.tooltipText}>Close</div>\n    </button>\n  );\n});\n","export const dateFormatter = (dataCreated: Date): string => {\n  const day =\n    dataCreated.getDate() < 10\n      ? `0${dataCreated.getDate()}`\n      : dataCreated.getDate();\n\n  const month =\n    dataCreated.getMonth() < 9\n      ? `0${dataCreated.getMonth() + 1}`\n      : dataCreated.getMonth() + 1;\n\n  const year = dataCreated.getFullYear();\n\n  return `${day}.${month}.${year}`;\n};\n"],"names":["timeFormatter","incomeDate","hour","getHours","minute","getMinutes","second","getSeconds","SearchHistoryList","dispatch","useDispatch","searchList","useSelector","store","search","searchHistory","favoritesList","favorite","favoriteList","currentUserLogin","user","login","userListOpened","usersListOpened","reposListOpened","isMobile","loading","Flex","className","clsx","styles","CloseButton","onClick","searchHistoryListFlag","map","el","i","type","userListOpenedFlag","reposOpenedListFlag","searchSaga","searchHistoriListBtnHandler","dateFormatter","Date","dateOfSearch","modalFlag","length","memo","dataCreated","day","getDate","month","getMonth","year","getFullYear"],"sourceRoot":""}