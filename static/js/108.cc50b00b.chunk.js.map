{"version":3,"file":"static/js/108.cc50b00b.chunk.js","mappings":"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","sources":["utils/periodCounter.ts","webpack://github_info/./src/components/Card/styles.module.css?1dfa","components/Card/Card.tsx","components/Card/fileText.ts","webpack://github_info/./src/ui/CloseButton/styles.module.css?1f8d","ui/CloseButton/CloseButton.tsx","utils/dateFormatter.ts"],"sourcesContent":["export const periodCounter = (dataCreated: Date): string => {\n  const currentDayDuration = new Date().getTime();\n  const dataCreatedDuration = dataCreated.getTime();\n  const duration = currentDayDuration - dataCreatedDuration;\n\n  const years = Math.floor(duration / 1000 / 60 / 60 / 24 / 365.25);\n  const months = Math.floor(\n    (duration - years * 365.25 * 24 * 60 * 60 * 1000) /\n      1000 /\n      60 /\n      60 /\n      24 /\n      30,\n  );\n  const days = Math.floor(\n    (duration -\n      years * 365.25 * 24 * 60 * 60 * 1000 -\n      months * 30 * 24 * 60 * 60 * 1000) /\n      1000 /\n      60 /\n      60 /\n      24,\n  );\n\n  const yearsStr = years > 1 ? `${years} years` : `${years} year`;\n\n  let monthsStr = '';\n  if (months === 0) {\n    monthsStr = '';\n  } else if (months === 1) {\n    monthsStr = `${months} month`;\n  } else {\n    monthsStr = `${months} months`;\n  }\n\n  let daysStr = '';\n  if (days === 0) {\n    daysStr = 'ago';\n  } else if (days === 1) {\n    daysStr = `and ${days} day ago`;\n  } else {\n    daysStr = `and ${days} days ago`;\n  }\n\n  if (years >= 1) {\n    return `${yearsStr} ${monthsStr} ${daysStr}`;\n  }\n  if (months >= 1) {\n    return `${monthsStr} ${daysStr}`;\n  }\n  return `${daysStr}`;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"styles_card__q1XHp\",\"cardElement\":\"styles_cardElement__elbfR\",\"cardPhotoWrapper\":\"styles_cardPhotoWrapper__XJJ2J\",\"cardFollowersWrapper\":\"styles_cardFollowersWrapper__2K9Vl\",\"cardFollowersUnit\":\"styles_cardFollowersUnit__S+GVb\",\"cardSubElem\":\"styles_cardSubElem__ElnRT\",\"cardSubElemCreate\":\"styles_cardSubElemCreate__pRlwn\",\"cardLogin\":\"styles_cardLogin__o0yAQ\",\"cardUserInfo\":\"styles_cardUserInfo__zqfVi\",\"cardUserInfoWrapper\":\"styles_cardUserInfoWrapper__hmBA-\",\"cardUserInfoBtn\":\"styles_cardUserInfoBtn__FPyvJ\",\"closeBtnWrapper\":\"styles_closeBtnWrapper__zGdqX\",\"button\":\"styles_button__QlIOg\",\"star\":\"styles_star__tXtfa\",\"starActive\":\"styles_starActive__bWdPG\",\"downloadBtn\":\"styles_downloadBtn__qU1+N\",\"addNoteBtn\":\"styles_addNoteBtn__YFtKt\",\"buttonActive\":\"styles_buttonActive__GNvZn\",\"tooltip\":\"styles_tooltip__z9OEB\",\"arrow\":\"styles_arrow__Tmvtg\",\"line\":\"styles_line__BgkIO\",\"hide\":\"styles_hide__ecytM\",\"tooltipText\":\"styles_tooltipText__frtHj\"};","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { fileText } from './fileText';\n\nimport { CloseButton } from '../../ui/CloseButton';\nimport { Flex } from '../../ui/Flex';\n\nimport { dateFormatter } from '../../utils/dateFormatter';\nimport { periodCounter } from '../../utils/periodCounter';\n\nimport {\n  favoriteUserFlag,\n  fetchFavoriteList,\n  fetchFavoriteListAdd,\n  noteFlag,\n  setFavoriteBtnFlag,\n} from '../../store/FavoriteReduser/actions';\nimport { cardOpenedFlag, fetchLogin } from '../../store/SearchReducer/actions';\nimport {\n  fetchUsersListSaga,\n  reposListSaga,\n} from '../../store/SearchReducer/actionsSagas';\nimport { FavoriteUser } from '$store/FavoriteReduser/types';\nimport { AppStateType } from '$store/RootReducer';\nimport { UserType } from '$store/SearchReducer/types';\n\nimport styles from './styles.module.css';\n\nconst Card: React.FC = (): JSX.Element => {\n  const dispatch = useDispatch();\n\n  const user = useSelector<AppStateType, UserType>(\n    (store) => store.search.user,\n  );\n  const favoriteList = useSelector<AppStateType, FavoriteUser[]>(\n    (store) => store.favorite.favoriteList,\n  );\n  const favoriteUser = useSelector<AppStateType, boolean>(\n    (store) => store.favorite.favoriteUser,\n  );\n  const noteBtnFlag = useSelector<AppStateType, boolean>(\n    (store) => store.favorite.noteBtnFlag,\n  );\n  const note = useSelector<AppStateType, string>(\n    (store) => store.favorite.note,\n  );\n  const noteStoreFlag = useSelector<AppStateType, boolean>(\n    (store) => store.favorite.noteFlag,\n  );\n  const loading = useSelector<AppStateType, boolean>(\n    (store) => store.search.loading,\n  );\n\n  const onClickCloseBtnHandler = () => {\n    dispatch(cardOpenedFlag(false));\n    dispatch(\n      fetchLogin('', '', '', '', 0, 0, new Date(), '', '', '', 0, '', ''),\n    );\n\n    if (noteStoreFlag) {\n      dispatch(noteFlag(false));\n    }\n  };\n\n  const onBtnClickHandler = (requestType: string) => {\n    dispatch(fetchUsersListSaga(user.login, requestType));\n  };\n\n  const onReposClickHandler = () => {\n    dispatch(reposListSaga(user.login));\n  };\n\n  const onClickAddBtnHandler = () => {\n    if (favoriteUser) {\n      const newFavoriteUsersList = favoriteList.filter(\n        (el) => el.name !== user.login,\n      );\n      dispatch(favoriteUserFlag(false));\n      dispatch(fetchFavoriteList(newFavoriteUsersList));\n      localStorage.setItem('favorite', JSON.stringify(newFavoriteUsersList));\n    } else {\n      dispatch(favoriteUserFlag(true));\n      const newfavoriteUser = { name: user.login };\n      dispatch(fetchFavoriteListAdd(newfavoriteUser));\n      localStorage.setItem(\n        'favorite',\n        JSON.stringify([...favoriteList, newfavoriteUser]),\n      );\n      dispatch(setFavoriteBtnFlag(true));\n    }\n  };\n\n  const onDownloadHandler = () => {\n    let element = document.createElement('a');\n\n    const text = fileText(user, note);\n\n    element.setAttribute(\n      'href',\n      `data:text/plain;charset=utf-8,${encodeURIComponent(text)}`,\n    );\n    element.setAttribute('download', `${user.login}.doc`);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  };\n\n  const addNoteHandler = () => {\n    if (!noteStoreFlag) {\n      dispatch(noteFlag(true));\n    }\n  };\n\n  return (\n    <div className={clsx(styles.card, loading && styles.hide)}>\n      <aside className={styles.cardElement}>\n        <div className={styles.cardPhotoWrapper}>\n          <img src={user.avatarUrl} alt=\"User's avatar\" />\n        </div>\n      </aside>\n\n      <Flex className={styles.cardElement}>\n        <header className={styles.cardSubElem}>\n          {user.name ? (\n            <a\n              href={`https://github.com/${user.login}`}\n              className={styles.cardLogin}\n            >\n              {user.name} &#40;{user.login}&#41;\n            </a>\n          ) : (\n            <a\n              href={`https://github.com/${user.login}`}\n              className={styles.cardLogin}\n            >\n              {user.login}\n            </a>\n          )}\n        </header>\n\n        {user.company && (\n          <div className={styles.cardSubElem}>\n            <span>Company:&nbsp;</span>\n            <div className={styles.cardUserInfo}>{user.company}</div>\n          </div>\n        )}\n\n        {user.location && (\n          <div className={styles.cardSubElem}>\n            <span>Location:&nbsp;</span>\n            <div className={styles.cardUserInfo}>{user.location}</div>\n          </div>\n        )}\n\n        {user.email && (\n          <div className={styles.cardSubElem}>\n            <span>Email:&nbsp;</span>\n            <a href={`mailto:${user.email}`} className={styles.cardUserInfo}>\n              {user.email}\n            </a>\n          </div>\n        )}\n\n        {user.reposNum ? (\n          <div className={styles.cardSubElem}>\n            <span>Public repositories:&nbsp;</span>\n            <button\n              type=\"button\"\n              className={clsx(styles.cardUserInfo, styles.cardUserInfoBtn)}\n              onClick={onReposClickHandler}\n            >\n              {user.reposNum}\n            </button>\n          </div>\n        ) : (\n          ''\n        )}\n\n        <div className={styles.cardFollowersWrapper}>\n          <div className={styles.cardFollowersUnit}>\n            <span>Followers:&nbsp;</span>\n            <button\n              type=\"button\"\n              className={clsx(styles.cardUserInfo, styles.cardUserInfoBtn)}\n              onClick={() => onBtnClickHandler('followers')}\n            >\n              {user.followersNum}\n            </button>\n          </div>\n\n          <div className={styles.cardFollowersUnit}>\n            <span>Following:&nbsp;</span>\n            <button\n              type=\"button\"\n              className={clsx(styles.cardUserInfo, styles.cardUserInfoBtn)}\n              onClick={() => onBtnClickHandler('following')}\n            >\n              {user.followingNum}\n            </button>\n          </div>\n        </div>\n\n        <div className={clsx(styles.cardSubElem, styles.cardSubElemCreate)}>\n          <span>Created&nbsp;at:&nbsp;</span>\n          <div className={styles.cardUserInfoWrapper}>\n            <div className={styles.cardUserInfo}>\n              {dateFormatter(user.dataCreated)}\n            </div>\n            <div className={styles.cardUserInfo}>\n              ({periodCounter(user.dataCreated)})\n            </div>\n          </div>\n        </div>\n\n        {user.lastActivityDate && (\n          <div className={styles.cardSubElem}>\n            <span>Last&nbsp;activity&nbsp;at:&nbsp;</span>\n            <div className={styles.cardUserInfo}>\n              {dateFormatter(new Date(user.lastActivityDate))}\n            </div>\n          </div>\n        )}\n      </Flex>\n      <div className={styles.closeBtnWrapper}>\n        <button\n          type=\"button\"\n          className={clsx(\n            noteBtnFlag && styles.buttonActive,\n            styles.button,\n            styles.addNoteBtn,\n            styles.tooltip,\n          )}\n          onClick={addNoteHandler}\n        >\n          <span>&#9998;</span>\n          <div className={styles.tooltipText}>\n            {noteBtnFlag ? 'Show note' : 'Add note'}\n          </div>\n        </button>\n\n        <button\n          type=\"button\"\n          className={clsx(styles.button, styles.downloadBtn, styles.tooltip)}\n          onClick={onDownloadHandler}\n        >\n          <span className={styles.arrow}>&#8595;</span>\n          <div className={styles.line} />\n          <div className={styles.tooltipText}>Download .doc file</div>\n        </button>\n\n        <button\n          type=\"button\"\n          className={clsx(styles.button, styles.tooltip)}\n          onClick={onClickAddBtnHandler}\n        >\n          <span\n            className={clsx(favoriteUser && styles.starActive, styles.star)}\n          >\n            &#9733;\n          </span>\n          <div className={styles.tooltipText}>\n            {favoriteUser ? 'Remove from favorites' : 'Add to favorites'}\n          </div>\n        </button>\n\n        <CloseButton onClick={onClickCloseBtnHandler} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Card);\n","/* eslint-disable indent */\nimport { dateFormatter } from '../../utils/dateFormatter';\nimport { periodCounter } from '../../utils/periodCounter';\n\nimport { UserType } from '../../store/SearchReducer/types';\n\nexport const fileText = (user: UserType, note: string) => {\n  const noneVar = '-';\n\n  return `\n    User information report for ${dateFormatter(new Date())}.\n\n\n    Login: ${user.login}, name: ${user.name || noneVar}\n    \n    Followers quantity: ${user.followersNum}. Following quantity: ${\n    user.followingNum\n  }\n\n    Location: ${user.location || noneVar}\n\n    Company: ${user.company || noneVar}\n\n    Email: ${user.email || noneVar}\n\n    Date of creation Github account: ${\n      dateFormatter(user.dataCreated) || noneVar\n    }\n    (${periodCounter(user.dataCreated)})\n\n    Date of last activity on Github: ${\n      (user.lastActivityDate &&\n        dateFormatter(new Date(user.lastActivityDate))) ||\n      noneVar\n    }\n\n    Public repositories quantity: ${user.reposNum || noneVar}\n\n\n    Links.\n    \n    User page: https://github.com/${user.login}\n\n    Repositories: ${user.reposUrl}\n\n    Avatar: ${user.avatarUrl}\n\n    Followers: ${user.followersUrl}\n\n    Following: ${user.followingUrl}\n\n    \n    Your notes:\n\n    \"${note}\"\n    `;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"closeBtn\":\"styles_closeBtn__rMvYi\",\"tooltip\":\"styles_tooltip__YJmbK\",\"tooltipText\":\"styles_tooltipText__j5iU1\"};","import React, { memo } from 'react';\nimport clsx from 'clsx';\n\nimport styles from './styles.module.css';\n\nexport interface IProps {\n  onClick: () => void;\n}\n\nexport const CloseButton: React.FC<IProps> = memo(({ onClick }) => {\n  return (\n    <button\n      className={clsx(styles.closeBtn, styles.tooltip)}\n      type=\"button\"\n      aria-label=\"Close\"\n      onClick={onClick}\n    >\n      <div className={styles.tooltipText}>Close</div>\n    </button>\n  );\n});\n","export const dateFormatter = (dataCreated: Date): string => {\n  const day =\n    dataCreated.getDate() < 10\n      ? `0${dataCreated.getDate()}`\n      : dataCreated.getDate();\n\n  const month =\n    dataCreated.getMonth() < 9\n      ? `0${dataCreated.getMonth() + 1}`\n      : dataCreated.getMonth() + 1;\n\n  const year = dataCreated.getFullYear();\n\n  return `${day}.${month}.${year}`;\n};\n"],"names":["periodCounter","dataCreated","duration","Date","getTime","years","Math","floor","months","days","yearsStr","monthsStr","daysStr","Card","dispatch","useDispatch","user","useSelector","store","search","favoriteList","favorite","favoriteUser","noteBtnFlag","note","noteStoreFlag","noteFlag","loading","onBtnClickHandler","requestType","fetchUsersListSaga","login","className","clsx","styles","src","avatarUrl","alt","Flex","name","href","company","location","email","reposNum","type","onClick","reposListSaga","followersNum","followingNum","dateFormatter","lastActivityDate","element","document","createElement","text","noneVar","reposUrl","followersUrl","followingUrl","fileText","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","newFavoriteUsersList","filter","el","favoriteUserFlag","fetchFavoriteList","localStorage","setItem","JSON","stringify","newfavoriteUser","fetchFavoriteListAdd","setFavoriteBtnFlag","CloseButton","cardOpenedFlag","fetchLogin","memo","day","getDate","month","getMonth","year","getFullYear"],"sourceRoot":""}