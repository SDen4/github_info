{"version":3,"file":"static/js/937.0dbb5e17.chunk.js","mappings":"sOAQaA,EAAgB,SAACC,GAC5B,IAAMC,GAAOC,EAAAA,EAAAA,GAAkBF,EAAWG,YACpCC,GAASF,EAAAA,EAAAA,GAAkBF,EAAWK,cACtCC,GAASJ,EAAAA,EAAAA,GAAkBF,EAAWO,cAC5C,MAAM,GAAN,OAAUN,EAAI,YAAIG,EAAM,YAAIE,EAC9B,E,uCCZA,EAA6B,2BAA7B,EAAoE,0BAApE,EAA4G,4BAA5G,EAAqJ,2BAArJ,EAAuL,qB,SC6BjLE,EAAuB,WAC3B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAeF,EAAAA,EAAAA,IAAYG,EAAAA,IAC3BC,GAAOJ,EAAAA,EAAAA,IAAYK,EAAAA,IACnBC,GAAcN,EAAAA,EAAAA,IAAYO,EAAAA,IAC1BC,GAAcR,EAAAA,EAAAA,IAAYS,EAAAA,IAC1BC,GAAWV,EAAAA,EAAAA,IAAYW,EAAAA,IACvBC,GAAYZ,EAAAA,EAAAA,IAAYa,EAAAA,IAiC9B,OACE,UAACC,EAAA,EAAI,CACHC,WAAWC,EAAAA,EAAAA,GAAKC,EAAmBP,GAAYE,GAAaK,GAAa,WAEzE,oBAAQF,UAAWE,EAAkB,WACnC,wBAAI,iBACJ,SAACC,EAAA,EAAW,CAACC,QAxBK,WACtBtB,GAASuB,EAAAA,EAAAA,KAAc,GACzB,QAyBI,wBACGrB,EAAWsB,KAAI,SAACC,EAAIC,GAAC,OAEpB,2BACE,mBACER,UAAWE,EACXO,KAAK,SACLL,QAAS,kBA/Ce,SAACM,GACnC,GAAIA,IAAUrB,EAAKqB,MAOjB,OANInB,GACFT,GAAS6B,EAAAA,EAAAA,KAAa,SAEpBlB,GACFX,GAAS8B,EAAAA,EAAAA,KAAa,KAI1B9B,GAAS+B,EAAAA,EAAAA,IAAkBH,EAAO1B,EAAYG,GAChD,CAoC2B2B,CAA4BP,EAAGG,MAAM,EAAC,SAEpDH,EAAGG,SAEN,uCAAYK,EAAAA,EAAAA,GACV,IAAIC,KAAKT,EAAGU,eACb,aAAK7C,EAAc,IAAI4C,KAAKT,EAAGU,eAAc,SAAW,UAV/CV,EAAGG,MAAK,cAAMF,GAWrB,OAIT,mBACER,UAAWE,EACXO,KAAK,SACLL,QA5CkB,WACtBtB,GACEoC,EAAAA,EAAAA,IAAS,CACPC,SAAS,EACTC,UAAU,0BAAD,OACPpC,EAAWqC,OAAS,EAAI,MAAQ,GAAE,YAChCrC,EAAWqC,OAAS,EAAC,WAAOrC,EAAWqC,OAAM,KAAM,GAAE,YACvDrC,EAAWqC,OAAS,EAAI,QAAU,WAAU,uBAE9CC,UAAW,WAGjB,EAgC+B,SAC1B,qBAKP,EAEA,GAAeC,EAAAA,EAAAA,MAAK1C,E,6EC7GpB,EAA2B,yBAA3B,EAA8D,wBAA9D,EAAoG,4B,SCIvFsB,EAAiD,SAAH,GAAqB,IAAfC,EAAO,EAAPA,QAC/D,OACE,mBACEJ,WAAWC,EAAAA,EAAAA,GAAKC,EAAiBA,GACjCO,KAAK,SACL,aAAW,QACXL,QAASA,EAAQ,UAEjB,gBAAKJ,UAAWE,EAAmB,SAAC,WAG1C,C,uDCZO,IAAM3B,EAAoB,SAACiD,GAChC,OAAOA,EAAM,GAAE,WAAOA,GAAQC,OAAOD,EACvC,C,qECAaT,EAAgB,SAACW,GAC5B,IAAMC,GAAMpD,EAAAA,EAAAA,GAAkBmD,EAAYE,cACpCC,GAAQtD,EAAAA,EAAAA,GAAkBmD,EAAYI,cAAgB,GACtDC,EAAOL,EAAYM,iBAEzB,MAAM,GAAN,OAAUL,EAAG,YAAIE,EAAK,YAAIE,EAC5B,C","sources":["utils/timeFormatter.ts","webpack://github_info/./src/components/SearchList/styles.module.css?042a","components/SearchList/SearchList.tsx","webpack://github_info/./src/ui/CloseButton/styles.module.css?1f8d","ui/CloseButton/CloseButton.tsx","utils/correctDateNumber.ts","utils/dateFormatter.ts"],"sourcesContent":["import { correctDateNumber } from './correctDateNumber';\n\n/**\n * Time formatter to \"hh.mm.ss\"\n * @param incomeDate - Date\n * @returns string in format \"hh.mm.ss\"\n */\n\nexport const timeFormatter = (incomeDate: Date): string => {\n  const hour = correctDateNumber(incomeDate.getHours());\n  const minute = correctDateNumber(incomeDate.getMinutes());\n  const second = correctDateNumber(incomeDate.getSeconds());\n  return `${hour}:${minute}:${second}`;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"shlWrapper\":\"styles_shlWrapper__venle\",\"shlButton\":\"styles_shlButton__WT4Yt\",\"clearButton\":\"styles_clearButton__t9kv5\",\"listHeader\":\"styles_listHeader__lFw9p\",\"hide\":\"styles_hide__M7AXW\"};","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { CloseButton } from 'ui/CloseButton';\nimport { Flex } from 'ui/Flex';\n\nimport { dateFormatter } from 'utils/dateFormatter';\nimport { timeFormatter } from 'utils/timeFormatter';\n\nimport { favoriteListSelect } from 'selectors/favorite';\nimport {\n  isLoadingSelect,\n  isMobileSelect,\n  isReposListSelect,\n  isUsersListSelect,\n  searchListSelect,\n  userSelect,\n} from 'selectors/search';\n\nimport {\n  setModal,\n  setReposList,\n  setSearchList,\n  setUsersList,\n} from 'store/SearchReducer/actions/actions';\nimport { getGithubUserSaga } from 'store/SearchReducer/actions/actionsSagas';\n\nimport styles from './styles.module.css';\n\nconst SearchList: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const searchList = useSelector(searchListSelect);\n  const favoriteList = useSelector(favoriteListSelect);\n  const user = useSelector(userSelect);\n  const isUsersList = useSelector(isUsersListSelect);\n  const isReposList = useSelector(isReposListSelect);\n  const isMobile = useSelector(isMobileSelect);\n  const isLoading = useSelector(isLoadingSelect);\n\n  const searchHistoriListBtnHandler = (login: string) => {\n    if (login === user.login) {\n      if (isUsersList) {\n        dispatch(setUsersList(false));\n      }\n      if (isReposList) {\n        dispatch(setReposList(false));\n      }\n      return;\n    }\n    dispatch(getGithubUserSaga(login, searchList, favoriteList));\n  };\n\n  const closeBtnHandler = () => {\n    dispatch(setSearchList(false));\n  };\n\n  const clearBtnHandler = () => {\n    dispatch(\n      setModal({\n        isModal: true,\n        modalText: `Are you sure to delete ${\n          searchList.length > 1 ? 'all' : ''\n        } ${searchList.length > 1 ? `(${searchList.length})` : ''} ${\n          searchList.length > 1 ? 'items' : 'the item'\n        } of search history?`,\n        modalType: 'search',\n      }),\n    );\n  };\n\n  return (\n    <Flex\n      className={clsx(styles.shlWrapper, isMobile && isLoading && styles.hide)}\n    >\n      <header className={styles.listHeader}>\n        <h3>Search list</h3>\n        <CloseButton onClick={closeBtnHandler} />\n      </header>\n\n      <ol>\n        {searchList.map((el, i) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <li key={`${el.login} + ${i}`}>\n            <button\n              className={styles.shlButton}\n              type=\"button\"\n              onClick={() => searchHistoriListBtnHandler(el.login)}\n            >\n              {el.login}\n            </button>\n            <span>{` (${dateFormatter(\n              new Date(el.dateOfSearch),\n            )}, ${timeFormatter(new Date(el.dateOfSearch))})`}</span>\n          </li>\n        ))}\n      </ol>\n\n      <button\n        className={styles.clearButton}\n        type=\"button\"\n        onClick={clearBtnHandler}\n      >\n        Delete history\n      </button>\n    </Flex>\n  );\n};\n\nexport default memo(SearchList);\n","// extracted by mini-css-extract-plugin\nexport default {\"closeBtn\":\"styles_closeBtn__rMvYi\",\"tooltip\":\"styles_tooltip__YJmbK\",\"tooltipText\":\"styles_tooltipText__j5iU1\"};","import React from 'react';\nimport clsx from 'clsx';\n\nimport styles from './styles.module.css';\n\nexport const CloseButton: React.FC<{ onClick: () => void }> = ({ onClick }) => {\n  return (\n    <button\n      className={clsx(styles.closeBtn, styles.tooltip)}\n      type=\"button\"\n      aria-label=\"Close\"\n      onClick={onClick}\n    >\n      <div className={styles.tooltipText}>Close</div>\n    </button>\n  );\n};\n","/**\n * Format time od date number from '2' to '02'\n */\n\nexport const correctDateNumber = (num: number): string => {\n  return num < 10 ? `0${num}` : String(num);\n};\n","import { correctDateNumber } from './correctDateNumber';\n\n/**\n * Format dates to \"dd.mm.yyyy\"\n */\n\nexport const dateFormatter = (dataCreated: Date): string => {\n  const day = correctDateNumber(dataCreated.getUTCDate());\n  const month = correctDateNumber(dataCreated.getUTCMonth() + 1);\n  const year = dataCreated.getUTCFullYear();\n\n  return `${day}.${month}.${year}`;\n};\n"],"names":["timeFormatter","incomeDate","hour","correctDateNumber","getHours","minute","getMinutes","second","getSeconds","SearchList","dispatch","useDispatch","searchList","useSelector","searchListSelect","favoriteList","favoriteListSelect","user","userSelect","isUsersList","isUsersListSelect","isReposList","isReposListSelect","isMobile","isMobileSelect","isLoading","isLoadingSelect","Flex","className","clsx","styles","CloseButton","onClick","setSearchList","map","el","i","type","login","setUsersList","setReposList","getGithubUserSaga","searchHistoriListBtnHandler","dateFormatter","Date","dateOfSearch","setModal","isModal","modalText","length","modalType","memo","num","String","dataCreated","day","getUTCDate","month","getUTCMonth","year","getUTCFullYear"],"sourceRoot":""}