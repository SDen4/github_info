{"version":3,"sources":["utils/dateFormatter.ts","components/Card/Card.module.css","utils/periodCounter.ts","components/Card/Card.tsx","components/Card/assets/fileText.ts"],"names":["dateFormatter","dataCreated","day","getDate","month","getMonth","year","getFullYear","module","exports","periodCounter","duration","Date","getTime","years","Math","floor","months","days","yearsStr","monthsStr","daysStr","Card","args","user","favorites","favoriteUserStatus","noteUserStatus","note","noteStoreFlag","dispatch","useDispatch","onBtnClickHandler","requestType","fetchUsersListSaga","login","className","styles","card","cardElement","cardPhotoWrapper","src","avatarUrl","alt","cardSubElem","name","href","cardLogin","company","cardUserInfo","location","email","reposNum","type","clsx","cardUserInfoBtn","onClick","reposListSaga","cardFollowersWrapper","cardFollowersUnit","followersNum","followingNum","cardSubElemCreate","cardUserInfoWrapper","lastActivityDate","closeBtnWrapper","buttonActive","button","addNoteBtn","tooltip","noteFlag","tooltipText","downloadBtn","element","document","createElement","text","noneVar","reposUrl","followersUrl","followingUrl","fileText","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","newFavoriteUsersList","filter","el","favoriteUserFlag","fetchFavoriteList","localStorage","setItem","JSON","stringify","newfavoriteUser","fetchFavoriteListAdd","setFavoriteBtnFlag","starActive","star","CloseButton","cardOPenedFlag","fetchLogin","memo"],"mappings":"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","file":"static/js/5.88bf2703.chunk.js","sourcesContent":["export const dateFormatter = (dataCreated: Date): string => {\n  const day =\n    dataCreated.getDate() < 10\n      ? `0${dataCreated.getDate()}`\n      : dataCreated.getDate();\n\n  const month =\n    dataCreated.getMonth() < 9\n      ? `0${dataCreated.getMonth() + 1}`\n      : dataCreated.getMonth() + 1;\n\n  const year = dataCreated.getFullYear();\n\n  return `${day}.${month}.${year}`;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1eE8R\",\"cardElement\":\"Card_cardElement__AbY4n\",\"cardPhotoWrapper\":\"Card_cardPhotoWrapper__JGmby\",\"cardFollowersWrapper\":\"Card_cardFollowersWrapper__28YGT\",\"cardFollowersUnit\":\"Card_cardFollowersUnit__1Mlfq\",\"cardSubElem\":\"Card_cardSubElem__r5PFf\",\"cardSubElemCreate\":\"Card_cardSubElemCreate__1A5KY\",\"cardLogin\":\"Card_cardLogin__21tpx\",\"cardUserInfo\":\"Card_cardUserInfo__3AMht\",\"cardUserInfoWrapper\":\"Card_cardUserInfoWrapper__1YnO1\",\"cardUserInfoBtn\":\"Card_cardUserInfoBtn__GYyKD\",\"closeBtnWrapper\":\"Card_closeBtnWrapper__3rise\",\"button\":\"Card_button__3MKN6\",\"star\":\"Card_star__IfEy2\",\"starActive\":\"Card_starActive__awoNx\",\"downloadBtn\":\"Card_downloadBtn__1GDkr\",\"addNoteBtn\":\"Card_addNoteBtn__1flEO\",\"buttonActive\":\"Card_buttonActive__1gkQq\",\"tooltip\":\"Card_tooltip__H1TtR\",\"tooltipText\":\"Card_tooltipText__1ogx3\"};","export const periodCounter = (dataCreated: Date): string => {\n  const currentDayDuration = new Date().getTime();\n  const dataCreatedDuration = dataCreated.getTime();\n  const duration = currentDayDuration - dataCreatedDuration;\n\n  const years = Math.floor(duration / 1000 / 60 / 60 / 24 / 365.25);\n  const months = Math.floor(\n    (duration - years * 365.25 * 24 * 60 * 60 * 1000) /\n      1000 /\n      60 /\n      60 /\n      24 /\n      30,\n  );\n  const days = Math.floor(\n    (duration -\n      years * 365.25 * 24 * 60 * 60 * 1000 -\n      months * 30 * 24 * 60 * 60 * 1000) /\n      1000 /\n      60 /\n      60 /\n      24,\n  );\n\n  const yearsStr = years > 1 ? `${years} years` : `${years} year`;\n\n  let monthsStr = '';\n  if (months === 0) {\n    monthsStr = '';\n  } else if (months === 1) {\n    monthsStr = `${months} month`;\n  } else {\n    monthsStr = `${months} months`;\n  }\n\n  let daysStr = '';\n  if (days === 0) {\n    daysStr = 'ago';\n  } else if (days === 1) {\n    daysStr = `and ${days} day ago`;\n  } else {\n    daysStr = `and ${days} days ago`;\n  }\n\n  if (years >= 1) {\n    return `${yearsStr} ${monthsStr} ${daysStr}`;\n  }\n  if (months >= 1) {\n    return `${monthsStr} ${daysStr}`;\n  }\n  return `${daysStr}`;\n};\n","import React, { memo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\n\nimport CloseButton from '../../ui/CloseButton';\n\nimport { dateFormatter } from '../../utils/dateFormatter';\nimport { periodCounter } from '../../utils/periodCounter';\n\nimport { cardOPenedFlag, fetchLogin } from '../../store/SearchReducer/actions';\nimport {\n  fetchUsersListSaga,\n  reposListSaga,\n} from '../../store/SearchReducer/actionsSagas';\n\nimport {\n  favoriteUserFlag,\n  fetchFavoriteList,\n  fetchFavoriteListAdd,\n  noteFlag,\n  setFavoriteBtnFlag,\n} from '../../store/FavoriteReduser/actions';\n\nimport { CardType } from './types';\n\nimport { fileText } from './assets/fileText';\n\nimport styles from './Card.module.css';\n\nconst Card: React.FC<CardType> = ({ ...args }): JSX.Element => {\n  const {\n    user,\n    favorites,\n    favoriteUserStatus,\n    noteUserStatus,\n    note,\n    noteStoreFlag,\n  } = args;\n  const dispatch = useDispatch();\n\n  const onClickCloseBtnHandler = () => {\n    dispatch(cardOPenedFlag(false));\n    dispatch(\n      fetchLogin('', '', '', '', 0, 0, new Date(), '', '', '', 0, '', ''),\n    );\n  };\n\n  const onBtnClickHandler = (requestType: string) => {\n    dispatch(fetchUsersListSaga(user.login, requestType));\n  };\n\n  const onReposClickHandler = () => {\n    dispatch(reposListSaga(user.login));\n  };\n\n  const onClickAddBtnHandler = () => {\n    if (favoriteUserStatus) {\n      const newFavoriteUsersList = favorites.filter(\n        (el) => el.name !== user.login,\n      );\n      dispatch(favoriteUserFlag(false));\n      dispatch(fetchFavoriteList(newFavoriteUsersList));\n      localStorage.setItem('favorite', JSON.stringify(newFavoriteUsersList));\n    } else {\n      dispatch(favoriteUserFlag(true));\n      const newfavoriteUser = { name: user.login };\n      dispatch(fetchFavoriteListAdd(newfavoriteUser));\n      localStorage.setItem(\n        'favorite',\n        JSON.stringify([...favorites, newfavoriteUser]),\n      );\n      dispatch(setFavoriteBtnFlag(true));\n    }\n  };\n\n  const onDownloadHandler = () => {\n    let element = document.createElement('a');\n\n    const text = fileText(user, note);\n\n    element.setAttribute(\n      'href',\n      `data:text/plain;charset=utf-8,${encodeURIComponent(text)}`,\n    );\n    element.setAttribute('download', `${user.login}.doc`);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  };\n\n  const addNoteHandler = () => {\n    if (!noteStoreFlag) {\n      dispatch(noteFlag(true));\n    }\n  };\n\n  return (\n    <div className={styles.card}>\n      <aside className={styles.cardElement}>\n        <div className={styles.cardPhotoWrapper}>\n          <img src={user.avatarUrl} alt=\"User's avatar\" />\n        </div>\n      </aside>\n\n      <div className={styles.cardElement}>\n        <header className={styles.cardSubElem}>\n          {user.name ? (\n            <a\n              href={`https://github.com/${user.login}`}\n              className={styles.cardLogin}\n            >\n              {user.name} &#40;{user.login}&#41;\n            </a>\n          ) : (\n            <a\n              href={`https://github.com/${user.login}`}\n              className={styles.cardLogin}\n            >\n              {user.login}\n            </a>\n          )}\n        </header>\n\n        {user.company && (\n          <div className={styles.cardSubElem}>\n            <span>Company:&nbsp;</span>\n            <div className={styles.cardUserInfo}>{user.company}</div>\n          </div>\n        )}\n\n        {user.location && (\n          <div className={styles.cardSubElem}>\n            <span>Location:&nbsp;</span>\n            <div className={styles.cardUserInfo}>{user.location}</div>\n          </div>\n        )}\n\n        {user.email && (\n          <div className={styles.cardSubElem}>\n            <span>Email:&nbsp;</span>\n            <a href={`mailto:${user.email}`} className={styles.cardUserInfo}>\n              {user.email}\n            </a>\n          </div>\n        )}\n\n        {user.reposNum ? (\n          <div className={styles.cardSubElem}>\n            <span>Public repositories:&nbsp;</span>\n            <button\n              type=\"button\"\n              className={clsx(styles.cardUserInfo, styles.cardUserInfoBtn)}\n              onClick={onReposClickHandler}\n            >\n              {user.reposNum}\n            </button>\n          </div>\n        ) : (\n          ''\n        )}\n\n        <div className={styles.cardFollowersWrapper}>\n          <div className={styles.cardFollowersUnit}>\n            <span>Followers:&nbsp;</span>\n            <button\n              type=\"button\"\n              className={clsx(styles.cardUserInfo, styles.cardUserInfoBtn)}\n              onClick={() => onBtnClickHandler('followers')}\n            >\n              {user.followersNum}\n            </button>\n          </div>\n\n          <div className={styles.cardFollowersUnit}>\n            <span>Following:&nbsp;</span>\n            <button\n              type=\"button\"\n              className={clsx(styles.cardUserInfo, styles.cardUserInfoBtn)}\n              onClick={() => onBtnClickHandler('following')}\n            >\n              {user.followingNum}\n            </button>\n          </div>\n        </div>\n\n        <div className={clsx(styles.cardSubElem, styles.cardSubElemCreate)}>\n          <span>Created&nbsp;at:&nbsp;</span>\n          <div className={styles.cardUserInfoWrapper}>\n            <div className={styles.cardUserInfo}>\n              {dateFormatter(user.dataCreated)}\n            </div>\n            <div className={styles.cardUserInfo}>\n              ({periodCounter(user.dataCreated)})\n            </div>\n          </div>\n        </div>\n\n        {user.lastActivityDate && (\n          <div className={styles.cardSubElem}>\n            <span>Last&nbsp;activity&nbsp;at:&nbsp;</span>\n            <div className={styles.cardUserInfo}>\n              {dateFormatter(new Date(user.lastActivityDate))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div className={styles.closeBtnWrapper}>\n        <button\n          type=\"button\"\n          className={clsx(\n            noteUserStatus && styles.buttonActive,\n            styles.button,\n            styles.addNoteBtn,\n            styles.tooltip,\n          )}\n          onClick={addNoteHandler}\n        >\n          <span>&#9998;</span>\n          <div className={styles.tooltipText}>\n            {noteUserStatus ? 'Show note' : 'Add note'}\n          </div>\n        </button>\n\n        <button\n          type=\"button\"\n          className={clsx(styles.button, styles.downloadBtn, styles.tooltip)}\n          onClick={onDownloadHandler}\n        >\n          <span>&#10515;</span>\n          <div className={styles.tooltipText}>Download .doc file</div>\n        </button>\n\n        <button\n          type=\"button\"\n          className={clsx(styles.button, styles.tooltip)}\n          onClick={onClickAddBtnHandler}\n        >\n          <span\n            className={clsx(\n              favoriteUserStatus && styles.starActive,\n              styles.star,\n            )}\n          >\n            &#9733;\n          </span>\n          <div className={styles.tooltipText}>\n            {favoriteUserStatus ? 'Remove from favorites' : 'Add to favorites'}\n          </div>\n        </button>\n\n        <CloseButton onClick={onClickCloseBtnHandler} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Card);\n","/* eslint-disable indent */\nimport { UserType } from '../../../store/SearchReducer/types';\nimport { dateFormatter } from '../../../utils/dateFormatter';\nimport { periodCounter } from '../../../utils/periodCounter';\n\nexport const fileText = (user: UserType, note: string) => {\n  const noneVar = '-';\n\n  return `\n    User information report for ${dateFormatter(new Date())}.\n\n\n    Login: ${user.login}, name: ${user.name || noneVar}\n    \n    Followers quantity: ${user.followersNum}. Following quantity: ${\n    user.followingNum\n  }\n\n    Location: ${user.location || noneVar}\n\n    Company: ${user.company || noneVar}\n\n    Email: ${user.email || noneVar}\n\n    Date of creation Github account: ${\n      dateFormatter(user.dataCreated) || noneVar\n    }\n    (${periodCounter(user.dataCreated)})\n\n    Date of last activity on Github: ${\n      (user.lastActivityDate &&\n        dateFormatter(new Date(user.lastActivityDate))) ||\n      noneVar\n    }\n\n    Public repositories quantity: ${user.reposNum || noneVar}\n\n\n    Links.\n    \n    User page: https://github.com/${user.login}\n\n    Repositories: ${user.reposUrl}\n\n    Avatar: ${user.avatarUrl}\n\n    Followers: ${user.followersUrl}\n\n    Following: ${user.followingUrl}\n\n    \n    Your notes:\n\n    \"${note}\"\n    `;\n};\n"],"sourceRoot":""}