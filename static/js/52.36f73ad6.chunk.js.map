{"version":3,"file":"static/js/52.36f73ad6.chunk.js","mappings":"oOACA,EAA+B,6BAA/B,EAAoE,sBAApE,EAAwG,4BAAxG,EAAsJ,gC,SCsBhJA,EAAkB,WACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAOF,EAAAA,EAAAA,IAAYG,EAAAA,IAEnBC,EAAgB,SAACC,GACjBA,GACW,WAATH,GACFL,GAASS,EAAAA,EAAAA,KAAsB,IAC/BT,GAASU,EAAAA,EAAAA,IAAgB,KACzBC,aAAaC,WAAW,UACN,aAATP,IACTL,GAASa,EAAAA,EAAAA,KAAiB,IAC1Bb,GAASc,EAAAA,EAAAA,KAAiB,IAC1Bd,GAASe,EAAAA,EAAAA,IAAkB,KAC3BJ,aAAaC,WAAW,aAE1BZ,GAASgB,EAAAA,EAAAA,KAAU,EAAO,GAAI,YAE9BhB,GAASgB,EAAAA,EAAAA,KAAU,EAAO,GAAI,UAEjC,EAED,OACE,SAACC,EAAA,EAAD,CAAMC,UAAWC,EAAjB,UACE,iBAAKD,UAAWC,EAAhB,WACE,0BAAOjB,KACP,iBAAKgB,UAAWC,EAAhB,WACE,mBAAQd,KAAK,SAASe,QAAS,kBAAMb,GAAc,EAApB,EAA/B,qBAGA,mBAAQF,KAAK,SAASe,QAAS,kBAAMb,GAAc,EAApB,EAA/B,wBAIF,gBAAKW,UAAWC,EAAhB,UACE,SAACE,EAAA,EAAD,CAAaD,QAAS,kBAAMb,GAAc,EAApB,UAK/B,EAED,GAAee,EAAAA,EAAAA,MAAKvB,E,+EClEpB,EAA2B,yBAA3B,EAA8D,wBAA9D,EAAoG,4B,SCQvFsB,GAAgCC,EAAAA,EAAAA,OAAK,YAAkB,IAAfF,EAAc,EAAdA,QACnD,OACE,mBACEF,WAAWK,EAAAA,EAAAA,GAAKJ,EAAiBA,GACjCd,KAAK,SACL,aAAW,QACXe,QAASA,EAJX,UAME,gBAAKF,UAAWC,EAAhB,oBAGL,G","sources":["webpack://github_info/./src/components/Modal/styles.module.css?45f9","components/Modal/Modal.tsx","webpack://github_info/./src/ui/CloseButton/styles.module.css?1f8d","ui/CloseButton/CloseButton.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalWrapper\":\"styles_modalWrapper__nYVMz\",\"modal\":\"styles_modal__BYLoV\",\"btnsWrapper\":\"styles_btnsWrapper__hI9PB\",\"closeBtnWrapper\":\"styles_closeBtnWrapper__03Isx\"};","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { CloseButton } from '../../ui/CloseButton';\nimport { Flex } from '../../ui/Flex';\n\nimport {\n  favoriteListFlag,\n  favoriteUserFlag,\n  fetchFavoriteList,\n} from '../../store/FavoriteReduser/actions/actions';\nimport {\n  fetchAllHistory,\n  modalFlag,\n  searchHistoryListFlag,\n} from '../../store/SearchReducer/actions/actions';\nimport {\n  modalTypeSelect,\n  textModalSelect,\n} from '../../store/SearchReducer/selectors';\n\nimport styles from './styles.module.css';\n\nconst Modal: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const textModal = useSelector(textModalSelect);\n  const type = useSelector(modalTypeSelect);\n\n  const onBtnsHandler = (delStatus: boolean) => {\n    if (delStatus) {\n      if (type === 'search') {\n        dispatch(searchHistoryListFlag(false));\n        dispatch(fetchAllHistory([]));\n        localStorage.removeItem('saves');\n      } else if (type === 'favorite') {\n        dispatch(favoriteListFlag(false));\n        dispatch(favoriteUserFlag(false));\n        dispatch(fetchFavoriteList([]));\n        localStorage.removeItem('favorite');\n      }\n      dispatch(modalFlag(false, '', 'search'));\n    } else {\n      dispatch(modalFlag(false, '', 'search'));\n    }\n  };\n\n  return (\n    <Flex className={styles.modalWrapper}>\n      <div className={styles.modal}>\n        <span>{textModal}</span>\n        <div className={styles.btnsWrapper}>\n          <button type=\"button\" onClick={() => onBtnsHandler(true)}>\n            Delete\n          </button>\n          <button type=\"button\" onClick={() => onBtnsHandler(false)}>\n            Cansel\n          </button>\n        </div>\n        <div className={styles.closeBtnWrapper}>\n          <CloseButton onClick={() => onBtnsHandler(false)} />\n        </div>\n      </div>\n    </Flex>\n  );\n};\n\nexport default memo(Modal);\n","// extracted by mini-css-extract-plugin\nexport default {\"closeBtn\":\"styles_closeBtn__rMvYi\",\"tooltip\":\"styles_tooltip__YJmbK\",\"tooltipText\":\"styles_tooltipText__j5iU1\"};","import React, { memo } from 'react';\nimport clsx from 'clsx';\n\nimport styles from './styles.module.css';\n\nexport interface IProps {\n  onClick: () => void;\n}\n\nexport const CloseButton: React.FC<IProps> = memo(({ onClick }) => {\n  return (\n    <button\n      className={clsx(styles.closeBtn, styles.tooltip)}\n      type=\"button\"\n      aria-label=\"Close\"\n      onClick={onClick}\n    >\n      <div className={styles.tooltipText}>Close</div>\n    </button>\n  );\n});\n"],"names":["Modal","dispatch","useDispatch","textModal","useSelector","textModalSelect","type","modalTypeSelect","onBtnsHandler","delStatus","searchHistoryListFlag","fetchAllHistory","localStorage","removeItem","favoriteListFlag","favoriteUserFlag","fetchFavoriteList","modalFlag","Flex","className","styles","onClick","CloseButton","memo","clsx"],"sourceRoot":""}