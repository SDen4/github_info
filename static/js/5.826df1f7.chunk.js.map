{"version":3,"sources":["components/FavoriteList/FavoriteList.tsx","ui/CloseButton/CloseButton.module.css","ui/CloseButton/CloseButton.tsx","components/FavoriteList/FavoriteList.module.css"],"names":["FavoriteList","dispatch","useDispatch","favoriteList","useSelector","store","favorite","searchList","search","searchHistory","currentUserLogin","user","login","userListOpened","usersListOpened","reposListOpened","isMobile","loading","useState","deleteModal","setDeleteModal","deletedElem","setDeletedElem","Flex","className","clsx","styles","shlWrapper","hide","listHeader","CloseButton","onClick","favoriteListFlag","list","map","el","itemWrapper","shlButton","type","userListOpenedFlag","reposOpenedListFlag","searchSaga","searchHistoriListBtnHandler","name","note","icon","deleteListItemBtn","tooltip","delElem","tooltipText","clearButton","modalFlag","length","miniModal","deletedUserLogin","btnsWrapper","newFavoriteUsersList","filter","fetchFavoriteList","localStorage","setItem","JSON","stringify","favoriteUserFlag","deleteBtnHandler","memo","module","exports","closeBtn"],"mappings":"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","file":"static/js/5.826df1f7.chunk.js","sourcesContent":["import React, { memo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { Flex } from '../../ui/Flex';\nimport CloseButton from '../../ui/CloseButton';\n\nimport {\n  modalFlag,\n  reposOpenedListFlag,\n  userListOpenedFlag,\n} from '../../store/SearchReducer/actions';\nimport { searchSaga } from '../../store/SearchReducer/actionsSagas';\nimport {\n  favoriteListFlag,\n  favoriteUserFlag,\n  fetchFavoriteList,\n} from '../../store/FavoriteReduser/actions';\n\nimport { AppStateType } from '../../store/RootReducer';\nimport { FavoriteUser } from '../../store/FavoriteReduser/types';\nimport { ISearhHistoryItem } from '../../store/SearchReducer/types';\n\nimport styles from './FavoriteList.module.css';\n\nconst FavoriteList: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const favoriteList = useSelector<AppStateType, FavoriteUser[]>(\n    (store) => store.favorite.favoriteList,\n  );\n  const searchList = useSelector<AppStateType, ISearhHistoryItem[]>(\n    (store) => store.search.searchHistory,\n  );\n  const currentUserLogin = useSelector<AppStateType, string>(\n    (store) => store.search.user.login,\n  );\n  const userListOpened = useSelector<AppStateType, boolean>(\n    (store) => store.search.usersListOpened,\n  );\n  const reposListOpened = useSelector<AppStateType, boolean>(\n    (store) => store.search.reposListOpened,\n  );\n  const isMobile = useSelector<AppStateType, boolean>(\n    (store) => store.search.isMobile,\n  );\n  const loading = useSelector<AppStateType, boolean>(\n    (store) => store.search.loading,\n  );\n\n  const [deleteModal, setDeleteModal] = useState<boolean>(false);\n  const [deletedElem, setDeletedElem] = useState<string>('');\n\n  const closeBtnHandler = () => {\n    dispatch(favoriteListFlag(false));\n  };\n\n  const searchHistoriListBtnHandler = (login: string) => {\n    if (login === currentUserLogin) {\n      if (userListOpened) {\n        dispatch(userListOpenedFlag(false));\n      }\n      if (reposListOpened) {\n        dispatch(reposOpenedListFlag(false));\n      }\n      return;\n    }\n    dispatch(searchSaga(login, searchList, isMobile, favoriteList));\n  };\n\n  const clearBtnHandler = () => {\n    dispatch(\n      modalFlag(\n        true,\n        `Are you sure to delete ${favoriteList.length > 1 ? 'all' : ''} your ${\n          favoriteList.length > 1 ? `(${favoriteList.length})` : ''\n        } favorite ${favoriteList.length > 1 ? 'users' : 'user'}?`,\n        'favorite',\n      ),\n    );\n  };\n\n  const openDeleteModal = (delElem: string) => {\n    setDeleteModal(true);\n    setDeletedElem(delElem);\n  };\n\n  const deleteBtnHandler = (delElem: string) => {\n    const newFavoriteUsersList = favoriteList.filter(\n      (el) => el.name !== delElem,\n    );\n    dispatch(fetchFavoriteList(newFavoriteUsersList));\n    localStorage.setItem('favorite', JSON.stringify(newFavoriteUsersList));\n    if (currentUserLogin === delElem) {\n      dispatch(favoriteUserFlag(false));\n    }\n    setDeleteModal(false);\n    setDeletedElem('');\n  };\n\n  const cancelDelete = () => {\n    setDeleteModal(false);\n    setDeletedElem('');\n  };\n\n  // const onDownloadHandler = () => {\n  // let element = document.createElement('a');\n  // const usersArr = favoriteList.map((el) => {\n  //   console.log(el);\n  //   return fileText(el, el.note);\n  // });\n  // const text = fileText(user, note);\n  // element.setAttribute(\n  //   'href',\n  //   `data:text/plain;charset=utf-8,${encodeURIComponent(text)}`,\n  // );\n  // element.setAttribute('download', `${user.login}.doc`);\n  // element.style.display = 'none';\n  // document.body.appendChild(element);\n  // element.click();\n  // document.body.removeChild(element);\n  // };\n\n  return (\n    <Flex\n      className={clsx(styles.shlWrapper, isMobile && loading && styles.hide)}\n    >\n      <div className={styles.listHeader}>\n        <h3>Favorite list</h3>\n        <CloseButton onClick={closeBtnHandler} />\n      </div>\n      {/* <button\n          type=\"button\"\n          className={clsx(styles.button, styles.downloadBtn, styles.tooltip)}\n          onClick={onDownloadHandler}\n        >\n          <span>&#10515;</span>\n          <div className={clsx(styles.tooltipText, styles.tooltipTextDownload)}>\n            Download list\n          </div>\n        </button> */}\n\n      <ol className={styles.list}>\n        {favoriteList.map((el) => (\n          <li key={el.name}>\n            <div className={styles.itemWrapper}>\n              <button\n                className={styles.shlButton}\n                type=\"button\"\n                onClick={() => searchHistoriListBtnHandler(el.name)}\n              >\n                {el.name}\n              </button>\n\n              {el.note && <div className={styles.icon}>&#9998;</div>}\n\n              <button\n                type=\"button\"\n                className={clsx(styles.deleteListItemBtn, styles.tooltip)}\n                onClick={() => openDeleteModal(el.name)}\n              >\n                <div className={styles.tooltipText}>Delete</div>\n              </button>\n            </div>\n          </li>\n        ))}\n      </ol>\n\n      <button\n        className={styles.clearButton}\n        type=\"button\"\n        onClick={clearBtnHandler}\n      >\n        Delete all favorite users\n      </button>\n\n      {deleteModal && (\n        <Flex className={styles.miniModal}>\n          <span>\n            Are you sure to delete user{' '}\n            <span className={styles.deletedUserLogin}>{deletedElem}</span> from\n            favorite list?\n          </span>\n          <div className={styles.btnsWrapper}>\n            <button type=\"button\" onClick={() => deleteBtnHandler(deletedElem)}>\n              Delete\n            </button>\n            <button type=\"button\" onClick={() => cancelDelete()}>\n              Cansel\n            </button>\n          </div>\n        </Flex>\n      )}\n    </Flex>\n  );\n};\n\nexport default memo(FavoriteList);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"closeBtn\":\"CloseButton_closeBtn__1TnKA\",\"tooltip\":\"CloseButton_tooltip__ZMtiB\",\"tooltipText\":\"CloseButton_tooltipText__2zv1M\"};","import React, { memo } from 'react';\nimport clsx from 'clsx';\n\nimport styles from './CloseButton.module.css';\n\nexport interface IProps {\n  onClick: () => void;\n}\n\nconst CloseButton: React.FC<IProps> = ({ onClick }) => {\n  return (\n    <button\n      className={clsx(styles.closeBtn, styles.tooltip)}\n      type=\"button\"\n      aria-label=\"Close\"\n      onClick={onClick}\n    >\n      <div className={styles.tooltipText}>Close</div>\n    </button>\n  );\n};\n\nexport default memo(CloseButton);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shlWrapper\":\"FavoriteList_shlWrapper__3V_gW\",\"list\":\"FavoriteList_list__2QGkZ\",\"itemWrapper\":\"FavoriteList_itemWrapper__2s9iZ\",\"shlButton\":\"FavoriteList_shlButton__2f6sJ\",\"clearButton\":\"FavoriteList_clearButton__1Gswu\",\"deleteListItemBtn\":\"FavoriteList_deleteListItemBtn__3v20o\",\"miniModal\":\"FavoriteList_miniModal__1ywE8\",\"btnsWrapper\":\"FavoriteList_btnsWrapper__kMS9P\",\"deletedUserLogin\":\"FavoriteList_deletedUserLogin__2poIW\",\"icon\":\"FavoriteList_icon__2KEFF\",\"tooltip\":\"FavoriteList_tooltip__3XDot\",\"tooltipText\":\"FavoriteList_tooltipText__kS8vW\",\"downloadBtn\":\"FavoriteList_downloadBtn__1Y5nZ\",\"tooltipTextDownload\":\"FavoriteList_tooltipTextDownload__2RGyT\",\"listHeader\":\"FavoriteList_listHeader__1bpEX\",\"hide\":\"FavoriteList_hide__3uErZ\"};"],"sourceRoot":""}