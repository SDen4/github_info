{"version":3,"sources":["store/FavoriteReduser/constants.ts","view/Root/Root.module.css","components/Note/Note.module.css","store/SearchReducer/actionsSagas.ts","components/Modal/Modal.module.css","components/SearchForm/SearchForm.module.css","ui/CloseButton/CloseButton.module.css","components/StartMobile/StartMobile.module.css","components/FavoriteButton/FavoriteButton.module.css","components/Error/Error.module.css","ui/SubmitButton/SubmitButton.module.css","components/SearchHistoryHeader/SearchHistoryHeader.module.css","ui/Loader/Loader.module.css","ui/CloseButton/CloseButton.tsx","store/SearchReducer/actions.ts","store/SearchReducer/constants.ts","constants/searchConstants.ts","store/SearchReducer/SearchReducer.ts","store/FavoriteReduser/FavoriteReducer.ts","store/RootReducer.ts","api/API.ts","store/SearchReducer/sagas/SearchSaga.ts","store/SearchReducer/sagas/FetchUsersListSaga.ts","store/SearchReducer/sagas/GetLocalHistorySaga.ts","store/SearchReducer/sagas/ReposListSaga.ts","store/FavoriteReduser/sagas/GetFavoriteListSaga.ts","store/SearchReducer/sagas/InitFetchSaga.ts","store/RootSaga.ts","components/Note/Note.tsx","components/Error/Error.tsx","components/Modal/Modal.tsx","ui/SubmitButton/SubmitButton.tsx","components/SearchForm/SearchForm.tsx","components/StartMobile/StartMobile.tsx","components/FavoriteButton/FavoriteButton.tsx","components/SearchHistoryHeader/SearchHistoryHeader.tsx","ui/Loader/Loader.tsx","store/SearchReducer/selectors/selectors.ts","store/FavoriteReduser/selectors/selectors.ts","view/Root/Root.tsx","App/App.tsx","index.tsx","store/FavoriteReduser/actions.ts"],"names":["FAVORITE_BTN_FLAG","FAVORITE_LIST_SAGA","FAVORITE_LIST_FLAG","FAVORITE_LIST_ADD","FAVORITE_LIST","FAVORITE_USER_FLAG","NOTE_FLAG","NOTE_BTN_FLAG","NOTE_SAVE","module","exports","searchSaga","login","history","isMobile","favoritesList","type","CONST","fetchUsersListSaga","requestType","getLocalHistorySaga","reposListSaga","searhInitFetchSaga","CloseButton","onClick","className","clsx","styles","closeBtn","tooltip","tooltipText","memo","fetchLogin","name","followers_url","following_url","followers","following","created_at","avatar_url","company","email","public_repos","repos_url","location","lastActivityDate","cardOpenedFlag","loadingFlag","errorFlag","userListOpenedFlag","userListFlag","fetchUsersList","usersList","lastRequestType","fetchSearhHistory","searchHistory","searchHistoryListFlag","fetchAllHistory","allSearchHistory","fetchReposList","reposList","reposOpenedListFlag","reposListFlag","modalFlag","text","modalType","searhStart","searchIsMobile","searchIsMobileStart","isMobileStart","SEARCH_LOGIN_SAGA","SEARCH_INIT_SAGA","FETCH_ALL_HISTORY","FETCH_SEARCH_HISTORY","SEARCH_HISTORY_LIST_FLAG","SEARCH_HISTORY_MODAL_FLAG","GET_LOCAL_HISTORY_SAGA","FETCH_LOGIN","FETCH_USERS_LIST","FETCH_USERS_LIST_SAGA","USERS_LIST_OPENED_FLAG","CARD_OPEN_FLAG","LOADING","ERROR","REPOS_LIST_SAGA","FETCH_REPOS_LIST","REPOS_OPENED_LIST_FLAG","SEARCH_START","SEARCH_IS_MOBILE","SEARCH_IS_MOBILE_START","searchUserDefault","followersUrl","followingUrl","avatarUrl","followersNum","followingNum","dataCreated","Date","reposNum","reposUrl","initialState","user","usersListOpened","reposListOpened","cardOpened","loading","error","modalText","InitialState","favoriteBtnFlag","favoriteListFlag","favoriteList","favoriteUser","noteFlag","noteBtnFlag","note","RootReducer","combineReducers","search","state","action","favorite","favoriteUserFlag","API","axios","create","baseURL","sagaWorker","SearchSagaWatcher","getUserInfo","a","get","trim","then","res","data","response","getLastActivityDate","catch","console","log","all","put","noteSave","allData","find","el","length","noteToWrite","dateOfSearch","newHistoryItem","localStorage","setItem","JSON","stringify","takeEvery","FetchUsersListSagaWatcher","GetLocalHistorySagaWatcher","parse","getItem","saved","ReposListSagaWatcher","getReposInfo","allRepos","GetFavoriteListSagaWatcher","fetchFavoriteList","InitFetchSagaWatcher","document","documentElement","clientWidth","getFavoriteListSaga","rootSaga","fork","Note","favorites","dispatch","useDispatch","ref","useRef","useEffect","current","focus","useState","value","setValue","isModalOpened","setIsModalOpened","onBtnModalHandler","newfavoriteUserList","map","component","form","onSubmit","event","preventDefault","newfavoriteUser","findUser","index","indexOf","newFavorites","fetchFavoriteListAdd","setFavoriteBtnFlag","onChange","target","formFooter","lettersQuantity","btnsWrapper","buttonDel","buttonUnactive","disabled","noteModal","colorText","btnsModalWrapper","Error","userName","errorWrapper","errorUserInfo","Modal","textModal","onBtnsHandler","delStatus","removeItem","modalWrapper","modal","closeBtnWrapper","SubmitButton","children","button","SearchForm","searchState","currentUser","searchLogin","setsearchLogin","disabledBtn","setDisabledBtn","focusInMobiles","setFocusInMobiles","timer","setTimeout","blur","clearTimeout","toLocaleLowerCase","input","placeholder","textValue","rootBtn","StartMobile","appHeight","startMobileWrap","style","minHeight","button__wrapper","body","requestFullscreen","window","FavoriteButton","starNum","favoriteListStatus","buttonActive","star","SearchHistoryHeader","historyLength","historyBtnStatus","searchHistoryListStatus","shhWrapperActive","shhWrapper","Loader","loaderWrapper","ldsDefault","selectFavorite","createSelector","store","selectSearch","LazySearchHistoryList","React","lazy","LazyFavoriteList","LazyCard","LazyReposList","LazyUsersList","Root","useSelector","setUser","setAppHeight","outerHeight","addEventListener","isCardOpen","isErrorOpen","appContainer","rootWrapper","rootHeader","buttonsWrapper","root","rootSectionLeft","rootSectionSearch","rootSectionRight_Mobile","maxHeight","fallback","favoriteUserStatus","noteUserStatus","noteStoreFlag","users","rootSectionRight","searchList","currentUserLogin","userListOpened","isLoading","App","saga","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","RootSaga","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.da308d3a.chunk.js","sourcesContent":["export const FAVORITE_BTN_FLAG = 'FAVORITE_BTN_FLAG';\nexport const FAVORITE_LIST_SAGA = 'FAVORITE_LIST_SAGA';\nexport const FAVORITE_LIST_FLAG = 'FAVORITE_LIST_FLAG';\nexport const FAVORITE_LIST_ADD = 'FAVORITE_LIST_ADD';\nexport const FAVORITE_LIST = 'FAVORITE_LIST';\nexport const FAVORITE_USER_FLAG = 'FAVORITE_USER_FLAG';\n\nexport const NOTE_FLAG = 'NOTE_FLAG';\nexport const NOTE_BTN_FLAG = 'NOTE_BTN_FLAG';\nexport const NOTE_SAVE = 'NOTE_SAVE';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"Root_appContainer__2HvrE\",\"rootWrapper\":\"Root_rootWrapper__2GyXK\",\"rootHeader\":\"Root_rootHeader__1kA0G\",\"root\":\"Root_root__2kRFx\",\"rootSectionLeft\":\"Root_rootSectionLeft__1CQQB\",\"rootSectionRight\":\"Root_rootSectionRight__1ZIC0\",\"rootSectionRight_Mobile\":\"Root_rootSectionRight_Mobile__2Sks0\",\"rootSectionSearch\":\"Root_rootSectionSearch__f4Xo2\",\"rootBtn\":\"Root_rootBtn__2HD5o\",\"buttonsWrapper\":\"Root_buttonsWrapper__2E3GA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Note_component__2ReX3\",\"form\":\"Note_form__1QeoF\",\"buttonDel\":\"Note_buttonDel__1VWzk\",\"buttonUnactive\":\"Note_buttonUnactive__2L99q\",\"btnsWrapper\":\"Note_btnsWrapper__cu-GV\",\"noteModal\":\"Note_noteModal__3sCjR\",\"btnsModalWrapper\":\"Note_btnsModalWrapper__2Ig-U\",\"colorText\":\"Note_colorText__1zhac\",\"formFooter\":\"Note_formFooter__2rJSt\",\"lettersQuantity\":\"Note_lettersQuantity__36I7a\"};","import { FavoriteUser } from '../FavoriteReduser/types';\nimport { ISearhHistoryItem } from './types';\n\nimport * as CONST from './constants';\n\nexport const searchSaga = (\n  login: string,\n  history: ISearhHistoryItem[],\n  isMobile: boolean,\n  favoritesList?: FavoriteUser[],\n) => {\n  return {\n    type: CONST.SEARCH_LOGIN_SAGA,\n    login,\n    history,\n    isMobile,\n    favoritesList,\n  } as const;\n};\n\nexport const fetchUsersListSaga = (login: string, requestType: string) => {\n  return {\n    type: CONST.FETCH_USERS_LIST_SAGA,\n    login,\n    requestType,\n  } as const;\n};\n\nexport const getLocalHistorySaga = () => {\n  return {\n    type: CONST.GET_LOCAL_HISTORY_SAGA,\n  } as const;\n};\n\nexport const reposListSaga = (login: string) => {\n  return {\n    type: CONST.REPOS_LIST_SAGA,\n    login,\n  } as const;\n};\n\nexport const searhInitFetchSaga = () => {\n  return {\n    type: CONST.SEARCH_INIT_SAGA,\n  } as const;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWrapper\":\"Modal_modalWrapper__VFEZN\",\"modal\":\"Modal_modal__P3_V5\",\"btnsWrapper\":\"Modal_btnsWrapper__1VvdY\",\"closeBtnWrapper\":\"Modal_closeBtnWrapper__2jGIJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SearchForm_form__qWosj\",\"input\":\"SearchForm_input__zWLnu\",\"rootBtn\":\"SearchForm_rootBtn__2YfyK\",\"btnsWrapper\":\"SearchForm_btnsWrapper__9e-6j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"closeBtn\":\"CloseButton_closeBtn__1TnKA\",\"tooltip\":\"CloseButton_tooltip__ZMtiB\",\"tooltipText\":\"CloseButton_tooltipText__2zv1M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"startMobileWrap\":\"StartMobile_startMobileWrap__3Wkjj\",\"button\":\"StartMobile_button__1kzxO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FavoriteButton_button__dHVyF\",\"buttonActive\":\"FavoriteButton_buttonActive__1uWZ_\",\"star\":\"FavoriteButton_star__HPvj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorWrapper\":\"Error_errorWrapper__3Tyi5\",\"errorUserInfo\":\"Error_errorUserInfo__2w7RM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SubmitButton_button__1jVPC\",\"buttonUnactive\":\"SubmitButton_buttonUnactive__4AV-H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shhWrapper\":\"SearchHistoryHeader_shhWrapper__UeD2U\",\"shhWrapperActive\":\"SearchHistoryHeader_shhWrapperActive__13Bdx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderWrapper\":\"Loader_loaderWrapper__7w3wI\",\"ldsDefault\":\"Loader_ldsDefault__14rA4\"};","import React, { memo } from 'react';\nimport clsx from 'clsx';\n\nimport { ICloseButton } from './types';\n\nimport styles from './CloseButton.module.css';\n\nconst CloseButton: React.FC<ICloseButton> = ({ onClick }) => {\n  return (\n    <button\n      className={clsx(styles.closeBtn, styles.tooltip)}\n      type=\"button\"\n      aria-label=\"Close\"\n      onClick={onClick}\n    >\n      <div className={styles.tooltipText}>Close</div>\n    </button>\n  );\n};\n\nexport default memo(CloseButton);\n","/* eslint-disable camelcase */\nimport * as CONST from './constants';\n\nimport { IRepoItem, ISearhHistoryItem, UserInnerType } from './types';\n\nexport const fetchLogin = (\n  name: string,\n  login: string,\n  followers_url: string,\n  following_url: string,\n  followers: number,\n  following: number,\n  created_at: Date,\n  avatar_url?: string,\n  company?: string,\n  email?: string,\n  public_repos?: number,\n  repos_url?: string,\n  location?: string,\n  lastActivityDate?: string,\n) => {\n  return {\n    type: CONST.FETCH_LOGIN,\n    name,\n    login,\n    followers_url,\n    following_url,\n    followers,\n    following,\n    created_at,\n    avatar_url,\n    company,\n    email,\n    public_repos,\n    repos_url,\n    location,\n    lastActivityDate,\n  } as const;\n};\n\nexport const cardOpenedFlag = (cardOpenedFlag: boolean) => {\n  return {\n    type: CONST.CARD_OPEN_FLAG,\n    cardOpenedFlag,\n  } as const;\n};\n\nexport const loadingFlag = (loadingFlag: boolean) => {\n  return {\n    type: CONST.LOADING,\n    loadingFlag,\n  } as const;\n};\n\nexport const errorFlag = (errorFlag: boolean) => {\n  return {\n    type: CONST.ERROR,\n    errorFlag,\n  } as const;\n};\n\nexport const userListOpenedFlag = (userListFlag: boolean) => {\n  return {\n    type: CONST.USERS_LIST_OPENED_FLAG,\n    userListFlag,\n  } as const;\n};\n\nexport const fetchUsersList = (\n  usersList: UserInnerType[],\n  lastRequestType: string,\n) => {\n  return {\n    type: CONST.FETCH_USERS_LIST,\n    usersList,\n    lastRequestType,\n  } as const;\n};\n\nexport const fetchSearhHistory = (searchHistory: ISearhHistoryItem) => {\n  return {\n    type: CONST.FETCH_SEARCH_HISTORY,\n    searchHistory,\n  } as const;\n};\n\nexport const searchHistoryListFlag = (searchHistoryListFlag: boolean) => {\n  return {\n    type: CONST.SEARCH_HISTORY_LIST_FLAG,\n    searchHistoryListFlag,\n  } as const;\n};\n\nexport const fetchAllHistory = (allSearchHistory: ISearhHistoryItem[]) => {\n  return {\n    type: CONST.FETCH_ALL_HISTORY,\n    allSearchHistory,\n  } as const;\n};\n\nexport const fetchReposList = (reposList: IRepoItem[]) => {\n  return {\n    type: CONST.FETCH_REPOS_LIST,\n    reposList,\n  } as const;\n};\n\nexport const reposOpenedListFlag = (reposListFlag: boolean) => {\n  return {\n    type: CONST.REPOS_OPENED_LIST_FLAG,\n    reposListFlag,\n  } as const;\n};\n\nexport const modalFlag = (\n  modalFlag: boolean,\n  text: string,\n  modalType: 'search' | 'favorite',\n) => {\n  return {\n    type: CONST.SEARCH_HISTORY_MODAL_FLAG,\n    modalFlag,\n    text,\n    modalType,\n  } as const;\n};\n\nexport const searhStart = () => {\n  return {\n    type: CONST.SEARCH_START,\n  } as const;\n};\n\nexport const searchIsMobile = (isMobile: boolean) => {\n  return {\n    type: CONST.SEARCH_IS_MOBILE,\n    isMobile,\n  } as const;\n};\n\nexport const searchIsMobileStart = (isMobileStart: boolean) => {\n  return {\n    type: CONST.SEARCH_IS_MOBILE_START,\n    isMobileStart,\n  } as const;\n};\n\ntype fetchLoginType = ReturnType<typeof fetchLogin>;\ntype cardOPenedFlagType = ReturnType<typeof cardOpenedFlag>;\ntype loadingFlagType = ReturnType<typeof loadingFlag>;\ntype errorFlagType = ReturnType<typeof errorFlag>;\ntype userListOpenedFlagType = ReturnType<typeof userListOpenedFlag>;\ntype fetchUsersListType = ReturnType<typeof fetchUsersList>;\ntype fetchSearhHistoryType = ReturnType<typeof fetchSearhHistory>;\ntype searchHistoryListFlagType = ReturnType<typeof searchHistoryListFlag>;\ntype fetchAllHistoryType = ReturnType<typeof fetchAllHistory>;\ntype fetchReposListType = ReturnType<typeof fetchReposList>;\ntype reposOpenedListFlagType = ReturnType<typeof reposOpenedListFlag>;\ntype modalFlagType = ReturnType<typeof modalFlag>;\ntype searhStartType = ReturnType<typeof searhStart>;\ntype searchIsMobileType = ReturnType<typeof searchIsMobile>;\ntype searchIsMobileStartType = ReturnType<typeof searchIsMobileStart>;\n\nexport type ActionsType =\n  | fetchLoginType\n  | cardOPenedFlagType\n  | loadingFlagType\n  | errorFlagType\n  | userListOpenedFlagType\n  | fetchUsersListType\n  | fetchSearhHistoryType\n  | searchHistoryListFlagType\n  | fetchAllHistoryType\n  | fetchReposListType\n  | reposOpenedListFlagType\n  | modalFlagType\n  | searhStartType\n  | searchIsMobileType\n  | searchIsMobileStartType;\n","export const SEARCH_LOGIN_SAGA = 'SEARCH_LOGIN_SAGA';\nexport const SEARCH_INIT_SAGA = 'SEARCH_INIT_SAGA';\n\nexport const FETCH_ALL_HISTORY = 'FETCH_ALL_HISTORY';\nexport const FETCH_SEARCH_HISTORY = 'FETCH_SEARCH_HISTORY';\nexport const SEARCH_HISTORY_LIST_FLAG = 'SEARCH_HISTORY_LIST_FLAG';\nexport const SEARCH_HISTORY_MODAL_FLAG = 'SEARCH_HISTORY_MODAL_FLAG';\n\nexport const GET_LOCAL_HISTORY_SAGA = 'GET_LOCAL_HISTORY_SAGA';\n\nexport const FETCH_LOGIN = 'FETCH_LOGIN';\nexport const FETCH_USERS_LIST = 'FETCH_USERS_LIST';\nexport const FETCH_USERS_LIST_SAGA = 'FETCH_USERS_LIST_SAGA';\nexport const USERS_LIST_OPENED_FLAG = 'USERS_LIST_OPENED_FLAG';\n\nexport const CARD_OPEN_FLAG = 'CARD_OPEN_FLAG';\n\nexport const LOADING = 'LOADING';\n\nexport const ERROR = 'ERROR';\n\nexport const REPOS_LIST_SAGA = 'REPOS_LIST_SAGA';\nexport const FETCH_REPOS_LIST = 'FETCH_REPOS_LIST';\nexport const REPOS_OPENED_LIST_FLAG = 'REPOS_OPENED_LIST_FLAG';\n\nexport const SEARCH_START = 'SEARCH_START';\n\nexport const SEARCH_IS_MOBILE = 'SEARCH_IS_MOBILE';\nexport const SEARCH_IS_MOBILE_START = 'SEARCH_IS_MOBILE_START';\n","export const searchUserDefault = {\n  name: '',\n  login: '',\n  followersUrl: '',\n  followingUrl: '',\n  avatarUrl: '',\n  followersNum: 0,\n  followingNum: 0,\n  dataCreated: new Date(),\n  company: '',\n  email: '',\n  reposNum: 0,\n  reposUrl: '',\n  location: '',\n  lastActivityDate: '',\n};\n\nexport const mobileWidth = 480;\n","import * as CONST from './constants';\nimport { searchUserDefault } from '../../constants/searchConstants';\n\nimport { InitialStateType } from './types';\n\nimport { ActionsType } from './actions';\n\nconst initialState: InitialStateType = {\n  user: searchUserDefault,\n  usersList: [],\n  reposList: [],\n  lastRequestType: '',\n  usersListOpened: false,\n  reposListOpened: false,\n  cardOpened: false,\n  loading: false,\n  error: false,\n  searchHistory: [],\n  searchHistoryListFlag: false,\n  modalFlag: false,\n  modalText: '',\n  modalType: 'search',\n  isMobile: false,\n  isMobileStart: true,\n};\n\nexport const SearchReducer = (\n  state = initialState,\n  action: ActionsType,\n): typeof state => {\n  switch (action.type) {\n    case CONST.FETCH_LOGIN:\n      return {\n        ...state,\n        user: {\n          name: action.name,\n          login: action.login,\n          followersUrl: action.followers_url,\n          followingUrl: action.following_url,\n          avatarUrl: action.avatar_url,\n          followersNum: action.followers,\n          followingNum: action.following,\n          dataCreated: action.created_at,\n          company: action.company,\n          email: action.email,\n          reposNum: action.public_repos,\n          reposUrl: action.repos_url,\n          location: action.location,\n          lastActivityDate: action.lastActivityDate,\n        },\n      };\n\n    case CONST.CARD_OPEN_FLAG:\n      return { ...state, cardOpened: action.cardOpenedFlag };\n\n    case CONST.LOADING:\n      return { ...state, loading: action.loadingFlag };\n\n    case CONST.ERROR:\n      return { ...state, error: action.errorFlag };\n\n    case CONST.USERS_LIST_OPENED_FLAG:\n      return { ...state, usersListOpened: action.userListFlag };\n\n    case CONST.FETCH_USERS_LIST:\n      return {\n        ...state,\n        usersList: action.usersList,\n        lastRequestType: action.lastRequestType,\n      };\n\n    case CONST.FETCH_SEARCH_HISTORY:\n      return {\n        ...state,\n        searchHistory: [...state.searchHistory, action.searchHistory],\n      };\n\n    case CONST.FETCH_ALL_HISTORY:\n      return { ...state, searchHistory: action.allSearchHistory };\n\n    case CONST.SEARCH_HISTORY_LIST_FLAG:\n      return { ...state, searchHistoryListFlag: action.searchHistoryListFlag };\n\n    case CONST.FETCH_REPOS_LIST:\n      return { ...state, reposList: action.reposList };\n\n    case CONST.REPOS_OPENED_LIST_FLAG:\n      return { ...state, reposListOpened: action.reposListFlag };\n\n    case CONST.SEARCH_HISTORY_MODAL_FLAG:\n      return {\n        ...state,\n        modalFlag: action.modalFlag,\n        modalText: action.text,\n        modalType: action.modalType,\n      };\n\n    case CONST.SEARCH_START:\n      return {\n        ...state,\n        error: false,\n        usersListOpened: false,\n        cardOpened: false,\n        reposListOpened: false,\n        reposList: [],\n        loading: true,\n      };\n\n    case CONST.SEARCH_IS_MOBILE:\n      return { ...state, isMobile: action.isMobile };\n\n    case CONST.SEARCH_IS_MOBILE_START:\n      return { ...state, isMobileStart: action.isMobileStart };\n\n    default:\n      return state;\n  }\n};\n","import * as CONST from './constants';\n\nimport { InitialFavoriteStateType } from './types';\n\nimport { ActionsType } from './actions';\n\nconst InitialState: InitialFavoriteStateType = {\n  favoriteBtnFlag: false,\n  favoriteListFlag: false,\n  favoriteList: [],\n  favoriteUser: false,\n  noteFlag: false,\n  noteBtnFlag: false,\n  note: '',\n};\n\nexport const FavoriteReducer = (\n  state = InitialState,\n  action: ActionsType,\n): typeof state => {\n  switch (action.type) {\n    case CONST.FAVORITE_BTN_FLAG:\n      return { ...state, favoriteBtnFlag: action.favoriteBtnFlag };\n\n    case CONST.FAVORITE_LIST:\n      return { ...state, favoriteList: action.favoriteList };\n\n    case CONST.FAVORITE_LIST_ADD:\n      return {\n        ...state,\n        favoriteList: [...state.favoriteList, action.favoriteList],\n      };\n\n    case CONST.FAVORITE_LIST_FLAG:\n      return { ...state, favoriteListFlag: action.favoriteListFlag };\n\n    case CONST.FAVORITE_USER_FLAG:\n      return { ...state, favoriteUser: action.favoriteUserFlag };\n\n    case CONST.NOTE_FLAG:\n      return { ...state, noteFlag: action.noteFlag };\n\n    case CONST.NOTE_SAVE:\n      return { ...state, note: action.note };\n\n    case CONST.NOTE_BTN_FLAG:\n      return { ...state, noteBtnFlag: action.noteBtnFlag };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { SearchReducer } from './SearchReducer/SearchReducer';\nimport { FavoriteReducer } from './FavoriteReduser/FavoriteReducer';\n\nexport const RootReducer = combineReducers({\n  search: SearchReducer,\n  favorite: FavoriteReducer,\n});\n\nexport type AppStateType = ReturnType<typeof RootReducer>;\n","import axios from 'axios';\n\nexport const API = axios.create({\n  baseURL: 'https://api.github.com/users/',\n});\n","import { takeEvery, put, all } from 'redux-saga/effects';\n\nimport { SEARCH_LOGIN_SAGA } from '../constants';\n\nimport {\n  favoriteListFlag,\n  favoriteUserFlag,\n  noteBtnFlag,\n  noteSave,\n} from '../../FavoriteReduser/actions';\nimport {\n  cardOpenedFlag,\n  errorFlag,\n  fetchLogin,\n  fetchSearhHistory,\n  loadingFlag,\n  searchHistoryListFlag,\n  searhStart,\n} from '../actions';\n\nimport { ISearhHistoryItem, SearchSagaWorkerType } from '../types';\n\nimport { API } from '../../../api/API';\n\nasync function getUserInfo(login: string) {\n  const response = await API.get(`${login.trim()}`).then((res) => res.data);\n  return response;\n}\n\nasync function getLastActivityDate(login: string) {\n  const response = await API.get(`${login.trim()}/events`)\n    .then((res) => res.data[0].created_at)\n    // eslint-disable-next-line no-console\n    .catch((error) => console.log(error));\n  return response;\n}\n\nfunction* sagaWorker(action: SearchSagaWorkerType) {\n  try {\n    yield all([put(searhStart()), put(noteSave('')), put(noteBtnFlag(false))]);\n\n    const { allData, lastActivityDate } = yield all({\n      allData: getUserInfo(action.login),\n      lastActivityDate: getLastActivityDate(action.login),\n    });\n\n    yield put(\n      fetchLogin(\n        allData.name,\n        allData.login,\n        allData.followers_url,\n        allData.following_url,\n        allData.followers,\n        allData.following,\n        new Date(allData.created_at),\n        allData.avatar_url,\n        allData.company,\n        allData.email,\n        allData.public_repos,\n        allData.repos_url,\n        allData.location,\n        lastActivityDate,\n      ),\n    );\n\n    if (action.favoritesList?.find((el) => el.name === allData.login)) {\n      yield put(favoriteUserFlag(true));\n    } else {\n      yield put(favoriteUserFlag(false));\n    }\n\n    if (\n      action.favoritesList?.find((el) => el.name === allData.login)?.note\n        ?.length\n    ) {\n      yield put(noteBtnFlag(true));\n\n      const noteToWrite: string = yield action.favoritesList?.find(\n        (el) => el.name === action.login,\n      )?.note;\n\n      yield put(noteSave(noteToWrite));\n    } else {\n      yield put(noteBtnFlag(false));\n    }\n\n    const newHistoryItem: ISearhHistoryItem = yield {\n      login: allData.login,\n      dateOfSearch: new Date(),\n    };\n    yield put(fetchSearhHistory(newHistoryItem));\n    yield localStorage.setItem(\n      'saves',\n      JSON.stringify([...action.history, newHistoryItem]),\n    );\n\n    yield all([put(cardOpenedFlag(true)), put(loadingFlag(false))]);\n\n    // in the end because of input focus in mobiles\n    if (action.isMobile) {\n      yield put(searchHistoryListFlag(false));\n      yield put(favoriteListFlag(false));\n    }\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n    yield all([put(loadingFlag(false)), put(errorFlag(true))]);\n  }\n}\n\nexport function* SearchSagaWatcher() {\n  yield takeEvery(SEARCH_LOGIN_SAGA, sagaWorker);\n}\n","import { takeEvery, put } from 'redux-saga/effects';\n\nimport { FETCH_USERS_LIST_SAGA } from '../constants';\nimport {\n  cardOpenedFlag,\n  fetchUsersList,\n  loadingFlag,\n  userListOpenedFlag,\n} from '../actions';\nimport { IFetchUsersListSagaWorker, UserInnerType } from '../types';\n\nimport { API } from '../../../api/API';\n\nasync function getUserInfo(login: string, requestType: string) {\n  const response = await API.get(`${login}/${requestType}`).then(\n    (res) => res.data,\n  );\n  return response;\n}\n\nfunction* sagaWorker(action: IFetchUsersListSagaWorker) {\n  try {\n    yield put(cardOpenedFlag(false));\n    yield put(loadingFlag(true));\n\n    const allData: UserInnerType[] = yield getUserInfo(\n      action.login,\n      action.requestType,\n    );\n\n    yield put(fetchUsersList(allData, action.requestType));\n\n    yield put(loadingFlag(false));\n    yield put(userListOpenedFlag(true));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n    yield put(loadingFlag(false));\n  }\n}\n\nexport function* FetchUsersListSagaWatcher() {\n  yield takeEvery(FETCH_USERS_LIST_SAGA, sagaWorker);\n}\n","import { takeEvery, put } from 'redux-saga/effects';\n\nimport { GET_LOCAL_HISTORY_SAGA } from '../constants';\nimport { fetchAllHistory } from '../actions';\nimport { ISearhHistoryItem } from '../types';\n\nfunction* sagaWorker() {\n  try {\n    const saved: ISearhHistoryItem[] = yield JSON.parse(\n      localStorage.getItem('saves') || '[]',\n    );\n\n    yield put(fetchAllHistory(saved));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n  }\n}\n\nexport function* GetLocalHistorySagaWatcher() {\n  yield takeEvery(GET_LOCAL_HISTORY_SAGA, sagaWorker);\n}\n","import { takeEvery, put } from 'redux-saga/effects';\n\nimport { REPOS_LIST_SAGA } from '../constants';\nimport {\n  cardOpenedFlag,\n  fetchReposList,\n  loadingFlag,\n  reposOpenedListFlag,\n} from '../actions';\nimport { IRepoItem, IReposListSagaWorker } from '../types';\n\nimport { API } from '../../../api/API';\n\nasync function getReposInfo(login: string) {\n  const response = await API.get(`${login}/repos`).then((res) => res.data);\n  return response;\n}\n\nfunction* sagaWorker(action: IReposListSagaWorker) {\n  try {\n    yield put(cardOpenedFlag(false));\n    yield put(loadingFlag(true));\n\n    const allRepos: IRepoItem[] = yield getReposInfo(action.login);\n\n    yield put(fetchReposList(allRepos));\n    yield put(reposOpenedListFlag(true));\n    yield put(loadingFlag(false));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n    yield put(loadingFlag(false));\n  }\n}\n\nexport function* ReposListSagaWatcher() {\n  yield takeEvery(REPOS_LIST_SAGA, sagaWorker);\n}\n","import { takeEvery, put } from 'redux-saga/effects';\n\nimport { fetchFavoriteList } from '../actions';\n\nimport { FAVORITE_LIST_SAGA } from '../constants';\n\nimport { FavoriteUser } from '../types';\n\nfunction* sagaWorker() {\n  try {\n    const saved: FavoriteUser[] = yield JSON.parse(\n      localStorage.getItem('favorite') || '[]',\n    );\n\n    yield put(fetchFavoriteList(saved));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n  }\n}\n\nexport function* GetFavoriteListSagaWatcher() {\n  yield takeEvery(FAVORITE_LIST_SAGA, sagaWorker);\n}\n","import { takeEvery, put, all } from 'redux-saga/effects';\n\nimport { SEARCH_INIT_SAGA } from '../constants';\nimport { mobileWidth } from '../../../constants/searchConstants';\n\nimport { getLocalHistorySaga } from '../actionsSagas';\nimport { errorFlag, loadingFlag, searchIsMobile } from '../actions';\nimport { getFavoriteListSaga } from '../../FavoriteReduser/actions';\n\nfunction* sagaWorker() {\n  try {\n    // detect mobiles\n    const width: number = yield document.documentElement.clientWidth;\n    if (width <= mobileWidth) {\n      yield put(searchIsMobile(true));\n    } else {\n      yield put(searchIsMobile(false));\n    }\n\n    // get elements from localstorage\n    yield put(getLocalHistorySaga());\n    yield put(getFavoriteListSaga());\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n    yield all([put(loadingFlag(false)), put(errorFlag(true))]);\n  }\n}\n\nexport function* InitFetchSagaWatcher() {\n  yield takeEvery(SEARCH_INIT_SAGA, sagaWorker);\n}\n","import { fork, all } from 'redux-saga/effects';\n\nimport { SearchSagaWatcher } from './SearchReducer/sagas/SearchSaga';\nimport { FetchUsersListSagaWatcher } from './SearchReducer/sagas/FetchUsersListSaga';\nimport { GetLocalHistorySagaWatcher } from './SearchReducer/sagas/GetLocalHistorySaga';\nimport { ReposListSagaWatcher } from './SearchReducer/sagas/ReposListSaga';\nimport { GetFavoriteListSagaWatcher } from './FavoriteReduser/sagas/GetFavoriteListSaga';\nimport { InitFetchSagaWatcher } from './SearchReducer/sagas/InitFetchSaga';\n\nexport default function* rootSaga() {\n  yield all([\n    fork(SearchSagaWatcher),\n    fork(FetchUsersListSagaWatcher),\n    fork(GetLocalHistorySagaWatcher),\n    fork(ReposListSagaWatcher),\n    fork(GetFavoriteListSagaWatcher),\n    fork(InitFetchSagaWatcher),\n  ]);\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\n\nimport {\n  favoriteUserFlag,\n  fetchFavoriteList,\n  fetchFavoriteListAdd,\n  noteBtnFlag,\n  noteFlag,\n  noteSave,\n  setFavoriteBtnFlag,\n} from '../../store/FavoriteReduser/actions';\n\nimport { INote } from './types';\n\nimport styles from './Note.module.css';\n\nconst Note: React.FC<INote> = ({ login, favorites, note }) => {\n  const dispatch = useDispatch();\n  const ref: any = useRef();\n\n  useEffect(() => {\n    ref.current.focus();\n  }, []);\n\n  const [value, setValue] = useState<string>(note);\n  const [isModalOpened, setIsModalOpened] = useState<boolean>(false);\n\n  const onChangeHandler: React.ChangeEventHandler<HTMLTextAreaElement> = (\n    event,\n  ) => {\n    if (!event.target.value.trim()) {\n      return;\n    }\n    setValue(event.target.value);\n  };\n\n  const onCancelHandler = () => {\n    dispatch(noteFlag(false));\n    setValue('');\n  };\n\n  const onSubmitHandler = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    if (favorites.find((el) => el.name === login)) {\n      // user is in favorites yet\n\n      dispatch(noteSave(value));\n      dispatch(noteFlag(false));\n      dispatch(noteBtnFlag(true));\n      setValue('');\n\n      const newfavoriteUser = { name: login, note: value };\n      const findUser: any = favorites.find((el) => el.name === login);\n      const index = favorites.indexOf(findUser);\n      const newFavorites = [...favorites];\n      newFavorites[index] = newfavoriteUser;\n\n      dispatch(fetchFavoriteList(newFavorites));\n      localStorage.setItem('favorite', JSON.stringify(newFavorites));\n    } else {\n      // user isn't in favorites yet\n\n      dispatch(noteSave(value));\n      dispatch(noteFlag(false));\n      dispatch(noteBtnFlag(true));\n      setValue('');\n\n      const newfavoriteUser = { name: login, note: value };\n      dispatch(fetchFavoriteListAdd(newfavoriteUser));\n      localStorage.setItem(\n        'favorite',\n        JSON.stringify([...favorites, newfavoriteUser]),\n      );\n\n      dispatch(favoriteUserFlag(true));\n      dispatch(setFavoriteBtnFlag(true));\n    }\n  };\n\n  const onBtnModalHandler = (action: boolean) => {\n    if (action) {\n      setValue('');\n\n      const newfavoriteUserList = favorites.map((el) => {\n        if (el.name === login) {\n          return { name: login };\n        }\n        return el;\n      });\n\n      localStorage.setItem('favorite', JSON.stringify(newfavoriteUserList));\n\n      dispatch(noteSave(''));\n      dispatch(fetchFavoriteList(newfavoriteUserList));\n      dispatch(noteFlag(false));\n      dispatch(noteBtnFlag(false));\n    } else {\n      setIsModalOpened(false);\n    }\n  };\n\n  return (\n    <div className={styles.component}>\n      <form className={styles.form} onSubmit={onSubmitHandler}>\n        <textarea onChange={onChangeHandler} value={value} ref={ref} />\n\n        <footer className={styles.formFooter}>\n          <div className={styles.lettersQuantity}>\n            {value.length ? `Characters: ${value.length}` : ''}\n          </div>\n          <div className={styles.btnsWrapper}>\n            <button type=\"button\" onClick={onCancelHandler}>\n              Cancel\n            </button>\n\n            {value && (\n              <button\n                type=\"button\"\n                className={styles.buttonDel}\n                onClick={() => setIsModalOpened(true)}\n              >\n                Delete\n              </button>\n            )}\n\n            <button\n              type=\"submit\"\n              className={clsx(!value && styles.buttonUnactive)}\n              disabled={!value}\n            >\n              Save and add to favorites\n            </button>\n          </div>\n        </footer>\n      </form>\n\n      {isModalOpened && (\n        <div className={styles.noteModal}>\n          <span>\n            Are you sure to delete the note of{' '}\n            <span className={styles.colorText}>{login}</span>?\n          </span>\n          <div className={styles.btnsModalWrapper}>\n            <button type=\"button\" onClick={() => onBtnModalHandler(true)}>\n              Delete\n            </button>\n            <button type=\"button\" onClick={() => onBtnModalHandler(false)}>\n              Cansel\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Note;\n","import React from 'react';\n\nimport { IError } from './types';\n\nimport styles from './Error.module.css';\n\nconst Error: React.FC<IError> = ({ userName }): JSX.Element => {\n  return (\n    <div className={styles.errorWrapper}>\n      <h2>\n        User\n        <span className={styles.errorUserInfo}> {userName} </span>\n        is not found...\n      </h2>\n    </div>\n  );\n};\n\nexport default Error;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport CloseButton from '../../ui/CloseButton';\n\nimport {\n  fetchAllHistory,\n  searchHistoryListFlag,\n  modalFlag,\n} from '../../store/SearchReducer/actions';\n\nimport { ISearchHistoryModal } from './types';\n\nimport styles from './Modal.module.css';\nimport {\n  favoriteListFlag,\n  favoriteUserFlag,\n  fetchFavoriteList,\n} from '../../store/FavoriteReduser/actions';\n\nconst Modal: React.FC<ISearchHistoryModal> = ({ textModal, type }) => {\n  const dispatch = useDispatch();\n\n  const onBtnsHandler = (delStatus: boolean) => {\n    if (delStatus) {\n      if (type === 'search') {\n        dispatch(searchHistoryListFlag(false));\n        dispatch(fetchAllHistory([]));\n        localStorage.removeItem('saves');\n      } else if (type === 'favorite') {\n        dispatch(favoriteListFlag(false));\n        dispatch(favoriteUserFlag(false));\n        dispatch(fetchFavoriteList([]));\n        localStorage.removeItem('favorite');\n      }\n      dispatch(modalFlag(false, '', 'search'));\n    } else {\n      dispatch(modalFlag(false, '', 'search'));\n    }\n  };\n  return (\n    <div className={styles.modalWrapper}>\n      <div className={styles.modal}>\n        <span>{textModal}</span>\n        <div className={styles.btnsWrapper}>\n          <button type=\"button\" onClick={() => onBtnsHandler(true)}>\n            Delete\n          </button>\n          <button type=\"button\" onClick={() => onBtnsHandler(false)}>\n            Cansel\n          </button>\n        </div>\n        <div className={styles.closeBtnWrapper}>\n          <CloseButton onClick={() => onBtnsHandler(false)} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\n\nimport { IButton } from './types';\n\nimport styles from './SubmitButton.module.css';\n\nconst SubmitButton: React.FC<IButton> = ({ children, disabled }) => {\n  return (\n    <button\n      className={clsx(disabled && styles.buttonUnactive, styles.button)}\n      type=\"submit\"\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default memo(SubmitButton);\n","import React, { useState, useRef, useEffect, memo } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { searchSaga } from '../../store/SearchReducer/actionsSagas';\n\nimport SubmitButton from '../../ui/SubmitButton';\n\nimport { ISearch } from './types';\n\nimport styles from './SearchForm.module.css';\nimport {\n  cardOpenedFlag,\n  reposOpenedListFlag,\n  userListOpenedFlag,\n} from '../../store/SearchReducer/actions';\n\nconst SearchForm: React.FC<ISearch> = ({\n  search,\n  searchState,\n  history,\n  favoritesList,\n  currentUser,\n  isMobile,\n  searchHistoryListFlag,\n  favoriteListFlag,\n  cardOpened,\n}) => {\n  const dispatch = useDispatch();\n\n  const [searchLogin, setsearchLogin] = useState<string>('');\n  const [disabledBtn, setDisabledBtn] = useState(true);\n  const [focusInMobiles, setFocusInMobiles] = useState(false);\n\n  useEffect(() => {\n    if (isMobile) {\n      setFocusInMobiles(\n        !(searchHistoryListFlag || favoriteListFlag || cardOpened),\n      );\n    } else {\n      setFocusInMobiles(true);\n    }\n  }, [cardOpened, favoriteListFlag, isMobile, searchHistoryListFlag]);\n\n  // auto focus on input\n  const ref: any = useRef(null);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (ref?.current) {\n        if (focusInMobiles) {\n          ref.current.focus();\n        } else {\n          ref.current.blur();\n        }\n      }\n      clearTimeout(timer);\n    }, 700);\n  }, [focusInMobiles]);\n\n  const changeTextHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let textValue = event?.target.value;\n    setsearchLogin(textValue);\n\n    if (textValue.trim()) {\n      setDisabledBtn(false);\n    } else {\n      setDisabledBtn(true);\n    }\n  };\n\n  const onSubmitHandler = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    if (searchLogin.toLocaleLowerCase() === currentUser.toLocaleLowerCase()) {\n      setsearchLogin('');\n      setDisabledBtn(true);\n      return;\n    }\n\n    dispatch(searchSaga(searchLogin, history, isMobile, favoritesList));\n    search(searchLogin);\n    setsearchLogin('');\n    setDisabledBtn(true);\n  };\n\n  const backBtnHandler = () => {\n    dispatch(userListOpenedFlag(false));\n    dispatch(reposOpenedListFlag(false));\n    dispatch(cardOpenedFlag(true));\n  };\n\n  return (\n    <form className={styles.form} onSubmit={onSubmitHandler}>\n      <input\n        ref={ref}\n        className={styles.input}\n        type=\"text\"\n        placeholder=\"Enter the github login\"\n        value={searchLogin}\n        onChange={changeTextHandler}\n      />\n\n      <div className={styles.btnsWrapper}>\n        <SubmitButton disabled={disabledBtn}>Search</SubmitButton>\n\n        {isMobile &&\n          (searchState.usersListOpened || searchState.reposListOpened) && (\n            <button\n              type=\"button\"\n              onClick={backBtnHandler}\n              className={styles.rootBtn}\n            >\n              Back\n            </button>\n            // eslint-disable-next-line indent\n          )}\n      </div>\n    </form>\n  );\n};\n\nexport default memo(SearchForm);\n","import React, { memo } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { searchIsMobileStart } from '../../store/SearchReducer/actions';\n\nimport { IStartMobile } from './types';\n\nimport styles from './StartMobile.module.css';\n\nconst StartMobile: React.FC<IStartMobile> = ({ appHeight }): JSX.Element => {\n  const dispatch = useDispatch();\n\n  const onBtnClickHandler = () => {\n    document.body.requestFullscreen();\n\n    const timer = window.setTimeout(() => {\n      dispatch(searchIsMobileStart(false));\n      window.clearTimeout(timer);\n    }, 50);\n  };\n\n  return (\n    <div className={styles.startMobileWrap} style={{ minHeight: appHeight }}>\n      <div className={styles.button__wrapper}>\n        <button\n          type=\"button\"\n          className={styles.button}\n          onClick={onBtnClickHandler}\n        >\n          Go!\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StartMobile);\n","import React, { memo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { favoriteListFlag } from '../../store/FavoriteReduser/actions';\nimport { searchHistoryListFlag } from '../../store/SearchReducer/actions';\n\nimport { IFavoriteButton } from './types';\n\nimport styles from './FavoriteButton.module.css';\n\nconst FavoriteButton: React.FC<IFavoriteButton> = ({\n  starNum,\n  favoriteListStatus,\n}) => {\n  const dispatch = useDispatch();\n\n  const showFavoriteListHandler = () => {\n    if (favoriteListStatus) {\n      dispatch(favoriteListFlag(false));\n    } else {\n      dispatch(favoriteListFlag(true));\n      dispatch(searchHistoryListFlag(false));\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className={clsx(favoriteListStatus && styles.buttonActive, styles.button)}\n      onClick={showFavoriteListHandler}\n    >\n      <span className={styles.star}>&#9733;</span>\n      <span>{starNum}</span>\n    </button>\n  );\n};\n\nexport default memo(FavoriteButton);\n","import React, { memo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { favoriteListFlag } from '../../store/FavoriteReduser/actions';\nimport { searchHistoryListFlag } from '../../store/SearchReducer/actions';\n\nimport { ISearchHistoryHeader } from './types';\n\nimport styles from './SearchHistoryHeader.module.css';\n\nconst SearchHistoryHeader: React.FC<ISearchHistoryHeader> = ({\n  historyLength,\n  historyBtnStatus,\n  searchHistoryListStatus,\n}) => {\n  const dispatch = useDispatch();\n\n  const onSearchHistoryBtnHandler = () => {\n    if (historyBtnStatus) {\n      dispatch(searchHistoryListFlag(false));\n    } else {\n      dispatch(searchHistoryListFlag(true));\n      dispatch(favoriteListFlag(false));\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className={clsx(\n        searchHistoryListStatus && styles.shhWrapperActive,\n        styles.shhWrapper,\n      )}\n      onClick={onSearchHistoryBtnHandler}\n    >\n      Search history <span>({historyLength})</span>\n    </button>\n  );\n};\n\nexport default memo(SearchHistoryHeader);\n","import React from 'react';\n\nimport styles from './Loader.module.css';\n\nconst Loader: React.FC = () => {\n  return (\n    <div className={styles.loaderWrapper}>\n      <div className={styles.ldsDefault}>\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { AppStateType } from '../../../store/RootReducer';\n\nexport const selectFavorite = createSelector(\n  (store: AppStateType) => store.favorite,\n  (favorite) => favorite,\n);\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { AppStateType } from '../../../store/RootReducer';\n\nexport const selectSearch = createSelector(\n  (store: AppStateType) => store.search,\n  (search) => search,\n);\n","import React, { memo, Suspense, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport Note from '../../components/Note';\nimport Error from '../../components/Error';\nimport Modal from '../../components/Modal';\nimport SearchForm from '../../components/SearchForm';\nimport StartMobile from '../../components/StartMobile';\nimport FavoriteButton from '../../components/FavoriteButton';\nimport SearchHistoryHeader from '../../components/SearchHistoryHeader';\n\nimport Loader from '../../ui/Loader';\n\nimport {\n  cardOpenedFlag,\n  reposOpenedListFlag,\n  searchIsMobileStart,\n  userListOpenedFlag,\n} from '../../store/SearchReducer/actions';\nimport { searhInitFetchSaga } from '../../store/SearchReducer/actionsSagas';\nimport { favoriteListFlag } from '../../store/FavoriteReduser/actions';\n\nimport { selectFavorite } from '../../store/SearchReducer/selectors/selectors';\nimport { selectSearch } from '../../store/FavoriteReduser/selectors/selectors';\n\nimport styles from './Root.module.css';\n\nconst LazySearchHistoryList = React.lazy(\n  () => import('../../components/SearchHistoryList'),\n);\nconst LazyFavoriteList = React.lazy(\n  () => import('../../components/FavoriteList'),\n);\nconst LazyCard = React.lazy(() => import('../../components/Card'));\nconst LazyReposList = React.lazy(() => import('../../components/ReposList'));\nconst LazyUsersList = React.lazy(() => import('../../components/UsersList'));\n\nconst Root: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const search = useSelector(selectSearch);\n  const favorite = useSelector(selectFavorite);\n\n  const [user, setUser] = useState<string>('');\n\n  // app height\n  const [appHeight, setAppHeight] = useState<number>(0);\n  useEffect(() => setAppHeight(window.outerHeight), []);\n\n  // resize & height\n  useEffect(() => {\n    if (appHeight !== window.outerHeight) {\n      window.addEventListener(\n        'resize',\n        () => setAppHeight(window.outerHeight),\n        true,\n      );\n    }\n  }, [appHeight]);\n\n  // set fullscreen in case of fullscreenchange\n  useEffect(() => {\n    if (search.isMobileStart) {\n      return;\n    }\n    window.addEventListener(\n      'fullscreenchange',\n      () => dispatch(searchIsMobileStart(true)),\n      true,\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [appHeight]);\n\n  const isCardOpen =\n    (!search.isMobile && search.cardOpened) ||\n    (search.isMobile &&\n      search.cardOpened &&\n      !search.searchHistoryListFlag &&\n      !favorite.favoriteListFlag);\n\n  const isErrorOpen =\n    (!search.isMobile && search.error) ||\n    (search.isMobile &&\n      search.error &&\n      !search.searchHistoryListFlag &&\n      !favorite.favoriteListFlag);\n\n  useEffect(() => {\n    dispatch(searhInitFetchSaga());\n  }, [dispatch]);\n\n  // close favorite list if there are no any items\n  useEffect(() => {\n    if (!favorite.favoriteList.length) {\n      dispatch(favoriteListFlag(false));\n    }\n  }, [dispatch, favorite.favoriteList]);\n\n  const searchFunc = (searchLogin: string) => {\n    setUser(searchLogin);\n  };\n\n  const backBtnHandler = () => {\n    dispatch(userListOpenedFlag(false));\n    dispatch(reposOpenedListFlag(false));\n    dispatch(cardOpenedFlag(true));\n  };\n\n  return (\n    <div className={styles.appContainer}>\n      {search.isMobile && search.isMobileStart ? (\n        <StartMobile appHeight={appHeight} />\n      ) : (\n        <div\n          className={styles.rootWrapper}\n          style={\n            search.isMobile && search.isMobileStart\n              ? { minHeight: appHeight }\n              : {}\n          }\n        >\n          <header className={styles.rootHeader}>\n            <h1>Find github&apos;s user</h1>\n\n            <div className={styles.buttonsWrapper}>\n              {search.searchHistory.length ? (\n                <SearchHistoryHeader\n                  historyLength={search.searchHistory.length}\n                  searchHistoryListStatus={search.searchHistoryListFlag}\n                  historyBtnStatus={search.searchHistoryListFlag}\n                />\n              ) : (\n                ''\n              )}\n              {favorite.favoriteList.length ? (\n                <FavoriteButton\n                  starNum={favorite.favoriteList.length}\n                  favoriteListStatus={favorite.favoriteListFlag}\n                />\n              ) : (\n                ''\n              )}\n            </div>\n          </header>\n\n          <main className={styles.root}>\n            <section className={styles.rootSectionLeft}>\n              <div className={clsx(styles.root, styles.rootSectionSearch)}>\n                <SearchForm\n                  search={searchFunc}\n                  searchState={search}\n                  history={search.searchHistory}\n                  favoritesList={favorite.favoriteList}\n                  currentUser={search.user.login}\n                  isMobile={search.isMobile}\n                  searchHistoryListFlag={search.searchHistoryListFlag}\n                  favoriteListFlag={favorite.favoriteListFlag}\n                  cardOpened={search.cardOpened}\n                />\n\n                {!search.isMobile &&\n                  (search.usersListOpened || search.reposListOpened) && (\n                    <button\n                      type=\"button\"\n                      onClick={backBtnHandler}\n                      className={styles.rootBtn}\n                    >\n                      Back\n                    </button>\n                    // eslint-disable-next-line indent\n                  )}\n              </div>\n\n              {search.loading && <Loader />}\n              {isCardOpen && (\n                <div\n                  className={clsx(\n                    search.isMobile && styles.rootSectionRight_Mobile,\n                  )}\n                  style={{ maxHeight: appHeight - 239 }}\n                >\n                  <Suspense fallback={<Loader />}>\n                    <LazyCard\n                      user={search.user}\n                      favorites={favorite.favoriteList}\n                      favoriteUserStatus={favorite.favoriteUser}\n                      noteUserStatus={favorite.noteBtnFlag}\n                      note={favorite.note}\n                      noteStoreFlag={favorite.noteFlag}\n                    />\n                  </Suspense>\n\n                  {favorite.noteFlag && (\n                    <Note\n                      note={favorite.note}\n                      login={search.user.login}\n                      favorites={favorite.favoriteList}\n                    />\n                  )}\n                </div>\n              )}\n              {search.usersListOpened && (\n                <div\n                  className={clsx(\n                    search.isMobile && styles.rootSectionRight_Mobile,\n                  )}\n                  style={{ maxHeight: appHeight - 239 }}\n                >\n                  <Suspense fallback={<Loader />}>\n                    <LazyUsersList\n                      users={search.usersList}\n                      login={search.user.login}\n                      requestType={search.lastRequestType}\n                      history={search.searchHistory}\n                      isMobile={search.isMobile}\n                    />\n                  </Suspense>\n                </div>\n              )}\n              {search.reposListOpened && (\n                <div\n                  className={clsx(\n                    search.isMobile && styles.rootSectionRight_Mobile,\n                  )}\n                  style={{ maxHeight: appHeight - 239 }}\n                >\n                  <Suspense fallback={<Loader />}>\n                    <LazyReposList reposList={search.reposList} />\n                  </Suspense>\n                </div>\n              )}\n              {isErrorOpen && <Error userName={user} />}\n            </section>\n\n            {search.searchHistoryListFlag && (\n              <section\n                className={clsx(\n                  styles.rootSectionRight,\n                  search.isMobile && styles.rootSectionRight_Mobile,\n                )}\n                style={{ maxHeight: appHeight - 239 }}\n              >\n                <Suspense fallback={<Loader />}>\n                  <LazySearchHistoryList\n                    searchList={search.searchHistory}\n                    favoritesList={favorite.favoriteList}\n                    currentUserLogin={search.user.login}\n                    userListOpened={search.usersListOpened}\n                    reposListOpened={search.reposListOpened}\n                    isMobile={search.isMobile}\n                    isLoading={search.loading}\n                  />\n                </Suspense>\n              </section>\n            )}\n\n            {favorite.favoriteListFlag && (\n              <section\n                className={clsx(\n                  styles.rootSectionRight,\n                  search.isMobile && styles.rootSectionRight_Mobile,\n                )}\n                style={{ maxHeight: appHeight - 239 }}\n              >\n                <Suspense fallback={<Loader />}>\n                  <LazyFavoriteList\n                    favoriteList={favorite.favoriteList}\n                    searchList={search.searchHistory}\n                    currentUserLogin={search.user.login}\n                    userListOpened={search.usersListOpened}\n                    reposListOpened={search.reposListOpened}\n                    isMobile={search.isMobile}\n                    isLoading={search.loading}\n                  />\n                </Suspense>\n              </section>\n            )}\n          </main>\n\n          {search.modalFlag && (\n            <Modal textModal={search.modalText} type={search.modalType} />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Root);\n","import React from 'react';\n\nimport Root from '../view/Root';\n\nimport './styles.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Root />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { RootReducer } from './store/RootReducer';\nimport RootSaga from './store/RootSaga';\n\nimport App from './App';\nimport './index.css';\n\nconst saga = createSagaMiddleware();\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(RootReducer, composeEnhancers(applyMiddleware(saga)));\n\nsaga.run(RootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","/* eslint-disable camelcase */\nimport * as CONST from './constants';\nimport { FavoriteUser } from './types';\n\nexport const setFavoriteBtnFlag = (favoriteBtnFlag: boolean) => {\n  return {\n    type: CONST.FAVORITE_BTN_FLAG,\n    favoriteBtnFlag,\n  } as const;\n};\n\nexport const fetchFavoriteList = (favoriteList: FavoriteUser[]) => {\n  return {\n    type: CONST.FAVORITE_LIST,\n    favoriteList,\n  } as const;\n};\n\nexport const fetchFavoriteListAdd = (favoriteList: FavoriteUser) => {\n  return {\n    type: CONST.FAVORITE_LIST_ADD,\n    favoriteList,\n  } as const;\n};\n\nexport const getFavoriteListSaga = () => {\n  return {\n    type: CONST.FAVORITE_LIST_SAGA,\n  } as const;\n};\n\nexport const favoriteListFlag = (favoriteListFlag: boolean) => {\n  return {\n    type: CONST.FAVORITE_LIST_FLAG,\n    favoriteListFlag,\n  } as const;\n};\n\nexport const favoriteUserFlag = (favoriteUserFlag: boolean) => {\n  return {\n    type: CONST.FAVORITE_USER_FLAG,\n    favoriteUserFlag,\n  } as const;\n};\n\nexport const noteFlag = (noteFlag: boolean) => {\n  return {\n    type: CONST.NOTE_FLAG,\n    noteFlag,\n  } as const;\n};\n\nexport const noteSave = (note: string) => {\n  return {\n    type: CONST.NOTE_SAVE,\n    note,\n  } as const;\n};\n\nexport const noteBtnFlag = (noteBtnFlag: boolean) => {\n  return {\n    type: CONST.NOTE_BTN_FLAG,\n    noteBtnFlag,\n  } as const;\n};\n\ntype setFavoriteBtnFlagType = ReturnType<typeof setFavoriteBtnFlag>;\ntype fetchFavoriteListType = ReturnType<typeof fetchFavoriteList>;\ntype fetchFavoriteListAddType = ReturnType<typeof fetchFavoriteListAdd>;\ntype getFavoriteListSagaType = ReturnType<typeof getFavoriteListSaga>;\ntype favoriteListFlagType = ReturnType<typeof favoriteListFlag>;\ntype favoriteUserFlagType = ReturnType<typeof favoriteUserFlag>;\ntype noteFlagType = ReturnType<typeof noteFlag>;\ntype noteSaveType = ReturnType<typeof noteSave>;\ntype noteBtnFlagType = ReturnType<typeof noteBtnFlag>;\n\nexport type ActionsType =\n  | setFavoriteBtnFlagType\n  | fetchFavoriteListAddType\n  | fetchFavoriteListType\n  | getFavoriteListSagaType\n  | favoriteListFlagType\n  | favoriteUserFlagType\n  | noteFlagType\n  | noteSaveType\n  | noteBtnFlagType;\n"],"sourceRoot":""}