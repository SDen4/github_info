{"version":3,"file":"static/js/766.d5ae3897.chunk.js","mappings":"4NACA,EAAkC,gCAAlC,EAAyF,qCAAzF,EAA6I,6B,SCWhIA,GAA2CC,EAAAA,EAAAA,OAAK,YAAe,IAAZC,EAAW,EAAXA,KACxDC,GAAWC,EAAAA,EAAAA,MAEXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAM/B,OACE,UAACC,EAAA,EAAD,CAAMC,UAAWC,EAAjB,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBAAKC,IAAKT,EAAKU,WAAYC,IAAI,gBAAgBC,QAAQ,YAGzD,SAACN,EAAA,EAAD,CAAMC,UAAWC,EAAjB,UACE,mBAAQK,KAAK,SAASC,QAXL,WACrBb,GAASc,EAAAA,EAAAA,IAAWf,EAAKgB,MAAOb,GACjC,EASK,UACE,wBAAKH,EAAKgB,cAKnB,I,oBCjCD,EAA8B,4BAA9B,EAA0E,8BAA1E,EAAoH,0BAApH,EAA+J,+BAA/J,EAA0M,0BAA1M,EAA2O,qBCuBrOC,EAAsB,WAC1B,IAAMhB,GAAWC,EAAAA,EAAAA,MAEXF,GAAOI,EAAAA,EAAAA,IAAYc,EAAAA,IACnBC,GAAYf,EAAAA,EAAAA,IAAYgB,EAAAA,IACxBC,GAAkBjB,EAAAA,EAAAA,IAAYkB,EAAAA,IAC9BC,GAAYnB,EAAAA,EAAAA,IAAYoB,EAAAA,IAQ9B,OACE,gBAAKjB,WAAWkB,EAAAA,EAAAA,GAAKjB,EAAoBe,GAAaf,GAAtD,SACGW,EAAUO,QACT,SAACC,EAAAA,GAAD,CAAIpB,UAAWC,EAAf,SACGW,EAAUS,KAAI,SAACC,GAAD,OACb,yBACE,SAAC/B,EAAD,CAAUE,KAAM6B,KADTA,EAAGb,MADC,OAOjB,gBAAKT,UAAWC,EAAhB,UACE,+CAEE,kBAAMD,UAAWC,EAAjB,UACG,KACD,mBACEK,KAAK,SACLC,QAxBU,WACtBb,GAAS6B,EAAAA,EAAAA,KAAa,IACtB7B,GAAS8B,EAAAA,EAAAA,KAAa,IACtB9B,GAAS+B,EAAAA,EAAAA,KAAQ,GAClB,EAqBazB,UAAWC,EAHb,SAKGR,EAAKgB,QACE,OAVd,cAYkBK,QAM3B,EAED,GAAetB,EAAAA,EAAAA,MAAKkB,E,0FCrEpB,EAA4B,0B,4CCUfU,GAAuB5B,EAAAA,EAAAA,OAClC,YAA+C,IAA5CkC,EAA2C,EAA3CA,SAAU1B,EAAiC,EAAjCA,UAAW2B,EAAsB,EAAtBA,MAAUC,GAAY,YAC5C,OACE,+BACE5B,UAAS,UAAKC,EAAL,YAAyBD,GAClC2B,MAAOA,GACHC,GAHN,aAKGF,IAGN,G","sources":["webpack://github_info/./src/components/UserItem/styles.module.css?2685","components/UserItem/UserItem.tsx","webpack://github_info/./src/components/UsersList/styles.module.css?b79e","components/UsersList/UsersList.tsx","webpack://github_info/./src/ui/Ul/styles.module.css?ff57","ui/Ul/Ul.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userItemWrapper\":\"styles_userItemWrapper__Qf9hG\",\"userItemPhotoWrapper\":\"styles_userItemPhotoWrapper__qstkl\",\"userInfoUnit\":\"styles_userInfoUnit__M26iI\"};","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Flex } from '../../ui/Flex';\n\nimport { searchSaga } from '../../store/SearchReducer/actions/actionsSagas';\nimport { searchListSelect } from '../../store/SearchReducer/selectors';\n\nimport { IUserInner } from '../../model/search/types';\n\nimport styles from './styles.module.css';\n\nexport const UserItem: React.FC<{ user: IUserInner }> = memo(({ user }) => {\n  const dispatch = useDispatch();\n\n  const searchList = useSelector(searchListSelect);\n\n  const itemBthHandler = () => {\n    dispatch(searchSaga(user.login, searchList));\n  };\n\n  return (\n    <Flex className={styles.userItemWrapper}>\n      <div className={styles.userItemPhotoWrapper}>\n        <img src={user.avatar_url} alt=\"User's avatar\" loading=\"lazy\" />\n      </div>\n\n      <Flex className={styles.userInfoUnit}>\n        <button type=\"button\" onClick={itemBthHandler}>\n          <h2>{user.login}</h2>\n        </button>\n      </Flex>\n    </Flex>\n  );\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"listWrapper\":\"styles_listWrapper__al4Vh\",\"listWrapperUl\":\"styles_listWrapperUl__3cE40\",\"listError\":\"styles_listError__oOC2K\",\"listErrorLogin\":\"styles_listErrorLogin__kSse7\",\"cardLogin\":\"styles_cardLogin__zX2OB\",\"hide\":\"styles_hide__e+-pS\"};","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { UserItem } from '../UserItem';\n\nimport { Ul } from '../../ui/Ul';\n\nimport {\n  setCard,\n  setReposList,\n  setUsersList,\n} from '../../store/SearchReducer/actions/actions';\nimport {\n  isLoadingSelect,\n  lastRequestTypeSelect,\n  userSelect,\n  usersListSelect,\n} from '../../store/SearchReducer/selectors';\n\nimport { IUserInner } from '../../model/search/types';\n\nimport styles from './styles.module.css';\n\nconst UsersList: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const user = useSelector(userSelect);\n  const usersList = useSelector(usersListSelect);\n  const lastRequestType = useSelector(lastRequestTypeSelect);\n  const isLoading = useSelector(isLoadingSelect);\n\n  const loginBtnHandler = () => {\n    dispatch(setUsersList(false));\n    dispatch(setReposList(false));\n    dispatch(setCard(true));\n  };\n\n  return (\n    <div className={clsx(styles.listWrapper, isLoading && styles.hide)}>\n      {usersList.length ? (\n        <Ul className={styles.listWrapperUl}>\n          {usersList.map((el: IUserInner) => (\n            <li key={el.login}>\n              <UserItem user={el} />\n            </li>\n          ))}\n        </Ul>\n      ) : (\n        <div className={styles.listError}>\n          <h2>\n            It seems the user\n            <span className={styles.listErrorLogin}>\n              {' '}\n              <button\n                type=\"button\"\n                onClick={loginBtnHandler}\n                className={styles.cardLogin}\n              >\n                {user.login}\n              </button>{' '}\n            </span>\n            hasn&#39;t any {lastRequestType}\n          </h2>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(UsersList);\n","// extracted by mini-css-extract-plugin\nexport default {\"ulWrapper\":\"styles_ulWrapper__jdKNg\"};","import React, { memo } from 'react';\n\nimport styles from './styles.module.css';\n\ninterface IProps {\n  className?: string;\n  props?: any;\n  onClick?: () => void;\n  style?: React.CSSProperties | undefined;\n}\n\nexport const Ul: React.FC<IProps> = memo(\n  ({ children, className, style, ...props }) => {\n    return (\n      <ul\n        className={`${styles.ulWrapper} ${className}`}\n        style={style}\n        {...props}\n      >\n        {children}\n      </ul>\n    );\n  },\n);\n"],"names":["UserItem","memo","user","dispatch","useDispatch","searchList","useSelector","searchListSelect","Flex","className","styles","src","avatar_url","alt","loading","type","onClick","searchSaga","login","UsersList","userSelect","usersList","usersListSelect","lastRequestType","lastRequestTypeSelect","isLoading","isLoadingSelect","clsx","length","Ul","map","el","setUsersList","setReposList","setCard","children","style","props"],"sourceRoot":""}