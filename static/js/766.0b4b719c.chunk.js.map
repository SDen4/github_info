{"version":3,"file":"static/js/766.0b4b719c.chunk.js","mappings":"2NACA,EAAkC,gCAAlC,EAAyF,qCAAzF,EAA6I,6B,SCcvIA,EAA6B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC9BC,GAAWC,EAAAA,EAAAA,MAEXC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAM5B,OACE,UAACC,EAAA,EAAD,CAAMC,UAAWC,EAAjB,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBAAKC,IAAKT,EAAKU,WAAYC,IAAI,gBAAgBC,QAAQ,YAGzD,SAACN,EAAA,EAAD,CAAMC,UAAWC,EAAjB,UACE,mBAAQK,KAAK,SAASC,QAXL,WACrBb,GAASc,EAAAA,EAAAA,IAAWf,EAAKgB,MAAOb,GACjC,EASK,UACE,wBAAKH,EAAKgB,cAKnB,EAED,GAAeC,EAAAA,EAAAA,MAAKlB,G,UCtCpB,EAA8B,4BAA9B,EAA0E,8BAA1E,EAAoH,0BAApH,EAA+J,+BAA/J,EAA0M,0BAA1M,EAA2O,qBCoBrOmB,EAAsB,WAC1B,IAAMjB,GAAWC,EAAAA,EAAAA,MAEXF,GAAOI,EAAAA,EAAAA,IAAYe,EAAAA,IACnBC,GAAQhB,EAAAA,EAAAA,IAAYiB,EAAAA,IACpBC,GAAclB,EAAAA,EAAAA,IAAYmB,EAAAA,IAC1BX,GAAUR,EAAAA,EAAAA,IAAYoB,EAAAA,IAQ5B,OACE,gBAAKjB,WAAWkB,EAAAA,EAAAA,GAAKjB,EAAoBI,GAAWJ,GAApD,SACGY,EAAMM,QACL,eAAInB,UAAWC,EAAf,SACGY,EAAMO,KAAI,SAACC,GAAD,OACT,yBACE,SAAC,EAAD,CAAU5B,KAAM4B,KADTA,EAAGZ,MADH,OAOb,gBAAKT,UAAWC,EAAhB,UACE,+CAEE,kBAAMD,UAAWC,EAAjB,UACG,KACD,mBACEK,KAAK,SACLC,QAxBU,WACtBb,GAAS4B,EAAAA,EAAAA,KAAmB,IAC5B5B,GAAS6B,EAAAA,EAAAA,KAAoB,IAC7B7B,GAAS8B,EAAAA,EAAAA,KAAe,GACzB,EAqBaxB,UAAWC,EAHb,SAKGR,EAAKgB,QACE,OAVd,cAYkBM,QAM3B,EAED,GAAeL,EAAAA,EAAAA,MAAKC,E","sources":["webpack://github_info/./src/components/UserItem/styles.module.css?2685","components/UserItem/UserItem.tsx","webpack://github_info/./src/components/UsersList/styles.module.css?b79e","components/UsersList/UsersList.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userItemWrapper\":\"styles_userItemWrapper__drNPW\",\"userItemPhotoWrapper\":\"styles_userItemPhotoWrapper__YdNbN\",\"userInfoUnit\":\"styles_userInfoUnit__n-W+X\"};","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Flex } from '../../ui/Flex';\n\nimport { searchSaga } from '../../store/SearchReducer/actions/actionsSagas';\nimport { searchListSelect } from '../../store/SearchReducer/selectors';\nimport { UserInnerType } from '$store/SearchReducer/types';\n\nimport styles from './styles.module.css';\n\nexport interface IProps {\n  user: UserInnerType;\n}\n\nconst UserItem: React.FC<IProps> = ({ user }) => {\n  const dispatch = useDispatch();\n\n  const history = useSelector(searchListSelect);\n\n  const itemBthHandler = () => {\n    dispatch(searchSaga(user.login, history));\n  };\n\n  return (\n    <Flex className={styles.userItemWrapper}>\n      <div className={styles.userItemPhotoWrapper}>\n        <img src={user.avatar_url} alt=\"User's avatar\" loading=\"lazy\" />\n      </div>\n\n      <Flex className={styles.userInfoUnit}>\n        <button type=\"button\" onClick={itemBthHandler}>\n          <h2>{user.login}</h2>\n        </button>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default memo(UserItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"listWrapper\":\"styles_listWrapper__blTxs\",\"listWrapperUl\":\"styles_listWrapperUl__z+l1G\",\"listError\":\"styles_listError__vjDWX\",\"listErrorLogin\":\"styles_listErrorLogin__LOoRB\",\"cardLogin\":\"styles_cardLogin__KowuM\",\"hide\":\"styles_hide__NGyPC\"};","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport UserItem from '../UserItem';\n\nimport {\n  cardOpenedFlag,\n  reposOpenedListFlag,\n  userListOpenedFlag,\n} from '../../store/SearchReducer/actions/actions';\nimport {\n  lastRequestTypeSelect,\n  loadingSelect,\n  userSelect,\n  usersListSelect,\n} from '../../store/SearchReducer/selectors';\nimport { UserInnerType } from '$store/SearchReducer/types';\n\nimport styles from './styles.module.css';\n\nconst UsersList: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const user = useSelector(userSelect);\n  const users = useSelector(usersListSelect);\n  const requestType = useSelector(lastRequestTypeSelect);\n  const loading = useSelector(loadingSelect);\n\n  const loginBtnHandler = () => {\n    dispatch(userListOpenedFlag(false));\n    dispatch(reposOpenedListFlag(false));\n    dispatch(cardOpenedFlag(true));\n  };\n\n  return (\n    <div className={clsx(styles.listWrapper, loading && styles.hide)}>\n      {users.length ? (\n        <ul className={styles.listWrapperUl}>\n          {users.map((el: UserInnerType) => (\n            <li key={el.login}>\n              <UserItem user={el} />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div className={styles.listError}>\n          <h2>\n            It seems the user\n            <span className={styles.listErrorLogin}>\n              {' '}\n              <button\n                type=\"button\"\n                onClick={loginBtnHandler}\n                className={styles.cardLogin}\n              >\n                {user.login}\n              </button>{' '}\n            </span>\n            hasn&#39;t any {requestType}\n          </h2>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(UsersList);\n"],"names":["UserItem","user","dispatch","useDispatch","history","useSelector","searchListSelect","Flex","className","styles","src","avatar_url","alt","loading","type","onClick","searchSaga","login","memo","UsersList","userSelect","users","usersListSelect","requestType","lastRequestTypeSelect","loadingSelect","clsx","length","map","el","userListOpenedFlag","reposOpenedListFlag","cardOpenedFlag"],"sourceRoot":""}