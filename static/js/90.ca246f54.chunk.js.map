{"version":3,"file":"static/js/90.ca246f54.chunk.js","mappings":"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","sources":["webpack://github_info/./src/components/FavoriteList/styles.module.css?c91b","components/FavoriteList/FavoriteList.tsx","webpack://github_info/./src/ui/CloseButton/styles.module.css?1f8d","ui/CloseButton/CloseButton.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"shlWrapper\":\"styles_shlWrapper__f-rVV\",\"list\":\"styles_list__i0M8i\",\"itemWrapper\":\"styles_itemWrapper__mxdIE\",\"shlButton\":\"styles_shlButton__pyJdW\",\"clearButton\":\"styles_clearButton__0SCFy\",\"deleteListItemBtn\":\"styles_deleteListItemBtn__GXqG4\",\"miniModal\":\"styles_miniModal__c9sGa\",\"btnsWrapper\":\"styles_btnsWrapper__7jukN\",\"deletedUserLogin\":\"styles_deletedUserLogin__i5JVT\",\"icon\":\"styles_icon__8ZZSc\",\"tooltip\":\"styles_tooltip__E903r\",\"tooltipText\":\"styles_tooltipText__WLX7l\",\"downloadBtn\":\"styles_downloadBtn__SUnD8\",\"tooltipTextDownload\":\"styles_tooltipTextDownload__pMTeA\",\"listHeader\":\"styles_listHeader__HNYoL\",\"hide\":\"styles_hide__5ou-l\"};","import React, { memo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { CloseButton } from 'ui/CloseButton';\nimport { Flex } from 'ui/Flex';\n\nimport {\n  fetchFavoriteList,\n  setFavoriteList,\n  setFavoriteUser,\n} from 'store/FavoriteReduser/actions/actions';\nimport { favoriteListSelect } from 'store/FavoriteReduser/selectors';\nimport {\n  setModal,\n  setReposList,\n  setUsersList,\n} from 'store/SearchReducer/actions/actions';\nimport { searchSaga } from 'store/SearchReducer/actions/actionsSagas';\nimport {\n  isLoadingSelect,\n  isMobileSelect,\n  isReposListSelect,\n  isUsersListSelect,\n  searchListSelect,\n  userSelect,\n} from 'store/SearchReducer/selectors';\n\nimport styles from './styles.module.css';\n\nconst FavoriteList: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const favoriteList = useSelector(favoriteListSelect);\n  const searchList = useSelector(searchListSelect);\n  const user = useSelector(userSelect);\n  const isUsersList = useSelector(isUsersListSelect);\n  const isReposList = useSelector(isReposListSelect);\n  const isMobile = useSelector(isMobileSelect);\n  const isLoading = useSelector(isLoadingSelect);\n\n  const [deleteModal, setDeleteModal] = useState<boolean>(false);\n  const [deletedElem, setDeletedElem] = useState<string>('');\n\n  const closeBtnHandler = () => {\n    dispatch(setFavoriteList(false));\n  };\n\n  const searchHistoriListBtnHandler = (login: string) => {\n    if (login === user.login) {\n      if (isUsersList) {\n        dispatch(setUsersList(false));\n      }\n      if (isReposList) {\n        dispatch(setReposList(false));\n      }\n      return;\n    }\n    dispatch(searchSaga(login, searchList, favoriteList));\n  };\n\n  const clearBtnHandler = () => {\n    dispatch(\n      setModal(\n        true,\n        `Are you sure to delete ${favoriteList.length > 1 ? 'all' : ''} your ${\n          favoriteList.length > 1 ? `(${favoriteList.length})` : ''\n        } favorite ${favoriteList.length > 1 ? 'users' : 'user'}?`,\n        'favorite',\n      ),\n    );\n  };\n\n  const openDeleteModal = (delElem: string) => {\n    setDeleteModal(true);\n    setDeletedElem(delElem);\n  };\n\n  const deleteBtnHandler = (delElem: string) => {\n    const newFavoriteUsersList = favoriteList.filter(\n      (el) => el.name !== delElem,\n    );\n    dispatch(fetchFavoriteList(newFavoriteUsersList));\n    localStorage.setItem('favorite', JSON.stringify(newFavoriteUsersList));\n    if (user.login === delElem) {\n      dispatch(setFavoriteUser(false));\n    }\n    setDeleteModal(false);\n    setDeletedElem('');\n  };\n\n  const cancelDelete = () => {\n    setDeleteModal(false);\n    setDeletedElem('');\n  };\n\n  // const onDownloadHandler = () => {\n  // let element = document.createElement('a');\n  // const usersArr = favoriteList.map((el) => {\n  //   console.log(el);\n  //   return fileText(el, el.note);\n  // });\n  // const text = fileText(user, note);\n  // element.setAttribute(\n  //   'href',\n  //   `data:text/plain;charset=utf-8,${encodeURIComponent(text)}`,\n  // );\n  // element.setAttribute('download', `${user.login}.doc`);\n  // element.style.display = 'none';\n  // document.body.appendChild(element);\n  // element.click();\n  // document.body.removeChild(element);\n  // };\n\n  return (\n    <Flex\n      className={clsx(styles.shlWrapper, isMobile && isLoading && styles.hide)}\n    >\n      <div className={styles.listHeader}>\n        <h3>Favorite list</h3>\n        <CloseButton onClick={closeBtnHandler} />\n      </div>\n      {/* <button\n          type=\"button\"\n          className={clsx(styles.button, styles.downloadBtn, styles.tooltip)}\n          onClick={onDownloadHandler}\n        >\n          <span>&#10515;</span>\n          <div className={clsx(styles.tooltipText, styles.tooltipTextDownload)}>\n            Download list\n          </div>\n        </button> */}\n\n      <ol className={styles.list}>\n        {favoriteList.map((el) => (\n          <li key={el.name}>\n            <div className={styles.itemWrapper}>\n              <button\n                className={styles.shlButton}\n                type=\"button\"\n                onClick={() => searchHistoriListBtnHandler(el.name)}\n              >\n                {el.name}\n              </button>\n\n              {el.note && <div className={styles.icon}>&#9998;</div>}\n\n              <button\n                type=\"button\"\n                className={clsx(styles.deleteListItemBtn, styles.tooltip)}\n                onClick={() => openDeleteModal(el.name)}\n              >\n                <div className={styles.tooltipText}>Delete</div>\n              </button>\n            </div>\n          </li>\n        ))}\n      </ol>\n\n      <button\n        className={styles.clearButton}\n        type=\"button\"\n        onClick={clearBtnHandler}\n      >\n        Delete all favorite users\n      </button>\n\n      {deleteModal && (\n        <Flex className={styles.miniModal}>\n          <span>\n            Are you sure to delete user{' '}\n            <span className={styles.deletedUserLogin}>{deletedElem}</span> from\n            favorite list?\n          </span>\n          <div className={styles.btnsWrapper}>\n            <button type=\"button\" onClick={() => deleteBtnHandler(deletedElem)}>\n              Delete\n            </button>\n            <button type=\"button\" onClick={() => cancelDelete()}>\n              Cansel\n            </button>\n          </div>\n        </Flex>\n      )}\n    </Flex>\n  );\n};\n\nexport default memo(FavoriteList);\n","// extracted by mini-css-extract-plugin\nexport default {\"closeBtn\":\"styles_closeBtn__rMvYi\",\"tooltip\":\"styles_tooltip__YJmbK\",\"tooltipText\":\"styles_tooltipText__j5iU1\"};","import React, { memo } from 'react';\nimport clsx from 'clsx';\n\nimport styles from './styles.module.css';\n\nexport const CloseButton: React.FC<{ onClick: () => void }> = memo(\n  ({ onClick }) => {\n    return (\n      <button\n        className={clsx(styles.closeBtn, styles.tooltip)}\n        type=\"button\"\n        aria-label=\"Close\"\n        onClick={onClick}\n      >\n        <div className={styles.tooltipText}>Close</div>\n      </button>\n    );\n  },\n);\n"],"names":["FavoriteList","dispatch","useDispatch","favoriteList","useSelector","favoriteListSelect","searchList","searchListSelect","user","userSelect","isUsersList","isUsersListSelect","isReposList","isReposListSelect","isMobile","isMobileSelect","isLoading","isLoadingSelect","useState","deleteModal","setDeleteModal","deletedElem","setDeletedElem","Flex","className","clsx","styles","CloseButton","onClick","setFavoriteList","map","el","type","login","setUsersList","setReposList","searchSaga","searchHistoriListBtnHandler","name","note","delElem","setModal","length","newFavoriteUsersList","filter","fetchFavoriteList","localStorage","setItem","JSON","stringify","setFavoriteUser","deleteBtnHandler","memo"],"sourceRoot":""}