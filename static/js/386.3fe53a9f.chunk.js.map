{"version":3,"file":"static/js/386.3fe53a9f.chunk.js","mappings":"0NACA,EAAkC,kCAAlC,EAA2F,uCAA3F,EAAiJ,+B,SCkB3IA,EAA6B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC9BC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,KACf,SAACC,GAAD,OAAWA,EAAMC,OAAOH,QAAxB,IAEII,GAAUH,EAAAA,EAAAA,KACd,SAACC,GAAD,OAAWA,EAAMC,OAAOE,aAAxB,IAOF,OACE,UAACC,EAAA,EAAD,CAAMC,UAAWC,EAAjB,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBAAKC,IAAKZ,EAAKa,WAAYC,IAAI,gBAAgBC,QAAQ,YAGzD,SAACN,EAAA,EAAD,CAAMC,UAAWC,EAAjB,UACE,mBAAQK,KAAK,SAASC,QAXL,WACrBhB,GAASiB,EAAAA,EAAAA,IAAWlB,EAAKmB,MAAOZ,EAASJ,GAC1C,EASK,UACE,wBAAKH,EAAKmB,cAKnB,EAED,GAAeC,EAAAA,EAAAA,MAAKrB,GC/CpB,EAA8B,+BAA9B,EAA6E,iCAA7E,EAA0H,6BAA1H,EAAwK,kCAAxK,EAAsN,6BAAtN,EAA0P,wBCgBpPsB,EAAsB,WAC1B,IAAMpB,GAAWC,EAAAA,EAAAA,MAEXoB,GAAQlB,EAAAA,EAAAA,KACZ,SAACC,GAAD,OAAWA,EAAMC,OAAOiB,SAAxB,IAEIJ,GAAQf,EAAAA,EAAAA,KACZ,SAACC,GAAD,OAAWA,EAAMC,OAAON,KAAKmB,KAA7B,IAEIK,GAAcpB,EAAAA,EAAAA,KAClB,SAACC,GAAD,OAAWA,EAAMC,OAAOmB,eAAxB,IAEIV,GAAUX,EAAAA,EAAAA,KACd,SAACC,GAAD,OAAWA,EAAMC,OAAOS,OAAxB,IASF,OACE,gBAAKL,WAAWgB,EAAAA,EAAAA,GAAKf,EAAoBI,GAAWJ,GAApD,SACGW,EAAMK,QACL,eAAIjB,UAAWC,EAAf,SACGW,EAAMM,KAAI,SAACC,GAAD,OACT,yBACE,SAAC,EAAD,CAAU7B,KAAM6B,KADTA,EAAGV,MADH,OAOb,gBAAKT,UAAWC,EAAhB,UACE,+CAEE,kBAAMD,UAAWC,EAAjB,UACG,KACD,mBACEK,KAAK,SACLC,QAxBU,WACtBhB,GAAS6B,EAAAA,EAAAA,KAAmB,IAC5B7B,GAAS8B,EAAAA,EAAAA,KAAoB,IAC7B9B,GAAS+B,EAAAA,EAAAA,KAAe,GACzB,EAqBatB,UAAWC,EAHb,SAKGQ,IACO,OAVd,cAYkBK,QAM3B,EAED,GAAeJ,EAAAA,EAAAA,MAAKC,E","sources":["webpack://github_info/./src/components/UserItem/UserItem.module.css?e269","components/UserItem/UserItem.tsx","webpack://github_info/./src/components/UsersList/UsersList.module.css?09e2","components/UsersList/UsersList.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userItemWrapper\":\"UserItem_userItemWrapper__n8mrw\",\"userItemPhotoWrapper\":\"UserItem_userItemPhotoWrapper__Rfj1+\",\"userInfoUnit\":\"UserItem_userInfoUnit__GpSse\"};","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Flex } from '../../ui/Flex';\n\nimport { searchSaga } from '../../store/SearchReducer/actionsSagas';\n\nimport { AppStateType } from '../../store/RootReducer';\nimport {\n  ISearhHistoryItem,\n  UserInnerType,\n} from '../../store/SearchReducer/types';\n\nimport styles from './UserItem.module.css';\n\nexport interface IProps {\n  user: UserInnerType;\n}\n\nconst UserItem: React.FC<IProps> = ({ user }) => {\n  const dispatch = useDispatch();\n\n  const isMobile = useSelector<AppStateType, boolean>(\n    (store) => store.search.isMobile,\n  );\n  const history = useSelector<AppStateType, ISearhHistoryItem[]>(\n    (store) => store.search.searchHistory,\n  );\n\n  const itemBthHandler = () => {\n    dispatch(searchSaga(user.login, history, isMobile));\n  };\n\n  return (\n    <Flex className={styles.userItemWrapper}>\n      <div className={styles.userItemPhotoWrapper}>\n        <img src={user.avatar_url} alt=\"User's avatar\" loading=\"lazy\" />\n      </div>\n\n      <Flex className={styles.userInfoUnit}>\n        <button type=\"button\" onClick={itemBthHandler}>\n          <h2>{user.login}</h2>\n        </button>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default memo(UserItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"listWrapper\":\"UsersList_listWrapper__v19Th\",\"listWrapperUl\":\"UsersList_listWrapperUl__vUZqI\",\"listError\":\"UsersList_listError__hHl5f\",\"listErrorLogin\":\"UsersList_listErrorLogin__ewZl3\",\"cardLogin\":\"UsersList_cardLogin__V+vj6\",\"hide\":\"UsersList_hide__Ysx0x\"};","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport {\n  cardOpenedFlag,\n  reposOpenedListFlag,\n  userListOpenedFlag,\n} from '../../store/SearchReducer/actions';\n\nimport { AppStateType } from '../../store/RootReducer';\nimport { UserInnerType } from '../../store/SearchReducer/types';\n\nimport UserItem from '../UserItem';\n\nimport styles from './UsersList.module.css';\n\nconst UsersList: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const users = useSelector<AppStateType, UserInnerType[]>(\n    (store) => store.search.usersList,\n  );\n  const login = useSelector<AppStateType, string>(\n    (store) => store.search.user.login,\n  );\n  const requestType = useSelector<AppStateType, string>(\n    (store) => store.search.lastRequestType,\n  );\n  const loading = useSelector<AppStateType, boolean>(\n    (store) => store.search.loading,\n  );\n\n  const loginBtnHandler = () => {\n    dispatch(userListOpenedFlag(false));\n    dispatch(reposOpenedListFlag(false));\n    dispatch(cardOpenedFlag(true));\n  };\n\n  return (\n    <div className={clsx(styles.listWrapper, loading && styles.hide)}>\n      {users.length ? (\n        <ul className={styles.listWrapperUl}>\n          {users.map((el: UserInnerType) => (\n            <li key={el.login}>\n              <UserItem user={el} />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div className={styles.listError}>\n          <h2>\n            It seems the user\n            <span className={styles.listErrorLogin}>\n              {' '}\n              <button\n                type=\"button\"\n                onClick={loginBtnHandler}\n                className={styles.cardLogin}\n              >\n                {login}\n              </button>{' '}\n            </span>\n            hasn&#39;t any {requestType}\n          </h2>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(UsersList);\n"],"names":["UserItem","user","dispatch","useDispatch","isMobile","useSelector","store","search","history","searchHistory","Flex","className","styles","src","avatar_url","alt","loading","type","onClick","searchSaga","login","memo","UsersList","users","usersList","requestType","lastRequestType","clsx","length","map","el","userListOpenedFlag","reposOpenedListFlag","cardOpenedFlag"],"sourceRoot":""}