{"version":3,"sources":["store/FavoriteReduser/constants.ts","components/Note/Note.module.css","view/Root/Root.module.css","store/SearchReducer/actionsSagas.ts","components/Modal/Modal.module.css","ui/CloseButton/CloseButton.module.css","components/FavoriteButton/FavoriteButton.module.css","components/Error/Error.module.css","ui/SubmitButton/SubmitButton.module.css","components/SearchForm/SearchForm.module.css","components/SearchHistoryHeader/SearchHistoryHeader.module.css","ui/Loader/Loader.module.css","ui/CloseButton/CloseButton.tsx","store/SearchReducer/constants.ts","store/SearchReducer/actions.ts","constants/searchConstants.ts","store/SearchReducer/SearchReducer.ts","store/FavoriteReduser/FavoriteReducer.ts","store/RootReducer.ts","api/API.ts","store/SearchReducer/sagas/SearchSaga.ts","store/SearchReducer/sagas/FetchUsersListSaga.ts","store/SearchReducer/sagas/GetLocalHistorySaga.ts","store/SearchReducer/sagas/ReposListSaga.ts","store/FavoriteReduser/sagas/GetFavoriteListSaga.ts","store/SearchReducer/sagas/InitFetchSaga.ts","store/RootSaga.ts","components/Note/Note.tsx","components/Error/Error.tsx","components/Modal/Modal.tsx","ui/SubmitButton/SubmitButton.tsx","components/SearchForm/SearchForm.tsx","components/FavoriteButton/FavoriteButton.tsx","components/SearchHistoryHeader/SearchHistoryHeader.tsx","ui/Loader/Loader.tsx","store/SearchReducer/selectors/selectors.ts","store/FavoriteReduser/selectors/selectors.ts","view/Root/Root.tsx","App/App.tsx","index.tsx","store/FavoriteReduser/actions.ts"],"names":["FAVORITE_BTN_FLAG","FAVORITE_LIST_SAGA","FAVORITE_LIST_FLAG","FAVORITE_LIST_ADD","FAVORITE_LIST","FAVORITE_USER_FLAG","NOTE_FLAG","NOTE_BTN_FLAG","NOTE_SAVE","module","exports","searchSaga","login","history","isMobile","favoritesList","type","CONST","fetchUsersListSaga","requestType","getLocalHistorySaga","reposListSaga","searhInitFetchSaga","CloseButton","onClick","className","clsx","styles","closeBtn","tooltip","tooltipText","memo","SEARCH_LOGIN_SAGA","SEARCH_INIT_SAGA","FETCH_ALL_HISTORY","FETCH_SEARCH_HISTORY","SEARCH_HISTORY_LIST_FLAG","SEARCH_HISTORY_MODAL_FLAG","GET_LOCAL_HISTORY_SAGA","FETCH_LOGIN","FETCH_USERS_LIST","FETCH_USERS_LIST_SAGA","USERS_LIST_OPENED_FLAG","CARD_OPEN_FLAG","LOADING","ERROR","REPOS_LIST_SAGA","FETCH_REPOS_LIST","REPOS_OPENED_LIST_FLAG","SEARCH_START","SEARCH_IS_MOBILE","fetchLogin","name","followers_url","following_url","followers","following","created_at","avatar_url","company","email","public_repos","repos_url","location","lastActivityDate","cardOPenedFlag","loadingFlag","errorFlag","userListOpenedFlag","userListFlag","fetchUsersList","usersList","lastRequestType","fetchSearhHistory","searchHistory","searchHistoryListFlag","fetchAllHistory","allSearchHistory","fetchReposList","reposList","reposOpenedListFlag","reposListFlag","modalFlag","text","modalType","searhStart","searchIsMobile","searchUserDefault","followersUrl","followingUrl","avatarUrl","followersNum","followingNum","dataCreated","Date","reposNum","reposUrl","initialState","user","usersListOpened","reposListOpened","cardOpened","loading","error","modalText","InitialState","favoriteBtnFlag","favoriteListFlag","favoriteList","favoriteUser","noteFlag","noteBtnFlag","note","RootReducer","combineReducers","search","state","action","favorite","favoriteUserFlag","API","axios","create","baseURL","sagaWorker","SearchSagaWatcher","getUserInfo","a","get","trim","then","res","data","response","getLastActivityDate","catch","console","log","all","put","noteSave","allData","find","el","length","noteToWrite","dateOfSearch","newHistoryItem","localStorage","setItem","JSON","stringify","takeEvery","FetchUsersListSagaWatcher","GetLocalHistorySagaWatcher","parse","getItem","saved","ReposListSagaWatcher","getReposInfo","allRepos","GetFavoriteListSagaWatcher","fetchFavoriteList","InitFetchSagaWatcher","document","documentElement","clientWidth","getFavoriteListSaga","rootSaga","fork","Note","favorites","dispatch","useDispatch","ref","useRef","useEffect","current","focus","useState","value","setValue","isModalOpened","setIsModalOpened","onBtnModalHandler","newfavoriteUserList","map","component","form","onSubmit","event","preventDefault","newfavoriteUser","findUser","index","indexOf","newFavorites","fetchFavoriteListAdd","setFavoriteBtnFlag","onChange","target","formFooter","lettersQuantity","btnsWrapper","buttonDel","buttonUnactive","disabled","noteModal","colorText","btnsModalWrapper","Error","userName","errorWrapper","errorUserInfo","Modal","textModal","onBtnsHandler","delStatus","removeItem","modalWrapper","modal","closeBtnWrapper","SubmitButton","children","button","SearchForm","currentUser","searchLogin","setsearchLogin","disabledBtn","setDisabledBtn","toLocaleLowerCase","input","placeholder","textValue","FavoriteButton","starNum","favoriteListStatus","buttonActive","star","SearchHistoryHeader","historyLength","historyBtnStatus","searchHistoryListStatus","shhWrapperActive","shhWrapper","Loader","loaderWrapper","ldsDefault","selectFavorite","createSelector","store","selectSearch","LazySearchHistoryList","React","lazy","LazyFavoriteList","LazyCard","LazyReposList","LazyUsersList","Root","useSelector","setUser","isCardOpen","isErrorOpen","rootWrapper","rootHeader","buttonsWrapper","root","rootSectionLeft","rootSectionSearch","rootBtn","fallback","favoriteUserStatus","noteUserStatus","noteStoreFlag","users","rootSectionRight","searchList","currentUserLogin","userListOpened","App","saga","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","RootSaga","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.18787505.chunk.js","sourcesContent":["export const FAVORITE_BTN_FLAG = 'FAVORITE_BTN_FLAG';\nexport const FAVORITE_LIST_SAGA = 'FAVORITE_LIST_SAGA';\nexport const FAVORITE_LIST_FLAG = 'FAVORITE_LIST_FLAG';\nexport const FAVORITE_LIST_ADD = 'FAVORITE_LIST_ADD';\nexport const FAVORITE_LIST = 'FAVORITE_LIST';\nexport const FAVORITE_USER_FLAG = 'FAVORITE_USER_FLAG';\n\nexport const NOTE_FLAG = 'NOTE_FLAG';\nexport const NOTE_BTN_FLAG = 'NOTE_BTN_FLAG';\nexport const NOTE_SAVE = 'NOTE_SAVE';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Note_component__2ReX3\",\"form\":\"Note_form__1QeoF\",\"buttonDel\":\"Note_buttonDel__1VWzk\",\"buttonUnactive\":\"Note_buttonUnactive__2L99q\",\"btnsWrapper\":\"Note_btnsWrapper__cu-GV\",\"noteModal\":\"Note_noteModal__3sCjR\",\"btnsModalWrapper\":\"Note_btnsModalWrapper__2Ig-U\",\"colorText\":\"Note_colorText__1zhac\",\"formFooter\":\"Note_formFooter__2rJSt\",\"lettersQuantity\":\"Note_lettersQuantity__36I7a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rootWrapper\":\"Root_rootWrapper__2GyXK\",\"rootHeader\":\"Root_rootHeader__1kA0G\",\"root\":\"Root_root__2kRFx\",\"rootSectionLeft\":\"Root_rootSectionLeft__1CQQB\",\"rootSectionRight\":\"Root_rootSectionRight__1ZIC0\",\"rootSectionSearch\":\"Root_rootSectionSearch__f4Xo2\",\"rootBtn\":\"Root_rootBtn__2HD5o\",\"buttonsWrapper\":\"Root_buttonsWrapper__2E3GA\"};","import { FavoriteUser } from '../FavoriteReduser/types';\nimport { ISearhHistoryItem } from './types';\n\nimport * as CONST from './constants';\n\nexport const searchSaga = (\n  login: string,\n  history: ISearhHistoryItem[],\n  isMobile: boolean,\n  favoritesList?: FavoriteUser[],\n) => {\n  return {\n    type: CONST.SEARCH_LOGIN_SAGA,\n    login,\n    history,\n    isMobile,\n    favoritesList,\n  } as const;\n};\n\nexport const fetchUsersListSaga = (login: string, requestType: string) => {\n  return {\n    type: CONST.FETCH_USERS_LIST_SAGA,\n    login,\n    requestType,\n  } as const;\n};\n\nexport const getLocalHistorySaga = () => {\n  return {\n    type: CONST.GET_LOCAL_HISTORY_SAGA,\n  } as const;\n};\n\nexport const reposListSaga = (login: string) => {\n  return {\n    type: CONST.REPOS_LIST_SAGA,\n    login,\n  } as const;\n};\n\nexport const searhInitFetchSaga = () => {\n  return {\n    type: CONST.SEARCH_INIT_SAGA,\n  } as const;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWrapper\":\"Modal_modalWrapper__VFEZN\",\"modal\":\"Modal_modal__P3_V5\",\"btnsWrapper\":\"Modal_btnsWrapper__1VvdY\",\"closeBtnWrapper\":\"Modal_closeBtnWrapper__2jGIJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"closeBtn\":\"CloseButton_closeBtn__1TnKA\",\"tooltip\":\"CloseButton_tooltip__ZMtiB\",\"tooltipText\":\"CloseButton_tooltipText__2zv1M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FavoriteButton_button__dHVyF\",\"buttonActive\":\"FavoriteButton_buttonActive__1uWZ_\",\"star\":\"FavoriteButton_star__HPvj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorWrapper\":\"Error_errorWrapper__3Tyi5\",\"errorUserInfo\":\"Error_errorUserInfo__2w7RM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SubmitButton_button__1jVPC\",\"buttonUnactive\":\"SubmitButton_buttonUnactive__4AV-H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SearchForm_form__qWosj\",\"input\":\"SearchForm_input__zWLnu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shhWrapper\":\"SearchHistoryHeader_shhWrapper__UeD2U\",\"shhWrapperActive\":\"SearchHistoryHeader_shhWrapperActive__13Bdx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderWrapper\":\"Loader_loaderWrapper__7w3wI\",\"ldsDefault\":\"Loader_ldsDefault__14rA4\"};","import React, { memo } from 'react';\nimport clsx from 'clsx';\n\nimport { ICloseButton } from './types';\n\nimport styles from './CloseButton.module.css';\n\nconst CloseButton: React.FC<ICloseButton> = ({ onClick }) => {\n  return (\n    <button\n      className={clsx(styles.closeBtn, styles.tooltip)}\n      type=\"button\"\n      aria-label=\"Close\"\n      onClick={onClick}\n    >\n      <div className={styles.tooltipText}>Close</div>\n    </button>\n  );\n};\n\nexport default memo(CloseButton);\n","export const SEARCH_LOGIN_SAGA = 'SEARCH_LOGIN_SAGA';\nexport const SEARCH_INIT_SAGA = 'SEARCH_INIT_SAGA';\n\nexport const FETCH_ALL_HISTORY = 'FETCH_ALL_HISTORY';\nexport const FETCH_SEARCH_HISTORY = 'FETCH_SEARCH_HISTORY';\nexport const SEARCH_HISTORY_LIST_FLAG = 'SEARCH_HISTORY_LIST_FLAG';\nexport const SEARCH_HISTORY_MODAL_FLAG = 'SEARCH_HISTORY_MODAL_FLAG';\n\nexport const GET_LOCAL_HISTORY_SAGA = 'GET_LOCAL_HISTORY_SAGA';\n\nexport const FETCH_LOGIN = 'FETCH_LOGIN';\nexport const FETCH_USERS_LIST = 'FETCH_USERS_LIST';\nexport const FETCH_USERS_LIST_SAGA = 'FETCH_USERS_LIST_SAGA';\nexport const USERS_LIST_OPENED_FLAG = 'USERS_LIST_OPENED_FLAG';\n\nexport const CARD_OPEN_FLAG = 'CARD_OPEN_FLAG';\n\nexport const LOADING = 'LOADING';\n\nexport const ERROR = 'ERROR';\n\nexport const REPOS_LIST_SAGA = 'REPOS_LIST_SAGA';\nexport const FETCH_REPOS_LIST = 'FETCH_REPOS_LIST';\nexport const REPOS_OPENED_LIST_FLAG = 'REPOS_OPENED_LIST_FLAG';\n\nexport const SEARCH_START = 'SEARCH_START';\n\nexport const SEARCH_IS_MOBILE = 'SEARCH_IS_MOBILE';\n","/* eslint-disable camelcase */\nimport * as CONST from './constants';\n\nimport { IRepoItem, ISearhHistoryItem, UserInnerType } from './types';\n\nexport const fetchLogin = (\n  name: string,\n  login: string,\n  followers_url: string,\n  following_url: string,\n  followers: number,\n  following: number,\n  created_at: Date,\n  avatar_url?: string,\n  company?: string,\n  email?: string,\n  public_repos?: number,\n  repos_url?: string,\n  location?: string,\n  lastActivityDate?: string,\n) => {\n  return {\n    type: CONST.FETCH_LOGIN,\n    name,\n    login,\n    followers_url,\n    following_url,\n    followers,\n    following,\n    created_at,\n    avatar_url,\n    company,\n    email,\n    public_repos,\n    repos_url,\n    location,\n    lastActivityDate,\n  } as const;\n};\n\nexport const cardOPenedFlag = (cardOPenedFlag: boolean) => {\n  return {\n    type: CONST.CARD_OPEN_FLAG,\n    cardOPenedFlag,\n  } as const;\n};\n\nexport const loadingFlag = (loadingFlag: boolean) => {\n  return {\n    type: CONST.LOADING,\n    loadingFlag,\n  } as const;\n};\n\nexport const errorFlag = (errorFlag: boolean) => {\n  return {\n    type: CONST.ERROR,\n    errorFlag,\n  } as const;\n};\n\nexport const userListOpenedFlag = (userListFlag: boolean) => {\n  return {\n    type: CONST.USERS_LIST_OPENED_FLAG,\n    userListFlag,\n  } as const;\n};\n\nexport const fetchUsersList = (\n  usersList: UserInnerType[],\n  lastRequestType: string,\n) => {\n  return {\n    type: CONST.FETCH_USERS_LIST,\n    usersList,\n    lastRequestType,\n  } as const;\n};\n\nexport const fetchSearhHistory = (searchHistory: ISearhHistoryItem) => {\n  return {\n    type: CONST.FETCH_SEARCH_HISTORY,\n    searchHistory,\n  } as const;\n};\n\nexport const searchHistoryListFlag = (searchHistoryListFlag: boolean) => {\n  return {\n    type: CONST.SEARCH_HISTORY_LIST_FLAG,\n    searchHistoryListFlag,\n  } as const;\n};\n\nexport const fetchAllHistory = (allSearchHistory: ISearhHistoryItem[]) => {\n  return {\n    type: CONST.FETCH_ALL_HISTORY,\n    allSearchHistory,\n  } as const;\n};\n\nexport const fetchReposList = (reposList: IRepoItem[]) => {\n  return {\n    type: CONST.FETCH_REPOS_LIST,\n    reposList,\n  } as const;\n};\n\nexport const reposOpenedListFlag = (reposListFlag: boolean) => {\n  return {\n    type: CONST.REPOS_OPENED_LIST_FLAG,\n    reposListFlag,\n  } as const;\n};\n\nexport const modalFlag = (\n  modalFlag: boolean,\n  text: string,\n  modalType: 'search' | 'favorite',\n) => {\n  return {\n    type: CONST.SEARCH_HISTORY_MODAL_FLAG,\n    modalFlag,\n    text,\n    modalType,\n  } as const;\n};\n\nexport const searhStart = () => {\n  return {\n    type: CONST.SEARCH_START,\n  } as const;\n};\n\nexport const searchIsMobile = (isMobile: boolean) => {\n  return {\n    type: CONST.SEARCH_IS_MOBILE,\n    isMobile,\n  } as const;\n};\n\ntype fetchLoginType = ReturnType<typeof fetchLogin>;\ntype cardOPenedFlagType = ReturnType<typeof cardOPenedFlag>;\ntype loadingFlagType = ReturnType<typeof loadingFlag>;\ntype errorFlagType = ReturnType<typeof errorFlag>;\ntype userListOpenedFlagType = ReturnType<typeof userListOpenedFlag>;\ntype fetchUsersListType = ReturnType<typeof fetchUsersList>;\ntype fetchSearhHistoryType = ReturnType<typeof fetchSearhHistory>;\ntype searchHistoryListFlagType = ReturnType<typeof searchHistoryListFlag>;\ntype fetchAllHistoryType = ReturnType<typeof fetchAllHistory>;\ntype fetchReposListType = ReturnType<typeof fetchReposList>;\ntype reposOpenedListFlagType = ReturnType<typeof reposOpenedListFlag>;\ntype modalFlagType = ReturnType<typeof modalFlag>;\ntype searhStartType = ReturnType<typeof searhStart>;\ntype searchIsMobileType = ReturnType<typeof searchIsMobile>;\n\nexport type ActionsType =\n  | fetchLoginType\n  | cardOPenedFlagType\n  | loadingFlagType\n  | errorFlagType\n  | userListOpenedFlagType\n  | fetchUsersListType\n  | fetchSearhHistoryType\n  | searchHistoryListFlagType\n  | fetchAllHistoryType\n  | fetchReposListType\n  | reposOpenedListFlagType\n  | modalFlagType\n  | searhStartType\n  | searchIsMobileType;\n","export const searchUserDefault = {\n  name: '',\n  login: '',\n  followersUrl: '',\n  followingUrl: '',\n  avatarUrl: '',\n  followersNum: 0,\n  followingNum: 0,\n  dataCreated: new Date(),\n  company: '',\n  email: '',\n  reposNum: 0,\n  reposUrl: '',\n  location: '',\n  lastActivityDate: '',\n};\n\nexport const mobileWidth = 480;\n","import * as CONST from './constants';\nimport { searchUserDefault } from '../../constants/searchConstants';\n\nimport { InitialStateType } from './types';\n\nimport { ActionsType } from './actions';\n\nconst initialState: InitialStateType = {\n  user: searchUserDefault,\n  usersList: [],\n  reposList: [],\n  lastRequestType: '',\n  usersListOpened: false,\n  reposListOpened: false,\n  cardOpened: false,\n  loading: false,\n  error: false,\n  searchHistory: [],\n  searchHistoryListFlag: false,\n  modalFlag: false,\n  modalText: '',\n  modalType: 'search',\n  isMobile: false,\n};\n\nexport const SearchReducer = (\n  state = initialState,\n  action: ActionsType,\n): typeof state => {\n  switch (action.type) {\n    case CONST.FETCH_LOGIN:\n      return {\n        ...state,\n        user: {\n          name: action.name,\n          login: action.login,\n          followersUrl: action.followers_url,\n          followingUrl: action.following_url,\n          avatarUrl: action.avatar_url,\n          followersNum: action.followers,\n          followingNum: action.following,\n          dataCreated: action.created_at,\n          company: action.company,\n          email: action.email,\n          reposNum: action.public_repos,\n          reposUrl: action.repos_url,\n          location: action.location,\n          lastActivityDate: action.lastActivityDate,\n        },\n      };\n\n    case CONST.CARD_OPEN_FLAG:\n      return { ...state, cardOpened: action.cardOPenedFlag };\n\n    case CONST.LOADING:\n      return { ...state, loading: action.loadingFlag };\n\n    case CONST.ERROR:\n      return { ...state, error: action.errorFlag };\n\n    case CONST.USERS_LIST_OPENED_FLAG:\n      return { ...state, usersListOpened: action.userListFlag };\n\n    case CONST.FETCH_USERS_LIST:\n      return {\n        ...state,\n        usersList: action.usersList,\n        lastRequestType: action.lastRequestType,\n      };\n\n    case CONST.FETCH_SEARCH_HISTORY:\n      return {\n        ...state,\n        searchHistory: [...state.searchHistory, action.searchHistory],\n      };\n\n    case CONST.FETCH_ALL_HISTORY:\n      return { ...state, searchHistory: action.allSearchHistory };\n\n    case CONST.SEARCH_HISTORY_LIST_FLAG:\n      return { ...state, searchHistoryListFlag: action.searchHistoryListFlag };\n\n    case CONST.FETCH_REPOS_LIST:\n      return { ...state, reposList: action.reposList };\n\n    case CONST.REPOS_OPENED_LIST_FLAG:\n      return { ...state, reposListOpened: action.reposListFlag };\n\n    case CONST.SEARCH_HISTORY_MODAL_FLAG:\n      return {\n        ...state,\n        modalFlag: action.modalFlag,\n        modalText: action.text,\n        modalType: action.modalType,\n      };\n\n    case CONST.SEARCH_START:\n      return {\n        ...state,\n        error: false,\n        usersListOpened: false,\n        cardOpened: false,\n        reposListOpened: false,\n        reposList: [],\n        loading: true,\n      };\n\n    case CONST.SEARCH_IS_MOBILE:\n      return { ...state, isMobile: action.isMobile };\n\n    default:\n      return state;\n  }\n};\n","import * as CONST from './constants';\n\nimport { InitialFavoriteStateType } from './types';\n\nimport { ActionsType } from './actions';\n\nconst InitialState: InitialFavoriteStateType = {\n  favoriteBtnFlag: false,\n  favoriteListFlag: false,\n  favoriteList: [],\n  favoriteUser: false,\n  noteFlag: false,\n  noteBtnFlag: false,\n  note: '',\n};\n\nexport const FavoriteReducer = (\n  state = InitialState,\n  action: ActionsType,\n): typeof state => {\n  switch (action.type) {\n    case CONST.FAVORITE_BTN_FLAG:\n      return { ...state, favoriteBtnFlag: action.favoriteBtnFlag };\n\n    case CONST.FAVORITE_LIST:\n      return { ...state, favoriteList: action.favoriteList };\n\n    case CONST.FAVORITE_LIST_ADD:\n      return {\n        ...state,\n        favoriteList: [...state.favoriteList, action.favoriteList],\n      };\n\n    case CONST.FAVORITE_LIST_FLAG:\n      return { ...state, favoriteListFlag: action.favoriteListFlag };\n\n    case CONST.FAVORITE_USER_FLAG:\n      return { ...state, favoriteUser: action.favoriteUserFlag };\n\n    case CONST.NOTE_FLAG:\n      return { ...state, noteFlag: action.noteFlag };\n\n    case CONST.NOTE_SAVE:\n      return { ...state, note: action.note };\n\n    case CONST.NOTE_BTN_FLAG:\n      return { ...state, noteBtnFlag: action.noteBtnFlag };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { SearchReducer } from './SearchReducer/SearchReducer';\nimport { FavoriteReducer } from './FavoriteReduser/FavoriteReducer';\n\nexport const RootReducer = combineReducers({\n  search: SearchReducer,\n  favorite: FavoriteReducer,\n});\n\nexport type AppStateType = ReturnType<typeof RootReducer>;\n","import axios from 'axios';\n\nexport const API = axios.create({\n  baseURL: 'https://api.github.com/users/',\n});\n","import { takeEvery, put, all } from 'redux-saga/effects';\n\nimport { SEARCH_LOGIN_SAGA } from '../constants';\n\nimport {\n  favoriteListFlag,\n  favoriteUserFlag,\n  noteBtnFlag,\n  noteSave,\n} from '../../FavoriteReduser/actions';\nimport {\n  cardOPenedFlag,\n  errorFlag,\n  fetchLogin,\n  fetchSearhHistory,\n  loadingFlag,\n  searchHistoryListFlag,\n  searhStart,\n} from '../actions';\n\nimport { ISearhHistoryItem, SearchSagaWorkerType } from '../types';\n\nimport { API } from '../../../api/API';\n\nasync function getUserInfo(login: string) {\n  const response = await API.get(`${login.trim()}`).then((res) => res.data);\n  return response;\n}\n\nasync function getLastActivityDate(login: string) {\n  const response = await API.get(`${login.trim()}/events`)\n    .then((res) => res.data[0].created_at)\n    // eslint-disable-next-line no-console\n    .catch((error) => console.log(error));\n  return response;\n}\n\nfunction* sagaWorker(action: SearchSagaWorkerType) {\n  try {\n    yield all([put(searhStart()), put(noteSave('')), put(noteBtnFlag(false))]);\n\n    if (action.isMobile) {\n      yield put(searchHistoryListFlag(false));\n      yield put(favoriteListFlag(false));\n    }\n\n    const { allData, lastActivityDate } = yield all({\n      allData: getUserInfo(action.login),\n      lastActivityDate: getLastActivityDate(action.login),\n    });\n\n    yield put(\n      fetchLogin(\n        allData.name,\n        allData.login,\n        allData.followers_url,\n        allData.following_url,\n        allData.followers,\n        allData.following,\n        new Date(allData.created_at),\n        allData.avatar_url,\n        allData.company,\n        allData.email,\n        allData.public_repos,\n        allData.repos_url,\n        allData.location,\n        lastActivityDate,\n      ),\n    );\n\n    if (action.favoritesList?.find((el) => el.name === allData.login)) {\n      yield put(favoriteUserFlag(true));\n    } else {\n      yield put(favoriteUserFlag(false));\n    }\n\n    if (\n      action.favoritesList?.find((el) => el.name === allData.login)?.note\n        ?.length\n    ) {\n      yield put(noteBtnFlag(true));\n\n      const noteToWrite: string = yield action.favoritesList?.find(\n        (el) => el.name === action.login,\n      )?.note;\n\n      yield put(noteSave(noteToWrite));\n    } else {\n      yield put(noteBtnFlag(false));\n    }\n\n    const newHistoryItem: ISearhHistoryItem = yield {\n      login: allData.login,\n      dateOfSearch: new Date(),\n    };\n    yield put(fetchSearhHistory(newHistoryItem));\n    yield localStorage.setItem(\n      'saves',\n      JSON.stringify([...action.history, newHistoryItem]),\n    );\n\n    yield all([put(cardOPenedFlag(true)), put(loadingFlag(false))]);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n    yield all([put(loadingFlag(false)), put(errorFlag(true))]);\n  }\n}\n\nexport function* SearchSagaWatcher() {\n  yield takeEvery(SEARCH_LOGIN_SAGA, sagaWorker);\n}\n","import { takeEvery, put } from 'redux-saga/effects';\n\nimport { FETCH_USERS_LIST_SAGA } from '../constants';\nimport {\n  cardOPenedFlag,\n  fetchUsersList,\n  loadingFlag,\n  userListOpenedFlag,\n} from '../actions';\nimport { IFetchUsersListSagaWorker, UserInnerType } from '../types';\n\nimport { API } from '../../../api/API';\n\nasync function getUserInfo(login: string, requestType: string) {\n  const response = await API.get(`${login}/${requestType}`).then(\n    (res) => res.data,\n  );\n  return response;\n}\n\nfunction* sagaWorker(action: IFetchUsersListSagaWorker) {\n  try {\n    yield put(cardOPenedFlag(false));\n    yield put(loadingFlag(true));\n\n    const allData: UserInnerType[] = yield getUserInfo(\n      action.login,\n      action.requestType,\n    );\n\n    yield put(fetchUsersList(allData, action.requestType));\n\n    yield put(loadingFlag(false));\n    yield put(userListOpenedFlag(true));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n    yield put(loadingFlag(false));\n  }\n}\n\nexport function* FetchUsersListSagaWatcher() {\n  yield takeEvery(FETCH_USERS_LIST_SAGA, sagaWorker);\n}\n","import { takeEvery, put } from 'redux-saga/effects';\n\nimport { GET_LOCAL_HISTORY_SAGA } from '../constants';\nimport { fetchAllHistory } from '../actions';\nimport { ISearhHistoryItem } from '../types';\n\nfunction* sagaWorker() {\n  try {\n    const saved: ISearhHistoryItem[] = yield JSON.parse(\n      localStorage.getItem('saves') || '[]',\n    );\n\n    yield put(fetchAllHistory(saved));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n  }\n}\n\nexport function* GetLocalHistorySagaWatcher() {\n  yield takeEvery(GET_LOCAL_HISTORY_SAGA, sagaWorker);\n}\n","import { takeEvery, put } from 'redux-saga/effects';\n\nimport { REPOS_LIST_SAGA } from '../constants';\nimport {\n  cardOPenedFlag,\n  fetchReposList,\n  loadingFlag,\n  reposOpenedListFlag,\n} from '../actions';\nimport { IRepoItem, IReposListSagaWorker } from '../types';\n\nimport { API } from '../../../api/API';\n\nasync function getReposInfo(login: string) {\n  const response = await API.get(`${login}/repos`).then((res) => res.data);\n  return response;\n}\n\nfunction* sagaWorker(action: IReposListSagaWorker) {\n  try {\n    yield put(cardOPenedFlag(false));\n    yield put(loadingFlag(true));\n\n    const allRepos: IRepoItem[] = yield getReposInfo(action.login);\n\n    yield put(fetchReposList(allRepos));\n    yield put(reposOpenedListFlag(true));\n    yield put(loadingFlag(false));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n    yield put(loadingFlag(false));\n  }\n}\n\nexport function* ReposListSagaWatcher() {\n  yield takeEvery(REPOS_LIST_SAGA, sagaWorker);\n}\n","import { takeEvery, put } from 'redux-saga/effects';\n\nimport { fetchFavoriteList } from '../actions';\n\nimport { FAVORITE_LIST_SAGA } from '../constants';\n\nimport { FavoriteUser } from '../types';\n\nfunction* sagaWorker() {\n  try {\n    const saved: FavoriteUser[] = yield JSON.parse(\n      localStorage.getItem('favorite') || '[]',\n    );\n\n    yield put(fetchFavoriteList(saved));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n  }\n}\n\nexport function* GetFavoriteListSagaWatcher() {\n  yield takeEvery(FAVORITE_LIST_SAGA, sagaWorker);\n}\n","import { takeEvery, put, all } from 'redux-saga/effects';\n\nimport { SEARCH_INIT_SAGA } from '../constants';\nimport { mobileWidth } from '../../../constants/searchConstants';\n\nimport { getLocalHistorySaga } from '../actionsSagas';\nimport { errorFlag, loadingFlag, searchIsMobile } from '../actions';\nimport { getFavoriteListSaga } from '../../FavoriteReduser/actions';\n\nfunction* sagaWorker() {\n  try {\n    // detect mobiles\n    const width: number = yield document.documentElement.clientWidth;\n    if (width <= mobileWidth) {\n      yield put(searchIsMobile(true));\n    } else {\n      yield put(searchIsMobile(false));\n    }\n\n    // get elements from localstorage\n    yield put(getLocalHistorySaga());\n    yield put(getFavoriteListSaga());\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n    yield all([put(loadingFlag(false)), put(errorFlag(true))]);\n  }\n}\n\nexport function* InitFetchSagaWatcher() {\n  yield takeEvery(SEARCH_INIT_SAGA, sagaWorker);\n}\n","import { fork, all } from 'redux-saga/effects';\n\nimport { SearchSagaWatcher } from './SearchReducer/sagas/SearchSaga';\nimport { FetchUsersListSagaWatcher } from './SearchReducer/sagas/FetchUsersListSaga';\nimport { GetLocalHistorySagaWatcher } from './SearchReducer/sagas/GetLocalHistorySaga';\nimport { ReposListSagaWatcher } from './SearchReducer/sagas/ReposListSaga';\nimport { GetFavoriteListSagaWatcher } from './FavoriteReduser/sagas/GetFavoriteListSaga';\nimport { InitFetchSagaWatcher } from './SearchReducer/sagas/InitFetchSaga';\n\nexport default function* rootSaga() {\n  yield all([\n    fork(SearchSagaWatcher),\n    fork(FetchUsersListSagaWatcher),\n    fork(GetLocalHistorySagaWatcher),\n    fork(ReposListSagaWatcher),\n    fork(GetFavoriteListSagaWatcher),\n    fork(InitFetchSagaWatcher),\n  ]);\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\n\nimport {\n  favoriteUserFlag,\n  fetchFavoriteList,\n  fetchFavoriteListAdd,\n  noteBtnFlag,\n  noteFlag,\n  noteSave,\n  setFavoriteBtnFlag,\n} from '../../store/FavoriteReduser/actions';\n\nimport { INote } from './types';\n\nimport styles from './Note.module.css';\n\nconst Note: React.FC<INote> = ({ login, favorites, note }) => {\n  const dispatch = useDispatch();\n  const ref: any = useRef();\n\n  useEffect(() => {\n    ref.current.focus();\n  }, []);\n\n  const [value, setValue] = useState<string>(note);\n  const [isModalOpened, setIsModalOpened] = useState<boolean>(false);\n\n  const onChangeHandler: React.ChangeEventHandler<HTMLTextAreaElement> = (\n    event,\n  ) => {\n    if (!event.target.value.trim()) {\n      return;\n    }\n    setValue(event.target.value);\n  };\n\n  const onCancelHandler = () => {\n    dispatch(noteFlag(false));\n    setValue('');\n  };\n\n  const onSubmitHandler = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    if (favorites.find((el) => el.name === login)) {\n      // user is in favorites yet\n\n      dispatch(noteSave(value));\n      dispatch(noteFlag(false));\n      dispatch(noteBtnFlag(true));\n      setValue('');\n\n      const newfavoriteUser = { name: login, note: value };\n      const findUser: any = favorites.find((el) => el.name === login);\n      const index = favorites.indexOf(findUser);\n      const newFavorites = [...favorites];\n      newFavorites[index] = newfavoriteUser;\n\n      dispatch(fetchFavoriteList(newFavorites));\n      localStorage.setItem('favorite', JSON.stringify(newFavorites));\n    } else {\n      // user isn't in favorites yet\n\n      dispatch(noteSave(value));\n      dispatch(noteFlag(false));\n      dispatch(noteBtnFlag(true));\n      setValue('');\n\n      const newfavoriteUser = { name: login, note: value };\n      dispatch(fetchFavoriteListAdd(newfavoriteUser));\n      localStorage.setItem(\n        'favorite',\n        JSON.stringify([...favorites, newfavoriteUser]),\n      );\n\n      dispatch(favoriteUserFlag(true));\n      dispatch(setFavoriteBtnFlag(true));\n    }\n  };\n\n  const onBtnModalHandler = (action: boolean) => {\n    if (action) {\n      setValue('');\n\n      const newfavoriteUserList = favorites.map((el) => {\n        if (el.name === login) {\n          return { name: login };\n        }\n        return el;\n      });\n\n      localStorage.setItem('favorite', JSON.stringify(newfavoriteUserList));\n\n      dispatch(noteSave(''));\n      dispatch(fetchFavoriteList(newfavoriteUserList));\n      dispatch(noteFlag(false));\n      dispatch(noteBtnFlag(false));\n    } else {\n      setIsModalOpened(false);\n    }\n  };\n\n  return (\n    <div className={styles.component}>\n      <form className={styles.form} onSubmit={onSubmitHandler}>\n        <textarea onChange={onChangeHandler} value={value} ref={ref} />\n\n        <footer className={styles.formFooter}>\n          <div className={styles.lettersQuantity}>\n            {value.length ? `Characters: ${value.length}` : ''}\n          </div>\n          <div className={styles.btnsWrapper}>\n            <button type=\"button\" onClick={onCancelHandler}>\n              Cancel\n            </button>\n\n            {value && (\n              <button\n                type=\"button\"\n                className={styles.buttonDel}\n                onClick={() => setIsModalOpened(true)}\n              >\n                Delete\n              </button>\n            )}\n\n            <button\n              type=\"submit\"\n              className={clsx(!value && styles.buttonUnactive)}\n              disabled={!value}\n            >\n              Save and add to favorites\n            </button>\n          </div>\n        </footer>\n      </form>\n\n      {isModalOpened && (\n        <div className={styles.noteModal}>\n          <span>\n            Are you sure to delete the note of{' '}\n            <span className={styles.colorText}>{login}</span>?\n          </span>\n          <div className={styles.btnsModalWrapper}>\n            <button type=\"button\" onClick={() => onBtnModalHandler(true)}>\n              Delete\n            </button>\n            <button type=\"button\" onClick={() => onBtnModalHandler(false)}>\n              Cansel\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Note;\n","import React from 'react';\n\nimport { IError } from './types';\n\nimport styles from './Error.module.css';\n\nconst Error: React.FC<IError> = ({ userName }): JSX.Element => {\n  return (\n    <div className={styles.errorWrapper}>\n      <h2>\n        User\n        <span className={styles.errorUserInfo}> {userName} </span>\n        is not found...\n      </h2>\n    </div>\n  );\n};\n\nexport default Error;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport CloseButton from '../../ui/CloseButton';\n\nimport {\n  fetchAllHistory,\n  searchHistoryListFlag,\n  modalFlag,\n} from '../../store/SearchReducer/actions';\n\nimport { ISearchHistoryModal } from './types';\n\nimport styles from './Modal.module.css';\nimport {\n  favoriteListFlag,\n  favoriteUserFlag,\n  fetchFavoriteList,\n} from '../../store/FavoriteReduser/actions';\n\nconst Modal: React.FC<ISearchHistoryModal> = ({ textModal, type }) => {\n  const dispatch = useDispatch();\n\n  const onBtnsHandler = (delStatus: boolean) => {\n    if (delStatus) {\n      if (type === 'search') {\n        dispatch(searchHistoryListFlag(false));\n        dispatch(fetchAllHistory([]));\n        localStorage.removeItem('saves');\n      } else if (type === 'favorite') {\n        dispatch(favoriteListFlag(false));\n        dispatch(favoriteUserFlag(false));\n        dispatch(fetchFavoriteList([]));\n        localStorage.removeItem('favorite');\n      }\n      dispatch(modalFlag(false, '', 'search'));\n    } else {\n      dispatch(modalFlag(false, '', 'search'));\n    }\n  };\n  return (\n    <div className={styles.modalWrapper}>\n      <div className={styles.modal}>\n        <span>{textModal}</span>\n        <div className={styles.btnsWrapper}>\n          <button type=\"button\" onClick={() => onBtnsHandler(true)}>\n            Delete\n          </button>\n          <button type=\"button\" onClick={() => onBtnsHandler(false)}>\n            Cansel\n          </button>\n        </div>\n        <div className={styles.closeBtnWrapper}>\n          <CloseButton onClick={() => onBtnsHandler(false)} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\n\nimport { IButton } from './types';\n\nimport styles from './SubmitButton.module.css';\n\nconst SubmitButton: React.FC<IButton> = ({ children, disabled }) => {\n  return (\n    <button\n      className={clsx(disabled && styles.buttonUnactive, styles.button)}\n      type=\"submit\"\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default memo(SubmitButton);\n","import React, { useState, useRef, useEffect, memo } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { searchSaga } from '../../store/SearchReducer/actionsSagas';\n\nimport SubmitButton from '../../ui/SubmitButton';\n\nimport { ISearch } from './types';\n\nimport styles from './SearchForm.module.css';\n\nconst SearchForm: React.FC<ISearch> = ({\n  search,\n  history,\n  favoritesList,\n  currentUser,\n  isMobile,\n}) => {\n  const [searchLogin, setsearchLogin] = useState<string>('');\n  const [disabledBtn, setDisabledBtn] = useState(true);\n  const dispatch = useDispatch();\n\n  // auto focus on input\n  const ref: any = useRef(null);\n  useEffect(() => {\n    ref.current.focus();\n  }, []);\n\n  const changeTextHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let textValue = event?.target.value;\n    setsearchLogin(textValue);\n\n    if (textValue.trim()) {\n      setDisabledBtn(false);\n    } else {\n      setDisabledBtn(true);\n    }\n  };\n\n  const onSubmitHandler = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    if (searchLogin.toLocaleLowerCase() === currentUser.toLocaleLowerCase()) {\n      setsearchLogin('');\n      setDisabledBtn(true);\n      return;\n    }\n\n    dispatch(searchSaga(searchLogin, history, isMobile, favoritesList));\n    search(searchLogin);\n    setsearchLogin('');\n    setDisabledBtn(true);\n  };\n\n  return (\n    <form className={styles.form} onSubmit={onSubmitHandler}>\n      <input\n        ref={ref}\n        className={styles.input}\n        type=\"text\"\n        placeholder=\"Enter the github login\"\n        value={searchLogin}\n        onChange={changeTextHandler}\n      />\n      <SubmitButton disabled={disabledBtn}>Search</SubmitButton>\n    </form>\n  );\n};\n\nexport default memo(SearchForm);\n","import React, { memo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { favoriteListFlag } from '../../store/FavoriteReduser/actions';\nimport { searchHistoryListFlag } from '../../store/SearchReducer/actions';\n\nimport { IFavoriteButton } from './types';\n\nimport styles from './FavoriteButton.module.css';\n\nconst FavoriteButton: React.FC<IFavoriteButton> = ({\n  starNum,\n  favoriteListStatus,\n}) => {\n  const dispatch = useDispatch();\n\n  const showFavoriteListHandler = () => {\n    if (favoriteListStatus) {\n      dispatch(favoriteListFlag(false));\n    } else {\n      dispatch(favoriteListFlag(true));\n      dispatch(searchHistoryListFlag(false));\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className={clsx(favoriteListStatus && styles.buttonActive, styles.button)}\n      onClick={showFavoriteListHandler}\n    >\n      <span className={styles.star}>&#9733;</span>\n      <span>{starNum}</span>\n    </button>\n  );\n};\n\nexport default memo(FavoriteButton);\n","import React, { memo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { favoriteListFlag } from '../../store/FavoriteReduser/actions';\nimport { searchHistoryListFlag } from '../../store/SearchReducer/actions';\n\nimport { ISearchHistoryHeader } from './types';\n\nimport styles from './SearchHistoryHeader.module.css';\n\nconst SearchHistoryHeader: React.FC<ISearchHistoryHeader> = ({\n  historyLength,\n  historyBtnStatus,\n  searchHistoryListStatus,\n}) => {\n  const dispatch = useDispatch();\n\n  const onSearchHistoryBtnHandler = () => {\n    if (historyBtnStatus) {\n      dispatch(searchHistoryListFlag(false));\n    } else {\n      dispatch(favoriteListFlag(false));\n      dispatch(searchHistoryListFlag(true));\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className={clsx(\n        searchHistoryListStatus && styles.shhWrapperActive,\n        styles.shhWrapper,\n      )}\n      onClick={onSearchHistoryBtnHandler}\n    >\n      Search history <span>({historyLength})</span>\n    </button>\n  );\n};\n\nexport default memo(SearchHistoryHeader);\n","import React from 'react';\n\nimport styles from './Loader.module.css';\n\nconst Loader: React.FC = () => {\n  return (\n    <div className={styles.loaderWrapper}>\n      <div className={styles.ldsDefault}>\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { AppStateType } from '../../../store/RootReducer';\n\nexport const selectFavorite = createSelector(\n  (store: AppStateType) => store.favorite,\n  (favorite) => favorite,\n);\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { AppStateType } from '../../../store/RootReducer';\n\nexport const selectSearch = createSelector(\n  (store: AppStateType) => store.search,\n  (search) => search,\n);\n","import React, { memo, Suspense, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport Note from '../../components/Note';\nimport Error from '../../components/Error';\nimport Modal from '../../components/Modal';\nimport SearchForm from '../../components/SearchForm';\nimport FavoriteButton from '../../components/FavoriteButton';\nimport SearchHistoryHeader from '../../components/SearchHistoryHeader';\n\nimport Loader from '../../ui/Loader';\n\nimport {\n  cardOPenedFlag,\n  reposOpenedListFlag,\n  userListOpenedFlag,\n} from '../../store/SearchReducer/actions';\nimport { searhInitFetchSaga } from '../../store/SearchReducer/actionsSagas';\nimport { favoriteListFlag } from '../../store/FavoriteReduser/actions';\n\nimport { selectFavorite } from '../../store/SearchReducer/selectors/selectors';\nimport { selectSearch } from '../../store/FavoriteReduser/selectors/selectors';\n\nimport styles from './Root.module.css';\n\nconst LazySearchHistoryList = React.lazy(\n  () => import('../../components/SearchHistoryList'),\n);\nconst LazyFavoriteList = React.lazy(\n  () => import('../../components/FavoriteList'),\n);\nconst LazyCard = React.lazy(() => import('../../components/Card'));\nconst LazyReposList = React.lazy(() => import('../../components/ReposList'));\nconst LazyUsersList = React.lazy(() => import('../../components/UsersList'));\n\nconst Root: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const search = useSelector(selectSearch);\n  const favorite = useSelector(selectFavorite);\n\n  const [user, setUser] = useState<string>('');\n\n  const isCardOpen =\n    (!search.isMobile && search.cardOpened) ||\n    (search.isMobile &&\n      search.cardOpened &&\n      !search.searchHistoryListFlag &&\n      !favorite.favoriteListFlag);\n\n  const isErrorOpen =\n    (!search.isMobile && search.error) ||\n    (search.isMobile &&\n      search.error &&\n      !search.searchHistoryListFlag &&\n      !favorite.favoriteListFlag);\n\n  useEffect(() => {\n    dispatch(searhInitFetchSaga());\n  }, [dispatch]);\n\n  // close favorite list if there are no any items\n  useEffect(() => {\n    if (!favorite.favoriteList.length) {\n      dispatch(favoriteListFlag(false));\n    }\n  }, [dispatch, favorite.favoriteList]);\n\n  const searchFunc = (searchLogin: string) => {\n    setUser(searchLogin);\n  };\n\n  const backBtnHandler = () => {\n    dispatch(userListOpenedFlag(false));\n    dispatch(reposOpenedListFlag(false));\n    dispatch(cardOPenedFlag(true));\n  };\n\n  return (\n    <div className={styles.rootWrapper}>\n      <header className={styles.rootHeader}>\n        <h1>Find github&apos;s user</h1>\n\n        <div className={styles.buttonsWrapper}>\n          {search.searchHistory.length ? (\n            <SearchHistoryHeader\n              historyLength={search.searchHistory.length}\n              searchHistoryListStatus={search.searchHistoryListFlag}\n              historyBtnStatus={search.searchHistoryListFlag}\n            />\n          ) : (\n            ''\n          )}\n          {favorite.favoriteList.length ? (\n            <FavoriteButton\n              starNum={favorite.favoriteList.length}\n              favoriteListStatus={favorite.favoriteListFlag}\n            />\n          ) : (\n            ''\n          )}\n        </div>\n      </header>\n\n      <main className={styles.root}>\n        <section className={styles.rootSectionLeft}>\n          <div className={clsx(styles.root, styles.rootSectionSearch)}>\n            <SearchForm\n              search={searchFunc}\n              history={search.searchHistory}\n              favoritesList={favorite.favoriteList}\n              currentUser={search.user.login}\n              isMobile={search.isMobile}\n            />\n\n            {(search.usersListOpened || search.reposListOpened) && (\n              <button\n                type=\"button\"\n                onClick={backBtnHandler}\n                className={styles.rootBtn}\n              >\n                Back\n              </button>\n            )}\n          </div>\n\n          {search.loading && <Loader />}\n          {isCardOpen && (\n            <>\n              <Suspense fallback={<Loader />}>\n                <LazyCard\n                  user={search.user}\n                  favorites={favorite.favoriteList}\n                  favoriteUserStatus={favorite.favoriteUser}\n                  noteUserStatus={favorite.noteBtnFlag}\n                  note={favorite.note}\n                  noteStoreFlag={favorite.noteFlag}\n                />\n              </Suspense>\n\n              {favorite.noteFlag && (\n                <Note\n                  note={favorite.note}\n                  login={search.user.login}\n                  favorites={favorite.favoriteList}\n                />\n              )}\n            </>\n          )}\n          {search.usersListOpened && (\n            <Suspense fallback={<Loader />}>\n              <LazyUsersList\n                users={search.usersList}\n                login={search.user.login}\n                requestType={search.lastRequestType}\n                history={search.searchHistory}\n                isMobile={search.isMobile}\n              />\n            </Suspense>\n          )}\n          {search.reposListOpened && (\n            <Suspense fallback={<Loader />}>\n              <LazyReposList reposList={search.reposList} />\n            </Suspense>\n          )}\n          {isErrorOpen && <Error userName={user} />}\n        </section>\n\n        {search.searchHistoryListFlag && (\n          <section className={styles.rootSectionRight}>\n            <Suspense fallback={<Loader />}>\n              <LazySearchHistoryList\n                searchList={search.searchHistory}\n                favoritesList={favorite.favoriteList}\n                currentUserLogin={search.user.login}\n                userListOpened={search.usersListOpened}\n                reposListOpened={search.reposListOpened}\n                isMobile={search.isMobile}\n              />\n            </Suspense>\n          </section>\n        )}\n\n        {favorite.favoriteListFlag && (\n          <section className={styles.rootSectionRight}>\n            <Suspense fallback={<Loader />}>\n              <LazyFavoriteList\n                favoriteList={favorite.favoriteList}\n                searchList={search.searchHistory}\n                currentUserLogin={search.user.login}\n                userListOpened={search.usersListOpened}\n                reposListOpened={search.reposListOpened}\n                isMobile={search.isMobile}\n              />\n            </Suspense>\n          </section>\n        )}\n      </main>\n\n      {search.modalFlag && (\n        <Modal textModal={search.modalText} type={search.modalType} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Root);\n","import React from 'react';\n\nimport Root from '../view/Root';\n\nimport './styles.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Root />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { RootReducer } from './store/RootReducer';\nimport RootSaga from './store/RootSaga';\n\nimport App from './App';\nimport './index.css';\n\nconst saga = createSagaMiddleware();\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(RootReducer, composeEnhancers(applyMiddleware(saga)));\n\nsaga.run(RootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","/* eslint-disable camelcase */\nimport * as CONST from './constants';\nimport { FavoriteUser } from './types';\n\nexport const setFavoriteBtnFlag = (favoriteBtnFlag: boolean) => {\n  return {\n    type: CONST.FAVORITE_BTN_FLAG,\n    favoriteBtnFlag,\n  } as const;\n};\n\nexport const fetchFavoriteList = (favoriteList: FavoriteUser[]) => {\n  return {\n    type: CONST.FAVORITE_LIST,\n    favoriteList,\n  } as const;\n};\n\nexport const fetchFavoriteListAdd = (favoriteList: FavoriteUser) => {\n  return {\n    type: CONST.FAVORITE_LIST_ADD,\n    favoriteList,\n  } as const;\n};\n\nexport const getFavoriteListSaga = () => {\n  return {\n    type: CONST.FAVORITE_LIST_SAGA,\n  } as const;\n};\n\nexport const favoriteListFlag = (favoriteListFlag: boolean) => {\n  return {\n    type: CONST.FAVORITE_LIST_FLAG,\n    favoriteListFlag,\n  } as const;\n};\n\nexport const favoriteUserFlag = (favoriteUserFlag: boolean) => {\n  return {\n    type: CONST.FAVORITE_USER_FLAG,\n    favoriteUserFlag,\n  } as const;\n};\n\nexport const noteFlag = (noteFlag: boolean) => {\n  return {\n    type: CONST.NOTE_FLAG,\n    noteFlag,\n  } as const;\n};\n\nexport const noteSave = (note: string) => {\n  return {\n    type: CONST.NOTE_SAVE,\n    note,\n  } as const;\n};\n\nexport const noteBtnFlag = (noteBtnFlag: boolean) => {\n  return {\n    type: CONST.NOTE_BTN_FLAG,\n    noteBtnFlag,\n  } as const;\n};\n\ntype setFavoriteBtnFlagType = ReturnType<typeof setFavoriteBtnFlag>;\ntype fetchFavoriteListType = ReturnType<typeof fetchFavoriteList>;\ntype fetchFavoriteListAddType = ReturnType<typeof fetchFavoriteListAdd>;\ntype getFavoriteListSagaType = ReturnType<typeof getFavoriteListSaga>;\ntype favoriteListFlagType = ReturnType<typeof favoriteListFlag>;\ntype favoriteUserFlagType = ReturnType<typeof favoriteUserFlag>;\ntype noteFlagType = ReturnType<typeof noteFlag>;\ntype noteSaveType = ReturnType<typeof noteSave>;\ntype noteBtnFlagType = ReturnType<typeof noteBtnFlag>;\n\nexport type ActionsType =\n  | setFavoriteBtnFlagType\n  | fetchFavoriteListAddType\n  | fetchFavoriteListType\n  | getFavoriteListSagaType\n  | favoriteListFlagType\n  | favoriteUserFlagType\n  | noteFlagType\n  | noteSaveType\n  | noteBtnFlagType;\n"],"sourceRoot":""}