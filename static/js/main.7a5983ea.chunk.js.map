{"version":3,"sources":["view/Root/Root.module.css","components/RepoItem/RepoItem.module.css","components/FavoriteList/FavoriteList.module.css","components/UserItem/UserItem.module.css","components/UsersList/UsersList.module.css","components/SearchHistoryList/SearchHistoryList.module.css","components/Modal/Modal.module.css","components/FavoriteButton/FavoriteButton.module.css","components/Error/Error.module.css","ui/SubmitButton/SubmitButton.module.css","components/SearchForm/SearchForm.module.css","components/SearchHistoryHeader/SearchHistoryHeader.module.css","ui/Loader/Loader.module.css","components/ReposList/ReposList.module.css","ui/CloseButton/CloseButton.module.css","components/Card/Card.module.css","store/SearchReducer/constants.ts","store/SearchReducer/SearchReducer.ts","store/FavoriteReduser/constants.ts","store/FavoriteReduser/FavoriteReducer.ts","store/RootReducer.ts","store/FavoriteReduser/actions.ts","store/SearchReducer/actions.ts","api/API.ts","store/SearchReducer/sagas/SearchSaga.ts","store/SearchReducer/sagas/FetchUsersListSaga.ts","store/SearchReducer/sagas/GetLocalHistorySaga.ts","store/SearchReducer/sagas/ReposListSaga.ts","store/FavoriteReduser/sagas/GetFavoriteListSaga.ts","store/RootSaga.ts","ui/CloseButton/CloseButton.tsx","utils/dateFormatter.ts","utils/periodCounter.ts","components/Card/Card.tsx","components/Error/Error.tsx","components/UserItem/UserItem.tsx","components/UsersList/UsersList.tsx","ui/SubmitButton/SubmitButton.tsx","components/SearchForm/SearchForm.tsx","components/SearchHistoryList/SearchHistoryList.tsx","components/SearchHistoryHeader/SearchHistoryHeader.tsx","ui/Loader/Loader.tsx","components/RepoItem/RepoItem.tsx","components/ReposList/ReposList.tsx","components/FavoriteList/FavoriteList.tsx","components/FavoriteButton/FavoriteButton.tsx","components/Modal/Modal.tsx","view/Root/Root.tsx","App/App.tsx","index.tsx"],"names":["module","exports","SEARCH_LOGIN_SAGA","FETCH_ALL_HISTORY","FETCH_SEARCH_HISTORY","SEARCH_HISTORY_LIST_FLAG","SEARCH_HISTORY_MODAL_FLAG","GET_LOCAL_HISTORY_SAGA","FETCH_LOGIN","FETCH_USERS_LIST","FETCH_USERS_LIST_SAGA","USERS_LIST_OPENED_FLAG","CARD_OPEN_FLAG","LOADING","ERROR","REPOS_LIST_SAGA","FETCH_REPOS_LIST","REPOS_OPENED_LIST_FLAG","initialState","user","name","login","followersUrl","followingUrl","avatarUrl","followersNum","followingNum","dataCreated","Date","company","email","reposNum","reposUrl","location","usersList","reposList","lastRequestType","usersListOpened","reposListOpened","cardOpened","loading","error","searchHistory","searchHistoryListFlag","modalFlag","modalText","modalType","FAVORITE_BTN_FLAG","FAVORITE_LIST_SAGA","FAVORITE_LIST_FLAG","FAVORITE_LIST_ADD","FAVORITE_LIST","FAVORITE_USER_FLAG","InitialState","favoriteBtnFlag","favoriteListFlag","favoriteList","favoriteUser","RootReducer","combineReducers","search","state","action","type","followers_url","following_url","avatar_url","followers","following","created_at","public_repos","repos_url","cardOPenedFlag","loadingFlag","errorFlag","userListFlag","allSearchHistory","reposListFlag","text","favorite","favoriteUserFlag","fetchFavoriteList","searchSaga","history","favoritesList","fetchLogin","userListOpenedFlag","searchHistoryLIstFlag","fetchAllHistory","fetchReposList","reposOpenedListFlag","API","axios","create","baseURL","sagaWorker","SearchSagaWatcher","getUserInfo","a","get","then","res","data","response","put","allData","find","el","dateOfSearch","newHistoryItem","localStorage","setItem","JSON","stringify","console","log","takeEvery","FetchUsersListSagaWatcher","requestType","GetLocalHistorySagaWatcher","parse","getItem","saved","ReposListSagaWatcher","getReposInfo","allRepos","GetFavoriteListSagaWatcher","rootSaga","all","fork","CloseButton","onClick","className","styles","close_btn","dateFormatter","day","getDate","month","getMonth","year","getFullYear","periodCounter","duration","getTime","years","Math","floor","months","days","yearsStr","monthsStr","daysStr","Card","favorites","favoriteUserStatus","dispatch","useDispatch","onBtnClickHandler","fetchUsersListSaga","card","card_element","card_photo_wrapper","src","alt","card_sub_element","card_user_info","href","clsx","card_user_info_btn","card_followers_wrapper","card_followers_unit","card_sub_element_create","card_user_info_wrapper","closeBtnWrapper","button","newFavoriteUsersList","filter","star_active","star","Error","userName","error_wrapper","error_user_info","UserItem","user_item_wrapper","user_item_photo_wrapper","user_info","user_info_unit","UsersList","users","list_wrapper","length","list_wrapper_ul","map","list_error","list_error_login","SubmitButton","children","disabled","button_unactive","SearchForm","useState","searchLogin","setsearchLogin","disabledBtn","setDisabledBtn","ref","useRef","useEffect","current","focus","form","onSubmit","event","preventDefault","input","placeholder","value","onChange","textValue","target","trim","SearchHistoryList","searchList","currentUserLogin","shl_wrapper","i","shl_button","clearButton","SearchHistoryHeader","historyLength","historyBtnStatus","searchHistoryListStatus","shh_wrapper_active","shh_wrapper","Loader","loader_wrapper","lds_default","RepoItem","repoItem","repoItemWrapper","repoItemUnit","html_url","repoItemLink","rel","description","repoItemUnitDates","repoSubUnit","updated_at","language","ReposList","reposWrapper","repo","reposItem","FavoriteList","itemWrapper","deleteListItemBtn","delElem","deleteBtnHandler","FavoriteButton","starNum","favoriteListStatus","button_active","Modal","textModal","onBtnsHandler","delStatus","removeItem","modalWrapper","modal","btnsWrapper","Root","storeData","useSelector","store","setUser","root_wrapper","root_header","buttonsWrapper","root_section","root_sub_section","root_sub_section_left","root_section_search","root_btn","root_sub_section_right","App","saga","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","RootSaga","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a5983ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root_wrapper\":\"Root_root_wrapper__1z6jA\",\"root_header\":\"Root_root_header__2Q2gf\",\"root_section\":\"Root_root_section__wVSmS\",\"root_sub_section_left\":\"Root_root_sub_section_left__w7859\",\"root_sub_section_right\":\"Root_root_sub_section_right__2_xzV\",\"root_section_search\":\"Root_root_section_search__1UtNK\",\"root_btn\":\"Root_root_btn__3LWn4\",\"buttonsWrapper\":\"Root_buttonsWrapper__2E3GA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"repoItemWrapper\":\"RepoItem_repoItemWrapper__2Fu_3\",\"repoItemUnit\":\"RepoItem_repoItemUnit__2qFx0\",\"repoItemUnitDates\":\"RepoItem_repoItemUnitDates__1qPn2\",\"repoSubUnit\":\"RepoItem_repoSubUnit__fB19o\",\"repoItemLink\":\"RepoItem_repoItemLink__2qkow\",\"repoLink\":\"RepoItem_repoLink__V_ZRc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shl_wrapper\":\"FavoriteList_shl_wrapper__eUWAO\",\"itemWrapper\":\"FavoriteList_itemWrapper__2s9iZ\",\"shl_button\":\"FavoriteList_shl_button__1PS1k\",\"clearButton\":\"FavoriteList_clearButton__1Gswu\",\"closeBtnWrapper\":\"FavoriteList_closeBtnWrapper__finpP\",\"deleteListItemBtn\":\"FavoriteList_deleteListItemBtn__3v20o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_item_wrapper\":\"UserItem_user_item_wrapper__-S_MD\",\"user_item_photo_wrapper\":\"UserItem_user_item_photo_wrapper__3o12w\",\"user_info\":\"UserItem_user_info__2XGUt\",\"user_info_unit\":\"UserItem_user_info_unit__NXUAs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_wrapper\":\"UsersList_list_wrapper__nSqQh\",\"list_wrapper_ul\":\"UsersList_list_wrapper_ul__1J9t2\",\"list_error\":\"UsersList_list_error__3ILG7\",\"list_error_login\":\"UsersList_list_error_login__227Wx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shl_wrapper\":\"SearchHistoryList_shl_wrapper__2U7Jf\",\"shl_button\":\"SearchHistoryList_shl_button__1M9Sp\",\"clearButton\":\"SearchHistoryList_clearButton__dOJWU\",\"closeBtnWrapper\":\"SearchHistoryList_closeBtnWrapper__m_SYn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWrapper\":\"Modal_modalWrapper__VFEZN\",\"modal\":\"Modal_modal__P3_V5\",\"btnsWrapper\":\"Modal_btnsWrapper__1VvdY\",\"closeBtnWrapper\":\"Modal_closeBtnWrapper__2jGIJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FavoriteButton_button__dHVyF\",\"button_active\":\"FavoriteButton_button_active__3T88l\",\"star\":\"FavoriteButton_star__HPvj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_wrapper\":\"Error_error_wrapper__n50-v\",\"error_user_info\":\"Error_error_user_info__1rfOr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SubmitButton_button__1jVPC\",\"button_unactive\":\"SubmitButton_button_unactive__2Zxfo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SearchForm_form__qWosj\",\"input\":\"SearchForm_input__zWLnu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shh_wrapper\":\"SearchHistoryHeader_shh_wrapper__1srK3\",\"shh_wrapper_active\":\"SearchHistoryHeader_shh_wrapper_active__1Mrzr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader_wrapper\":\"Loader_loader_wrapper__3aoS5\",\"lds_default\":\"Loader_lds_default__4yQ63\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reposWrapper\":\"ReposList_reposWrapper__1jFch\",\"reposItem\":\"ReposList_reposItem__1-Utc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"close_btn\":\"CloseButton_close_btn__qWf0r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1eE8R\",\"card_element\":\"Card_card_element__3GM1L\",\"card_photo_wrapper\":\"Card_card_photo_wrapper__1vD-m\",\"card_followers_wrapper\":\"Card_card_followers_wrapper__KJHwU\",\"card_followers_unit\":\"Card_card_followers_unit__20nId\",\"card_sub_element\":\"Card_card_sub_element__gi5oY\",\"card_sub_element_create\":\"Card_card_sub_element_create__8nolq\",\"card_user_info\":\"Card_card_user_info__3FZH1\",\"card_user_info_wrapper\":\"Card_card_user_info_wrapper__EpTU8\",\"card_user_info_btn\":\"Card_card_user_info_btn__1ZOjp\",\"closeBtnWrapper\":\"Card_closeBtnWrapper__3rise\",\"button\":\"Card_button__3MKN6\",\"star\":\"Card_star__IfEy2\",\"star_active\":\"Card_star_active__8mQXD\"};","export const SEARCH_LOGIN_SAGA = 'SEARCH_LOGIN_SAGA';\n\nexport const FETCH_ALL_HISTORY = 'FETCH_ALL_HISTORY';\nexport const FETCH_SEARCH_HISTORY = 'FETCH_SEARCH_HISTORY';\nexport const SEARCH_HISTORY_LIST_FLAG = 'SEARCH_HISTORY_LIST_FLAG';\nexport const SEARCH_HISTORY_MODAL_FLAG = 'SEARCH_HISTORY_MODAL_FLAG';\n\nexport const GET_LOCAL_HISTORY_SAGA = 'GET_LOCAL_HISTORY_SAGA';\n\nexport const FETCH_LOGIN = 'FETCH_LOGIN';\nexport const FETCH_USERS_LIST = 'FETCH_USERS_LIST';\nexport const FETCH_USERS_LIST_SAGA = 'FETCH_USERS_LIST_SAGA';\nexport const USERS_LIST_OPENED_FLAG = 'USERS_LIST_OPENED_FLAG';\n\nexport const CARD_OPEN_FLAG = 'CARD_OPEN_FLAG';\n\nexport const LOADING = 'LOADING';\n\nexport const ERROR = 'ERROR';\n\nexport const REPOS_LIST_SAGA = 'REPOS_LIST_SAGA';\nexport const FETCH_REPOS_LIST = 'FETCH_REPOS_LIST';\nexport const REPOS_OPENED_LIST_FLAG = 'REPOS_OPENED_LIST_FLAG';\n","import {\n  FETCH_LOGIN,\n  CARD_OPEN_FLAG,\n  LOADING,\n  ERROR,\n  USERS_LIST_OPENED_FLAG,\n  FETCH_USERS_LIST,\n  FETCH_SEARCH_HISTORY,\n  FETCH_REPOS_LIST,\n  SEARCH_HISTORY_LIST_FLAG,\n  FETCH_ALL_HISTORY,\n  REPOS_OPENED_LIST_FLAG,\n  SEARCH_HISTORY_MODAL_FLAG,\n} from './constants';\n\nimport { InitialStateType } from './types';\n\nimport { ActionsType } from './actions';\n\nconst initialState: InitialStateType = {\n  user: {\n    name: '',\n    login: '',\n    followersUrl: '',\n    followingUrl: '',\n    avatarUrl: '',\n    followersNum: 0,\n    followingNum: 0,\n    dataCreated: new Date(),\n    company: '',\n    email: '',\n    reposNum: 0,\n    reposUrl: '',\n    location: '',\n  },\n  usersList: [],\n  reposList: [],\n  lastRequestType: '',\n  usersListOpened: false,\n  reposListOpened: false,\n  cardOpened: false,\n  loading: false,\n  error: false,\n  searchHistory: [],\n  searchHistoryListFlag: false,\n  modalFlag: false,\n  modalText: '',\n  modalType: 'search',\n};\n\nexport const SearchReducer = (\n  state = initialState,\n  action: ActionsType,\n): typeof state => {\n  switch (action.type) {\n    case FETCH_LOGIN:\n      return {\n        ...state,\n        user: {\n          name: action.name,\n          login: action.login,\n          followersUrl: action.followers_url,\n          followingUrl: action.following_url,\n          avatarUrl: action.avatar_url,\n          followersNum: action.followers,\n          followingNum: action.following,\n          dataCreated: action.created_at,\n          company: action.company,\n          email: action.email,\n          reposNum: action.public_repos,\n          reposUrl: action.repos_url,\n          location: action.location,\n        },\n      };\n\n    case CARD_OPEN_FLAG:\n      return {\n        ...state,\n        cardOpened: action.cardOPenedFlag,\n      };\n\n    case LOADING:\n      return {\n        ...state,\n        loading: action.loadingFlag,\n      };\n\n    case ERROR:\n      return {\n        ...state,\n        error: action.errorFlag,\n      };\n\n    case USERS_LIST_OPENED_FLAG:\n      return {\n        ...state,\n        usersListOpened: action.userListFlag,\n      };\n\n    case FETCH_USERS_LIST:\n      return {\n        ...state,\n        usersList: action.usersList,\n        lastRequestType: action.lastRequestType,\n      };\n\n    case FETCH_SEARCH_HISTORY:\n      return {\n        ...state,\n        searchHistory: [...state.searchHistory, action.searchHistory],\n      };\n\n    case FETCH_ALL_HISTORY:\n      return {\n        ...state,\n        searchHistory: action.allSearchHistory,\n      };\n\n    case SEARCH_HISTORY_LIST_FLAG:\n      return {\n        ...state,\n        searchHistoryListFlag: action.searchHistoryListFlag,\n      };\n\n    case FETCH_REPOS_LIST:\n      return {\n        ...state,\n        reposList: action.reposList,\n      };\n\n    case REPOS_OPENED_LIST_FLAG:\n      return {\n        ...state,\n        reposListOpened: action.reposListFlag,\n      };\n\n    case SEARCH_HISTORY_MODAL_FLAG:\n      return {\n        ...state,\n        modalFlag: action.modalFlag,\n        modalText: action.text,\n        modalType: action.modalType,\n      };\n\n    default:\n      return state;\n  }\n};\n","export const FAVORITE_BTN_FLAG = 'FAVORITE_BTN_FLAG';\nexport const FAVORITE_LIST_SAGA = 'FAVORITE_LIST_SAGA';\nexport const FAVORITE_LIST_FLAG = 'FAVORITE_LIST_FLAG';\nexport const FAVORITE_LIST_ADD = 'FAVORITE_LIST_ADD';\nexport const FAVORITE_LIST = 'FAVORITE_LIST';\nexport const FAVORITE_USER_FLAG = 'FAVORITE_USER_FLAG';\n","import {\n  FAVORITE_BTN_FLAG,\n  FAVORITE_LIST_FLAG,\n  FAVORITE_LIST_ADD,\n  FAVORITE_LIST,\n  FAVORITE_USER_FLAG,\n} from './constants';\n\nimport { InitialFavoriteStateType } from './types';\n\nimport { ActionsType } from './actions';\n\nconst InitialState: InitialFavoriteStateType = {\n  favoriteBtnFlag: false,\n  favoriteListFlag: false,\n  favoriteList: [],\n  favoriteUser: false,\n};\n\nexport const FavoriteReducer = (\n  state = InitialState,\n  action: ActionsType,\n): typeof state => {\n  switch (action.type) {\n    case FAVORITE_BTN_FLAG:\n      return {\n        ...state,\n        favoriteBtnFlag: action.favoriteBtnFlag,\n      };\n\n    case FAVORITE_LIST:\n      return {\n        ...state,\n        favoriteList: action.favoriteList,\n      };\n\n    case FAVORITE_LIST_ADD:\n      return {\n        ...state,\n        favoriteList: [...state.favoriteList, action.favoriteList],\n      };\n\n    case FAVORITE_LIST_FLAG:\n      return {\n        ...state,\n        favoriteListFlag: action.favoriteListFlag,\n      };\n\n    case FAVORITE_USER_FLAG:\n      return {\n        ...state,\n        favoriteUser: action.favoriteUserFlag,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { SearchReducer } from './SearchReducer/SearchReducer';\nimport { FavoriteReducer } from './FavoriteReduser/FavoriteReducer';\n\nexport const RootReducer = combineReducers({\n  search: SearchReducer,\n  favorite: FavoriteReducer,\n});\n\nexport type AppStateType = ReturnType<typeof RootReducer>;\n","/* eslint-disable camelcase */\nimport {\n  FAVORITE_BTN_FLAG,\n  FAVORITE_LIST,\n  FAVORITE_LIST_ADD,\n  FAVORITE_LIST_SAGA,\n  FAVORITE_LIST_FLAG,\n  FAVORITE_USER_FLAG,\n} from './constants';\n\nexport const setFavoriteBtnFlag = (favoriteBtnFlag: boolean) => {\n  return {\n    type: FAVORITE_BTN_FLAG,\n    favoriteBtnFlag,\n  } as const;\n};\n\nexport const fetchFavoriteList = (favoriteList: string[]) => {\n  return {\n    type: FAVORITE_LIST,\n    favoriteList,\n  } as const;\n};\n\nexport const fetchFavoriteListAdd = (favoriteList: string) => {\n  return {\n    type: FAVORITE_LIST_ADD,\n    favoriteList,\n  } as const;\n};\n\nexport const getFavoriteListSaga = () => {\n  return {\n    type: FAVORITE_LIST_SAGA,\n  } as const;\n};\n\nexport const favoriteListFlag = (favoriteListFlag: boolean) => {\n  return {\n    type: FAVORITE_LIST_FLAG,\n    favoriteListFlag,\n  } as const;\n};\n\nexport const favoriteUserFlag = (favoriteUserFlag: boolean) => {\n  return {\n    type: FAVORITE_USER_FLAG,\n    favoriteUserFlag,\n  } as const;\n};\n\ntype setFavoriteBtnFlagType = ReturnType<typeof setFavoriteBtnFlag>;\ntype fetchFavoriteListType = ReturnType<typeof fetchFavoriteList>;\ntype fetchFavoriteListAddType = ReturnType<typeof fetchFavoriteListAdd>;\ntype getFavoriteListSagaType = ReturnType<typeof getFavoriteListSaga>;\ntype favoriteListFlagType = ReturnType<typeof favoriteListFlag>;\ntype favoriteUserFlagType = ReturnType<typeof favoriteUserFlag>;\n\nexport type ActionsType =\n  | setFavoriteBtnFlagType\n  | fetchFavoriteListAddType\n  | fetchFavoriteListType\n  | getFavoriteListSagaType\n  | favoriteListFlagType\n  | favoriteUserFlagType;\n","/* eslint-disable camelcase */\nimport {\n  SEARCH_LOGIN_SAGA,\n  FETCH_LOGIN,\n  CARD_OPEN_FLAG,\n  LOADING,\n  ERROR,\n  USERS_LIST_OPENED_FLAG,\n  FETCH_USERS_LIST_SAGA,\n  FETCH_USERS_LIST,\n  FETCH_SEARCH_HISTORY,\n  SEARCH_HISTORY_LIST_FLAG,\n  FETCH_ALL_HISTORY,\n  GET_LOCAL_HISTORY_SAGA,\n  REPOS_LIST_SAGA,\n  FETCH_REPOS_LIST,\n  REPOS_OPENED_LIST_FLAG,\n  SEARCH_HISTORY_MODAL_FLAG,\n} from './constants';\n\nimport { IRepoItem, ISearhHistoryItem, UserInnerType } from './types';\n\nexport const searchSaga = (\n  login: string,\n  history: ISearhHistoryItem[],\n  favoritesList?: string[],\n) => {\n  return {\n    type: SEARCH_LOGIN_SAGA,\n    login,\n    history,\n    favoritesList,\n  } as const;\n};\n\nexport const fetchLogin = (\n  name: string,\n  login: string,\n  followers_url: string,\n  following_url: string,\n  followers: number,\n  following: number,\n  created_at: Date,\n  avatar_url?: string,\n  company?: string,\n  email?: string,\n  public_repos?: number,\n  repos_url?: string,\n  location?: string,\n) => {\n  return {\n    type: FETCH_LOGIN,\n    name,\n    login,\n    followers_url,\n    following_url,\n    followers,\n    following,\n    created_at,\n    avatar_url,\n    company,\n    email,\n    public_repos,\n    repos_url,\n    location,\n  } as const;\n};\n\nexport const cardOPenedFlag = (cardOPenedFlag: boolean) => {\n  return {\n    type: CARD_OPEN_FLAG,\n    cardOPenedFlag,\n  } as const;\n};\n\nexport const loadingFlag = (loadingFlag: boolean) => {\n  return {\n    type: LOADING,\n    loadingFlag,\n  } as const;\n};\n\nexport const errorFlag = (errorFlag: boolean) => {\n  return {\n    type: ERROR,\n    errorFlag,\n  } as const;\n};\n\nexport const userListOpenedFlag = (userListFlag: boolean) => {\n  return {\n    type: USERS_LIST_OPENED_FLAG,\n    userListFlag,\n  } as const;\n};\n\nexport const fetchUsersListSaga = (login: string, requestType: string) => {\n  return {\n    type: FETCH_USERS_LIST_SAGA,\n    login,\n    requestType,\n  } as const;\n};\n\nexport const fetchUsersList = (\n  usersList: UserInnerType[],\n  lastRequestType: string,\n) => {\n  return {\n    type: FETCH_USERS_LIST,\n    usersList,\n    lastRequestType,\n  } as const;\n};\n\nexport const fetchSearhHistory = (searchHistory: ISearhHistoryItem) => {\n  return {\n    type: FETCH_SEARCH_HISTORY,\n    searchHistory,\n  } as const;\n};\n\nexport const searchHistoryLIstFlag = (searchHistoryListFlag: boolean) => {\n  return {\n    type: SEARCH_HISTORY_LIST_FLAG,\n    searchHistoryListFlag,\n  } as const;\n};\n\nexport const fetchAllHistory = (allSearchHistory: ISearhHistoryItem[]) => {\n  return {\n    type: FETCH_ALL_HISTORY,\n    allSearchHistory,\n  } as const;\n};\n\nexport const getLocalHistorySaga = () => {\n  return {\n    type: GET_LOCAL_HISTORY_SAGA,\n  } as const;\n};\n\nexport const reposListSaga = (login: string) => {\n  return {\n    type: REPOS_LIST_SAGA,\n    login,\n  } as const;\n};\n\nexport const fetchReposList = (reposList: IRepoItem[]) => {\n  return {\n    type: FETCH_REPOS_LIST,\n    reposList,\n  } as const;\n};\n\nexport const reposOpenedListFlag = (reposListFlag: boolean) => {\n  return {\n    type: REPOS_OPENED_LIST_FLAG,\n    reposListFlag,\n  } as const;\n};\n\nexport const modalFlag = (\n  modalFlag: boolean,\n  text: string,\n  modalType: 'search' | 'favorite',\n) => {\n  return {\n    type: SEARCH_HISTORY_MODAL_FLAG,\n    modalFlag,\n    text,\n    modalType,\n  } as const;\n};\ntype searchSagaType = ReturnType<typeof searchSaga>;\ntype fetchLoginType = ReturnType<typeof fetchLogin>;\ntype cardOPenedFlagType = ReturnType<typeof cardOPenedFlag>;\ntype loadingFlagType = ReturnType<typeof loadingFlag>;\ntype errorFlagType = ReturnType<typeof errorFlag>;\ntype userListOpenedFlagType = ReturnType<typeof userListOpenedFlag>;\ntype fetchUsersListType = ReturnType<typeof fetchUsersList>;\ntype fetchSearhHistoryType = ReturnType<typeof fetchSearhHistory>;\ntype searchHistoryLIstFlagType = ReturnType<typeof searchHistoryLIstFlag>;\ntype fetchAllHistoryType = ReturnType<typeof fetchAllHistory>;\ntype fetchReposListType = ReturnType<typeof fetchReposList>;\ntype reposOpenedListFlagType = ReturnType<typeof reposOpenedListFlag>;\ntype modalFlagType = ReturnType<typeof modalFlag>;\n\nexport type ActionsType =\n  | searchSagaType\n  | fetchLoginType\n  | cardOPenedFlagType\n  | loadingFlagType\n  | errorFlagType\n  | userListOpenedFlagType\n  | fetchUsersListType\n  | fetchSearhHistoryType\n  | searchHistoryLIstFlagType\n  | fetchAllHistoryType\n  | fetchReposListType\n  | reposOpenedListFlagType\n  | modalFlagType;\n","import axios from 'axios';\n\nexport const API = axios.create({\n  baseURL: 'https://api.github.com/users/',\n});\n","import { takeEvery, put } from 'redux-saga/effects';\n\nimport { SEARCH_LOGIN_SAGA } from '../constants';\n\nimport { favoriteUserFlag } from '../../FavoriteReduser/actions';\nimport {\n  cardOPenedFlag,\n  errorFlag,\n  fetchLogin,\n  fetchReposList,\n  fetchSearhHistory,\n  loadingFlag,\n  reposOpenedListFlag,\n  userListOpenedFlag,\n} from '../actions';\n\nimport {\n  ISearhHistoryItem,\n  SearchSagaWorkerType,\n  UserInnerType,\n} from '../types';\n\nimport { API } from '../../../api/API';\n\nasync function getUserInfo(login: string) {\n  const response = await API.get(`${login}`).then((res) => res.data);\n  return response;\n}\n\nfunction* sagaWorker(action: SearchSagaWorkerType) {\n  try {\n    yield put(errorFlag(false));\n    yield put(userListOpenedFlag(false));\n    yield put(cardOPenedFlag(false));\n    yield put(reposOpenedListFlag(false));\n    yield put(fetchReposList([]));\n    yield put(loadingFlag(true));\n\n    const allData: UserInnerType = yield getUserInfo(action.login);\n    // eslint-disable-next-line no-console\n    // console.log(allData);\n\n    yield put(\n      fetchLogin(\n        allData.name,\n        allData.login,\n        allData.followers_url,\n        allData.following_url,\n        allData.followers,\n        allData.following,\n        new Date(allData.created_at),\n        allData.avatar_url,\n        allData.company,\n        allData.email,\n        allData.public_repos,\n        allData.repos_url,\n        allData.location,\n      ),\n    );\n\n    if (action.favoritesList?.find((el) => el === allData.login)) {\n      yield put(favoriteUserFlag(true));\n    } else {\n      yield put(favoriteUserFlag(false));\n    }\n\n    const newHistoryItem: ISearhHistoryItem = yield {\n      login: allData.login,\n      dateOfSearch: new Date(),\n    };\n    yield put(fetchSearhHistory(newHistoryItem));\n    yield localStorage.setItem(\n      'saves',\n      JSON.stringify([...action.history, newHistoryItem]),\n    );\n\n    yield put(loadingFlag(false));\n    yield put(cardOPenedFlag(true));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n    yield put(loadingFlag(false));\n    yield put(errorFlag(true));\n  }\n}\n\nexport function* SearchSagaWatcher() {\n  yield takeEvery(SEARCH_LOGIN_SAGA, sagaWorker);\n}\n","import { takeEvery, put } from 'redux-saga/effects';\n\nimport { FETCH_USERS_LIST_SAGA } from '../constants';\nimport {\n  cardOPenedFlag,\n  fetchUsersList,\n  loadingFlag,\n  userListOpenedFlag,\n} from '../actions';\nimport { IFetchUsersListSagaWorker, UserInnerType } from '../types';\n\nimport { API } from '../../../api/API';\n\nasync function getUserInfo(login: string, requestType: string) {\n  const response = await API.get(`${login}/${requestType}`).then(\n    (res) => res.data,\n  );\n  return response;\n}\n\nfunction* sagaWorker(action: IFetchUsersListSagaWorker) {\n  try {\n    yield put(cardOPenedFlag(false));\n    yield put(loadingFlag(true));\n\n    const allData: UserInnerType[] = yield getUserInfo(\n      action.login,\n      action.requestType,\n    );\n\n    yield put(fetchUsersList(allData, action.requestType));\n\n    yield put(loadingFlag(false));\n    yield put(userListOpenedFlag(true));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n    yield put(loadingFlag(false));\n  }\n}\n\nexport function* FetchUsersListSagaWatcher() {\n  yield takeEvery(FETCH_USERS_LIST_SAGA, sagaWorker);\n}\n","import { takeEvery, put } from 'redux-saga/effects';\n\nimport { GET_LOCAL_HISTORY_SAGA } from '../constants';\nimport { fetchAllHistory } from '../actions';\nimport { ISearhHistoryItem } from '../types';\n\nfunction* sagaWorker() {\n  try {\n    const saved: ISearhHistoryItem[] = yield JSON.parse(\n      localStorage.getItem('saves') || '[]',\n    );\n\n    yield put(fetchAllHistory(saved));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n  }\n}\n\nexport function* GetLocalHistorySagaWatcher() {\n  yield takeEvery(GET_LOCAL_HISTORY_SAGA, sagaWorker);\n}\n","import { takeEvery, put } from 'redux-saga/effects';\n\nimport { REPOS_LIST_SAGA } from '../constants';\nimport {\n  cardOPenedFlag,\n  fetchReposList,\n  loadingFlag,\n  reposOpenedListFlag,\n} from '../actions';\nimport { IRepoItem, IReposListSagaWorker } from '../types';\n\nimport { API } from '../../../api/API';\n\nasync function getReposInfo(login: string) {\n  const response = await API.get(`${login}/repos`).then((res) => res.data);\n  return response;\n}\n\nfunction* sagaWorker(action: IReposListSagaWorker) {\n  try {\n    yield put(cardOPenedFlag(false));\n    yield put(loadingFlag(true));\n\n    const allRepos: IRepoItem[] = yield getReposInfo(action.login);\n\n    yield put(fetchReposList(allRepos));\n    yield put(reposOpenedListFlag(true));\n    yield put(loadingFlag(false));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n    yield put(loadingFlag(false));\n  }\n}\n\nexport function* ReposListSagaWatcher() {\n  yield takeEvery(REPOS_LIST_SAGA, sagaWorker);\n}\n","import { takeEvery, put } from 'redux-saga/effects';\n\nimport { fetchFavoriteList } from '../actions';\n\nimport { FAVORITE_LIST_SAGA } from '../constants';\n\nfunction* sagaWorker() {\n  try {\n    const saved: string[] = yield JSON.parse(\n      localStorage.getItem('favorite') || '[]',\n    );\n\n    yield put(fetchFavoriteList(saved));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n  }\n}\n\nexport function* GetFavoriteListSagaWatcher() {\n  yield takeEvery(FAVORITE_LIST_SAGA, sagaWorker);\n}\n","import { fork, all } from 'redux-saga/effects';\n\nimport { SearchSagaWatcher } from './SearchReducer/sagas/SearchSaga';\nimport { FetchUsersListSagaWatcher } from './SearchReducer/sagas/FetchUsersListSaga';\nimport { GetLocalHistorySagaWatcher } from './SearchReducer/sagas/GetLocalHistorySaga';\nimport { ReposListSagaWatcher } from './SearchReducer/sagas/ReposListSaga';\nimport { GetFavoriteListSagaWatcher } from './FavoriteReduser/sagas/GetFavoriteListSaga';\n\nexport default function* rootSaga() {\n  yield all([\n    fork(SearchSagaWatcher),\n    fork(FetchUsersListSagaWatcher),\n    fork(GetLocalHistorySagaWatcher),\n    fork(ReposListSagaWatcher),\n    fork(GetFavoriteListSagaWatcher),\n  ]);\n}\n","import React from 'react';\n\nimport { ICloseButton } from './types';\n\nimport styles from './CloseButton.module.css';\n\nconst CloseButton: React.FC<ICloseButton> = ({ onClick }) => {\n  return (\n    <button\n      className={styles.close_btn}\n      type=\"button\"\n      aria-label=\"Close\"\n      onClick={onClick}\n    />\n  );\n};\n\nexport default CloseButton;\n","export const dateFormatter = (dataCreated: Date): string => {\n  const day =\n    dataCreated.getDate() < 10\n      ? `0${dataCreated.getDate()}`\n      : dataCreated.getDate();\n\n  const month =\n    dataCreated.getMonth() < 9\n      ? `0${dataCreated.getMonth() + 1}`\n      : dataCreated.getMonth() + 1;\n\n  const year = dataCreated.getFullYear();\n\n  return `${day}.${month}.${year}`;\n};\n","export const periodCounter = (dataCreated: Date): string => {\n  const currentDayDuration = new Date().getTime();\n  const dataCreatedDuration = dataCreated.getTime();\n  const duration = currentDayDuration - dataCreatedDuration;\n\n  const years = Math.floor(duration / 1000 / 60 / 60 / 24 / 365.25);\n  const months = Math.floor(\n    (duration - years * 365.25 * 24 * 60 * 60 * 1000) /\n      1000 /\n      60 /\n      60 /\n      24 /\n      30,\n  );\n  const days = Math.floor(\n    (duration -\n      years * 365.25 * 24 * 60 * 60 * 1000 -\n      months * 30 * 24 * 60 * 60 * 1000) /\n      1000 /\n      60 /\n      60 /\n      24,\n  );\n\n  const yearsStr = years > 1 ? `${years} years` : `${years} year`;\n\n  let monthsStr = '';\n  if (months === 0) {\n    monthsStr = '';\n  } else if (months === 1) {\n    monthsStr = `${months} month`;\n  } else {\n    monthsStr = `${months} months`;\n  }\n\n  let daysStr = '';\n  if (days === 0) {\n    daysStr = 'ago';\n  } else if (days === 1) {\n    daysStr = `and ${days} day ago`;\n  } else {\n    daysStr = `and ${days} days ago`;\n  }\n\n  if (years >= 1) {\n    return `${yearsStr} ${monthsStr} ${daysStr}`;\n  }\n  if (months >= 1) {\n    return `${monthsStr} ${daysStr}`;\n  }\n  return `${daysStr}`;\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\n\nimport CloseButton from '../../ui/CloseButton';\n\nimport { dateFormatter } from '../../utils/dateFormatter';\nimport { periodCounter } from '../../utils/periodCounter';\n\nimport {\n  cardOPenedFlag,\n  fetchLogin,\n  fetchUsersListSaga,\n  reposListSaga,\n} from '../../store/SearchReducer/actions';\n\nimport {\n  favoriteUserFlag,\n  fetchFavoriteList,\n  fetchFavoriteListAdd,\n  setFavoriteBtnFlag,\n} from '../../store/FavoriteReduser/actions';\n\nimport { CardType } from './types';\n\nimport styles from './Card.module.css';\n\nconst Card: React.FC<CardType> = ({ user, favorites, favoriteUserStatus }) => {\n  const dispatch = useDispatch();\n\n  const onClickCloseBtnHandler = () => {\n    dispatch(cardOPenedFlag(false));\n    dispatch(\n      fetchLogin('', '', '', '', 0, 0, new Date(), '', '', '', 0, '', ''),\n    );\n  };\n\n  const onBtnClickHandler = (requestType: string) => {\n    dispatch(fetchUsersListSaga(user.login, requestType));\n  };\n\n  const onReposClickHandler = () => {\n    dispatch(reposListSaga(user.login));\n  };\n\n  const onClickAddBtnHandler = () => {\n    if (favoriteUserStatus) {\n      const newFavoriteUsersList = favorites.filter((el) => el !== user.login);\n      dispatch(favoriteUserFlag(false));\n      dispatch(fetchFavoriteList(newFavoriteUsersList));\n      localStorage.setItem('favorite', JSON.stringify(newFavoriteUsersList));\n    } else {\n      dispatch(favoriteUserFlag(true));\n      dispatch(fetchFavoriteListAdd(user.login));\n      localStorage.setItem(\n        'favorite',\n        JSON.stringify([...favorites, user.login]),\n      );\n      dispatch(setFavoriteBtnFlag(true));\n    }\n  };\n\n  return (\n    <div className={styles.card}>\n      <div className={styles.card_element}>\n        <div className={styles.card_photo_wrapper}>\n          <img src={user.avatarUrl} alt=\"User's avatar\" />\n        </div>\n      </div>\n\n      <div className={styles.card_element}>\n        <div className={styles.card_sub_element}>\n          {user.name ? (\n            <h2>\n              {user.name} &#40;{user.login}&#41;\n            </h2>\n          ) : (\n            <h2>{user.login}</h2>\n          )}\n        </div>\n\n        {user.company && (\n          <div className={styles.card_sub_element}>\n            <span>Company:&nbsp;</span>\n            <div className={styles.card_user_info}>{user.company}</div>\n          </div>\n        )}\n\n        {user.location && (\n          <div className={styles.card_sub_element}>\n            <span>Location:&nbsp;</span>\n            <div className={styles.card_user_info}>{user.location}</div>\n          </div>\n        )}\n\n        {user.email && (\n          <div className={styles.card_sub_element}>\n            <span>Email:&nbsp;</span>\n            <a href={`mailto:${user.email}`} className={styles.card_user_info}>\n              {user.email}\n            </a>\n          </div>\n        )}\n\n        {user.reposNum ? (\n          <div className={styles.card_sub_element}>\n            <span>Public repositories:&nbsp;</span>\n            <button\n              type=\"button\"\n              className={clsx(styles.card_user_info, styles.card_user_info_btn)}\n              onClick={onReposClickHandler}\n            >\n              {user.reposNum}\n            </button>\n          </div>\n        ) : (\n          ''\n        )}\n\n        <div className={styles.card_followers_wrapper}>\n          <div className={styles.card_followers_unit}>\n            <span>Followers:&nbsp;</span>\n            <button\n              type=\"button\"\n              className={clsx(styles.card_user_info, styles.card_user_info_btn)}\n              onClick={() => onBtnClickHandler('followers')}\n            >\n              {user.followersNum}\n            </button>\n          </div>\n\n          <div className={styles.card_followers_unit}>\n            <span>Following:&nbsp;</span>\n            <button\n              type=\"button\"\n              className={clsx(styles.card_user_info, styles.card_user_info_btn)}\n              onClick={() => onBtnClickHandler('following')}\n            >\n              {user.followingNum}\n            </button>\n          </div>\n        </div>\n\n        <div\n          className={clsx(\n            styles.card_sub_element,\n            styles.card_sub_element_create,\n          )}\n        >\n          <span>Created&nbsp;at:&nbsp;</span>\n          <div className={styles.card_user_info_wrapper}>\n            <div className={styles.card_user_info}>\n              {dateFormatter(user.dataCreated)}\n            </div>\n            <div className={styles.card_user_info}>\n              ({periodCounter(user.dataCreated)})\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className={styles.closeBtnWrapper}>\n        <button\n          type=\"button\"\n          className={styles.button}\n          onClick={onClickAddBtnHandler}\n        >\n          <span\n            className={clsx(\n              favoriteUserStatus && styles.star_active,\n              styles.star,\n            )}\n          >\n            &#9733;\n          </span>\n        </button>\n        <CloseButton onClick={onClickCloseBtnHandler} />\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport { IError } from './types';\n\nimport styles from './Error.module.css';\n\nconst Error: React.FC<IError> = ({ userName }): JSX.Element => {\n  return (\n    <div className={styles.error_wrapper}>\n      <h2>\n        User\n        <span className={styles.error_user_info}> {userName} </span>\n        is not found...\n      </h2>\n    </div>\n  );\n};\n\nexport default Error;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { searchSaga } from '../../store/SearchReducer/actions';\n\nimport { IUserItem } from './types';\n\nimport styles from './UserItem.module.css';\n\nconst UserItem: React.FC<IUserItem> = ({ user, history }) => {\n  const dispatch = useDispatch();\n\n  const itemBthHandler = () => {\n    dispatch(searchSaga(user.login, history));\n  };\n\n  return (\n    <div className={styles.user_item_wrapper}>\n      <div className={styles.user_item_photo_wrapper}>\n        <img src={user.avatar_url} alt=\"User's avatar\" />\n      </div>\n\n      <div className={styles.user_info}>\n        <div className={styles.user_info_unit}>\n          <button type=\"button\" onClick={itemBthHandler}>\n            <h2>{user.login}</h2>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserItem;\n","import React from 'react';\nimport { UserInnerType } from '../../store/SearchReducer/types';\nimport UserItem from '../UserItem';\n\nimport { IUsersList } from './types';\n\nimport styles from './UsersList.module.css';\n\nconst UsersList: React.FC<IUsersList> = ({\n  users,\n  login,\n  requestType,\n  history,\n}) => {\n  return (\n    <div className={styles.list_wrapper}>\n      {users.length ? (\n        <ul className={styles.list_wrapper_ul}>\n          {users.map((el: UserInnerType) => (\n            <li key={el.login}>\n              <UserItem user={el} history={history} />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div className={styles.list_error}>\n          <h2>\n            It seems the user\n            <span className={styles.list_error_login}> {login} </span>\n            hasn&#39;t any {requestType}\n          </h2>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UsersList;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport { IButton } from './types';\n\nimport styles from './SubmitButton.module.css';\n\nconst SubmitButton: React.FC<IButton> = ({ children, disabled }) => {\n  return (\n    <button\n      className={clsx(disabled && styles.button_unactive, styles.button)}\n      type=\"submit\"\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default SubmitButton;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { searchSaga } from '../../store/SearchReducer/actions';\n\nimport SubmitButton from '../../ui/SubmitButton';\n\nimport { ISearch } from './types';\n\nimport styles from './SearchForm.module.css';\n\nconst SearchForm: React.FC<ISearch> = ({ search, history, favoritesList }) => {\n  const [searchLogin, setsearchLogin] = useState<string>('');\n  const [disabledBtn, setDisabledBtn] = useState(true);\n  const dispatch = useDispatch();\n\n  // auto focus on input\n  const ref: any = useRef(null);\n  useEffect(() => {\n    ref.current.focus();\n  }, []);\n\n  const changeTextHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let textValue = event?.target.value;\n    setsearchLogin(textValue);\n\n    if (textValue.trim()) {\n      setDisabledBtn(false);\n    } else {\n      setDisabledBtn(true);\n    }\n  };\n\n  const onSubmitHandler = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    dispatch(searchSaga(searchLogin, history, favoritesList));\n\n    search(searchLogin);\n\n    setsearchLogin('');\n    setDisabledBtn(true);\n  };\n\n  return (\n    <form className={styles.form} onSubmit={onSubmitHandler}>\n      <input\n        ref={ref}\n        className={styles.input}\n        type=\"text\"\n        placeholder=\"Enter the github login\"\n        value={searchLogin}\n        onChange={changeTextHandler}\n      />\n      <SubmitButton disabled={disabledBtn}>Search</SubmitButton>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  searchHistoryLIstFlag,\n  modalFlag,\n  searchSaga,\n} from '../../store/SearchReducer/actions';\n\nimport CloseButton from '../../ui/CloseButton';\n\nimport { dateFormatter } from '../../utils/dateFormatter';\n\nimport { ISearchHistoryList } from './types';\n\nimport styles from './SearchHistoryList.module.css';\n\nconst SearchHistoryList: React.FC<ISearchHistoryList> = ({\n  searchList,\n  currentUserLogin,\n  favoritesList,\n}) => {\n  const dispatch = useDispatch();\n\n  const searchHistoriListBtnHandler = (login: string) => {\n    if (login === currentUserLogin) {\n      return;\n    }\n    dispatch(searchSaga(login, searchList, favoritesList));\n  };\n\n  const closeBtnHandler = () => {\n    dispatch(searchHistoryLIstFlag(false));\n  };\n\n  const clearBtnHandler = () => {\n    dispatch(\n      modalFlag(\n        true,\n        `Are you sure to delete ${searchList.length > 1 ? 'all' : ''} ${\n          searchList.length > 1 ? `(${searchList.length})` : ''\n        } ${searchList.length > 1 ? 'items' : 'the item'} of search history?`,\n        'search',\n      ),\n    );\n  };\n\n  return (\n    <div className={styles.shl_wrapper}>\n      <h3>Search list</h3>\n      <div className={styles.closeBtnWrapper}>\n        <CloseButton onClick={closeBtnHandler} />\n      </div>\n\n      <ol>\n        {searchList.map((el, i) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <li key={`${el.login} + ${i}`}>\n            <button\n              className={styles.shl_button}\n              type=\"button\"\n              onClick={() => searchHistoriListBtnHandler(el.login)}\n            >\n              {el.login}\n            </button>\n            <span> ({dateFormatter(new Date(el.dateOfSearch))})</span>\n          </li>\n        ))}\n      </ol>\n\n      <button\n        className={styles.clearButton}\n        type=\"button\"\n        onClick={clearBtnHandler}\n      >\n        Delete history\n      </button>\n    </div>\n  );\n};\n\nexport default SearchHistoryList;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { favoriteListFlag } from '../../store/FavoriteReduser/actions';\nimport { searchHistoryLIstFlag } from '../../store/SearchReducer/actions';\n\nimport { ISearchHistoryHeader } from './types';\n\nimport styles from './SearchHistoryHeader.module.css';\n\nconst SearchHistoryHeader: React.FC<ISearchHistoryHeader> = ({\n  historyLength,\n  historyBtnStatus,\n  searchHistoryListStatus,\n}) => {\n  const dispatch = useDispatch();\n\n  const onSearchHistoryBtnHandler = () => {\n    if (historyBtnStatus) {\n      dispatch(searchHistoryLIstFlag(false));\n    } else {\n      dispatch(favoriteListFlag(false));\n      dispatch(searchHistoryLIstFlag(true));\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className={clsx(\n        searchHistoryListStatus && styles.shh_wrapper_active,\n        styles.shh_wrapper,\n      )}\n      onClick={onSearchHistoryBtnHandler}\n    >\n      Search history <span>({historyLength})</span>\n    </button>\n  );\n};\n\nexport default SearchHistoryHeader;\n","import React from 'react';\n\nimport styles from './Loader.module.css';\n\nconst Loader: React.FC = () => {\n  return (\n    <div className={styles.loader_wrapper}>\n      <div className={styles.lds_default}>\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport { IRepoItemInt } from './types';\n\nimport styles from './RepoItem.module.css';\nimport { dateFormatter } from '../../utils/dateFormatter';\n\nconst RepoItem: React.FC<IRepoItemInt> = ({ repoItem }) => {\n  return (\n    <div className={styles.repoItemWrapper}>\n      <div className={styles.repoItemUnit}>\n        <a\n          href={repoItem.html_url}\n          className={styles.repoItemLink}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          {repoItem.name}\n        </a>\n\n        <span>{repoItem.description}</span>\n      </div>\n\n      <div className={clsx(styles.repoItemUnit, styles.repoItemUnitDates)}>\n        <div className={styles.repoSubUnit}>\n          <span>Create at:</span>\n          <span>{dateFormatter(new Date(repoItem.created_at))}</span>\n        </div>\n\n        <div className={styles.repoSubUnit}>\n          <span>Update at:</span>\n          <span>{dateFormatter(new Date(repoItem.updated_at))}</span>\n        </div>\n\n        <div className={styles.repoSubUnit}>\n          <span>Language: </span>\n          <span>{repoItem.language}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RepoItem;\n","import React from 'react';\n\nimport { IReposList } from './types';\nimport { IRepoItem } from '../../store/SearchReducer/types';\n\nimport styles from './ReposList.module.css';\nimport RepoItem from '../RepoItem';\n\nconst ReposList: React.FC<IReposList> = ({ reposList }) => {\n  return (\n    <ul className={styles.reposWrapper}>\n      {reposList.map((repo: IRepoItem) => (\n        <li key={repo.name} className={styles.reposItem}>\n          <RepoItem repoItem={repo} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ReposList;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport CloseButton from '../../ui/CloseButton';\n\nimport { modalFlag, searchSaga } from '../../store/SearchReducer/actions';\nimport {\n  favoriteListFlag,\n  favoriteUserFlag,\n  fetchFavoriteList,\n} from '../../store/FavoriteReduser/actions';\n\nimport { IFavoriteList } from './types';\n\nimport styles from './FavoriteList.module.css';\n\nconst FavoriteList: React.FC<IFavoriteList> = ({\n  favoriteList,\n  searchList,\n  currentUserLogin,\n}) => {\n  const dispatch = useDispatch();\n\n  const closeBtnHandler = () => {\n    dispatch(favoriteListFlag(false));\n  };\n\n  const searchHistoriListBtnHandler = (login: string) => {\n    if (login === currentUserLogin) {\n      return;\n    }\n    dispatch(searchSaga(login, searchList, favoriteList));\n  };\n\n  const clearBtnHandler = () => {\n    dispatch(\n      modalFlag(\n        true,\n        `Are you sure to delete ${favoriteList.length > 1 ? 'all' : ''} your ${\n          favoriteList.length > 1 ? `(${favoriteList.length})` : ''\n        } favorite ${favoriteList.length > 1 ? 'users' : 'user'}?`,\n        'favorite',\n      ),\n    );\n  };\n\n  const deleteBtnHandler = (delElem: string) => {\n    const newFavoriteUsersList = favoriteList.filter((el) => el !== delElem);\n    dispatch(fetchFavoriteList(newFavoriteUsersList));\n    localStorage.setItem('favorite', JSON.stringify(newFavoriteUsersList));\n    if (currentUserLogin === delElem) {\n      dispatch(favoriteUserFlag(false));\n    }\n  };\n\n  return (\n    <div className={styles.shl_wrapper}>\n      <h3>Favorite list</h3>\n      <div className={styles.closeBtnWrapper}>\n        <CloseButton onClick={closeBtnHandler} />\n      </div>\n\n      <ol>\n        {favoriteList.map((el) => (\n          <li key={el}>\n            <div className={styles.itemWrapper}>\n              <button\n                className={styles.shl_button}\n                type=\"button\"\n                onClick={() => searchHistoriListBtnHandler(el)}\n              >\n                {el}\n              </button>\n              <button\n                type=\"button\"\n                className={styles.deleteListItemBtn}\n                onClick={() => deleteBtnHandler(el)}\n              >\n                {' '}\n              </button>\n            </div>\n          </li>\n        ))}\n      </ol>\n\n      <button\n        className={styles.clearButton}\n        type=\"button\"\n        onClick={clearBtnHandler}\n      >\n        Delete all favorite users\n      </button>\n    </div>\n  );\n};\n\nexport default FavoriteList;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { favoriteListFlag } from '../../store/FavoriteReduser/actions';\nimport { searchHistoryLIstFlag } from '../../store/SearchReducer/actions';\n\nimport { IFavoriteButton } from './types';\n\nimport styles from './FavoriteButton.module.css';\n\nconst FavoriteButton: React.FC<IFavoriteButton> = ({\n  starNum,\n  favoriteListStatus,\n}) => {\n  const dispatch = useDispatch();\n\n  const showFavoriteListHandler = () => {\n    if (favoriteListStatus) {\n      dispatch(favoriteListFlag(false));\n    } else {\n      dispatch(favoriteListFlag(true));\n      dispatch(searchHistoryLIstFlag(false));\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className={clsx(\n        favoriteListStatus && styles.button_active,\n        styles.button,\n      )}\n      onClick={showFavoriteListHandler}\n    >\n      <span className={styles.star}>&#9733;</span>\n      <span>{starNum}</span>\n    </button>\n  );\n};\n\nexport default FavoriteButton;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport CloseButton from '../../ui/CloseButton';\n\nimport {\n  fetchAllHistory,\n  searchHistoryLIstFlag,\n  modalFlag,\n} from '../../store/SearchReducer/actions';\n\nimport { ISearchHistoryModal } from './types';\n\nimport styles from './Modal.module.css';\nimport {\n  favoriteListFlag,\n  favoriteUserFlag,\n  fetchFavoriteList,\n} from '../../store/FavoriteReduser/actions';\n\nconst Modal: React.FC<ISearchHistoryModal> = ({ textModal, type }) => {\n  const dispatch = useDispatch();\n\n  const onBtnsHandler = (delStatus: boolean) => {\n    if (delStatus) {\n      if (type === 'search') {\n        dispatch(searchHistoryLIstFlag(false));\n        dispatch(fetchAllHistory([]));\n        localStorage.removeItem('saves');\n      } else if (type === 'favorite') {\n        dispatch(favoriteListFlag(false));\n        dispatch(favoriteUserFlag(false));\n        dispatch(fetchFavoriteList([]));\n        localStorage.removeItem('favorite');\n      }\n      dispatch(modalFlag(false, '', 'search'));\n    } else {\n      dispatch(modalFlag(false, '', 'search'));\n    }\n  };\n  return (\n    <div className={styles.modalWrapper}>\n      <div className={styles.modal}>\n        <span>{textModal}</span>\n        <div className={styles.btnsWrapper}>\n          <button type=\"button\" onClick={() => onBtnsHandler(true)}>\n            Delete\n          </button>\n          <button type=\"button\" onClick={() => onBtnsHandler(false)}>\n            Cansel\n          </button>\n        </div>\n        <div className={styles.closeBtnWrapper}>\n          <CloseButton onClick={() => onBtnsHandler(false)} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport Card from '../../components/Card';\nimport Error from '../../components/Error';\nimport UsersList from '../../components/UsersList';\nimport SearchForm from '../../components/SearchForm';\nimport SearchHistoryList from '../../components/SearchHistoryList';\nimport SearchHistoryHeader from '../../components/SearchHistoryHeader';\nimport Loader from '../../ui/Loader';\n\nimport { AppStateType } from '../../store/RootReducer';\nimport {\n  cardOPenedFlag,\n  getLocalHistorySaga,\n  reposOpenedListFlag,\n  userListOpenedFlag,\n} from '../../store/SearchReducer/actions';\n\nimport { InitialStateType } from '../../store/SearchReducer/types';\nimport { InitialFavoriteStateType } from '../../store/FavoriteReduser/types';\nimport {\n  favoriteListFlag,\n  getFavoriteListSaga,\n} from '../../store/FavoriteReduser/actions';\n\nimport ReposList from '../../components/ReposList';\nimport FavoriteList from '../../components/FavoriteList';\nimport FavoriteButton from '../../components/FavoriteButton';\nimport Modal from '../../components/Modal';\n\nimport styles from './Root.module.css';\n\nconst Root: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const storeData = useSelector<AppStateType, InitialStateType>(\n    (store) => store.search,\n  );\n\n  const favorite = useSelector<AppStateType, InitialFavoriteStateType>(\n    (store) => store.favorite,\n  );\n\n  const [user, setUser] = useState<string>('');\n\n  // close favorite list if there are no any items\n  useEffect(() => {\n    if (!favorite.favoriteList.length) {\n      dispatch(favoriteListFlag(false));\n    }\n  }, [dispatch, favorite.favoriteList]);\n\n  // get elements from localstorage\n  useEffect(() => {\n    dispatch(getLocalHistorySaga());\n    dispatch(getFavoriteListSaga());\n  }, [dispatch]);\n\n  const search = (searchLogin: string) => {\n    setUser(searchLogin);\n  };\n\n  const backBtnHandler = () => {\n    dispatch(userListOpenedFlag(false));\n    dispatch(reposOpenedListFlag(false));\n    dispatch(cardOPenedFlag(true));\n  };\n\n  return (\n    <div className={styles.root_wrapper}>\n      <header className={styles.root_header}>\n        <h1>Find github&apos;s user</h1>\n\n        <div className={styles.buttonsWrapper}>\n          {storeData.searchHistory.length ? (\n            <SearchHistoryHeader\n              historyLength={storeData.searchHistory.length}\n              searchHistoryListStatus={storeData.searchHistoryListFlag}\n              historyBtnStatus={storeData.searchHistoryListFlag}\n            />\n          ) : (\n            ''\n          )}\n          {favorite.favoriteList.length ? (\n            <FavoriteButton\n              starNum={favorite.favoriteList.length}\n              favoriteListStatus={favorite.favoriteListFlag}\n            />\n          ) : (\n            ''\n          )}\n        </div>\n      </header>\n\n      <section className={styles.root_section}>\n        <div\n          className={clsx(\n            styles.root_sub_section,\n            styles.root_sub_section_left,\n          )}\n        >\n          <section\n            className={clsx(styles.root_section, styles.root_section_search)}\n          >\n            <SearchForm\n              search={search}\n              history={storeData.searchHistory}\n              favoritesList={favorite.favoriteList}\n            />\n\n            {(storeData.usersListOpened || storeData.reposListOpened) && (\n              <button\n                type=\"button\"\n                onClick={backBtnHandler}\n                className={styles.root_btn}\n              >\n                Back\n              </button>\n            )}\n          </section>\n\n          {storeData.loading && <Loader />}\n          {storeData.cardOpened && (\n            <Card\n              user={storeData.user}\n              favorites={favorite.favoriteList}\n              favoriteUserStatus={favorite.favoriteUser}\n            />\n          )}\n          {storeData.usersListOpened && (\n            <UsersList\n              users={storeData.usersList}\n              login={storeData.user.login}\n              requestType={storeData.lastRequestType}\n              history={storeData.searchHistory}\n            />\n          )}\n          {storeData.reposListOpened && (\n            <ReposList reposList={storeData.reposList} />\n          )}\n          {storeData.error && <Error userName={user} />}\n        </div>\n\n        {storeData.searchHistoryListFlag && (\n          <div\n            className={clsx(\n              styles.root_sub_section,\n              styles.root_sub_section_right,\n            )}\n          >\n            <SearchHistoryList\n              searchList={storeData.searchHistory}\n              favoritesList={favorite.favoriteList}\n              currentUserLogin={storeData.user.login}\n            />\n          </div>\n        )}\n\n        {favorite.favoriteListFlag && (\n          <div\n            className={clsx(\n              styles.root_sub_section,\n              styles.root_sub_section_right,\n            )}\n          >\n            <FavoriteList\n              favoriteList={favorite.favoriteList}\n              searchList={storeData.searchHistory}\n              currentUserLogin={storeData.user.login}\n            />\n          </div>\n        )}\n      </section>\n\n      {storeData.modalFlag && (\n        <Modal textModal={storeData.modalText} type={storeData.modalType} />\n      )}\n    </div>\n  );\n};\n\nexport default Root;\n","import React from 'react';\n\nimport Root from '../view/Root';\n\nimport './styles.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Root />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { RootReducer } from './store/RootReducer';\nimport RootSaga from './store/RootSaga';\n\nimport App from './App';\nimport './index.css';\n\nconst saga = createSagaMiddleware();\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(RootReducer, composeEnhancers(applyMiddleware(saga)));\n\nsaga.run(RootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}