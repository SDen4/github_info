{"version":3,"sources":["ui/CloseButton/CloseButton.module.css","ui/CloseButton/CloseButton.tsx","utils/dateFormatter.ts","components/SearchHistoryList/SearchHistoryList.module.css","utils/timeFormatter.ts","components/SearchHistoryList/SearchHistoryList.tsx"],"names":["module","exports","CloseButton","onClick","className","clsx","styles","closeBtn","tooltip","type","tooltipText","memo","dateFormatter","dataCreated","day","getDate","month","getMonth","year","getFullYear","timeFormatter","incomeDate","hour","getHours","minute","getMinutes","second","getSeconds","SearchHistoryList","dispatch","useDispatch","searchList","useSelector","store","search","searchHistory","favoritesList","favorite","favoriteList","currentUserLogin","user","login","userListOpened","usersListOpened","reposListOpened","isMobile","loading","shlWrapper","hide","listHeader","searchHistoryListFlag","map","el","i","shlButton","userListOpenedFlag","reposOpenedListFlag","searchSaga","searchHistoriListBtnHandler","Date","dateOfSearch","clearButton","modalFlag","length"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,SAAW,8BAA8B,QAAU,6BAA6B,YAAc,mC,6GCM1GC,EAAsC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7C,OACE,wBACEC,UAAWC,YAAKC,IAAOC,SAAUD,IAAOE,SACxCC,KAAK,SACL,aAAW,QACXN,QAASA,EAJX,SAME,qBAAKC,UAAWE,IAAOI,YAAvB,sBAKSC,iBAAKT,I,gCCpBpB,kCAAO,IAAMU,EAAgB,SAACC,GAC5B,IAAMC,EACJD,EAAYE,UAAY,GAAxB,WACQF,EAAYE,WAChBF,EAAYE,UAEZC,EACJH,EAAYI,WAAa,EAAzB,WACQJ,EAAYI,WAAa,GAC7BJ,EAAYI,WAAa,EAEzBC,EAAOL,EAAYM,cAEzB,MAAM,GAAN,OAAUL,EAAV,YAAiBE,EAAjB,YAA0BE,K,mBCZ5BlB,EAAOC,QAAU,CAAC,WAAa,sCAAsC,UAAY,qCAAqC,YAAc,uCAAuC,WAAa,sCAAsC,KAAO,kC,wICDxNmB,EAAgB,SAACC,GAC5B,IAAMC,EACJD,EAAWE,WAAa,GAAxB,WACQF,EAAWE,YACfF,EAAWE,WAEXC,EACJH,EAAWI,aAAe,GAA1B,WACQJ,EAAWI,cACfJ,EAAWI,aAEXC,EACJL,EAAWM,aAAe,GAA1B,WACQN,EAAWM,cACfN,EAAWM,aAEjB,MAAM,GAAN,OAAUL,EAAV,YAAkBE,EAAlB,YAA4BE,I,wBCOxBE,EAA8B,WAClC,IAAMC,EAAWC,cAEXC,EAAaC,aACjB,SAACC,GAAD,OAAWA,EAAMC,OAAOC,iBAEpBC,EAAgBJ,aACpB,SAACC,GAAD,OAAWA,EAAMI,SAASC,gBAEtBC,EAAmBP,aACvB,SAACC,GAAD,OAAWA,EAAMC,OAAOM,KAAKC,SAEzBC,EAAiBV,aACrB,SAACC,GAAD,OAAWA,EAAMC,OAAOS,mBAEpBC,EAAkBZ,aACtB,SAACC,GAAD,OAAWA,EAAMC,OAAOU,mBAEpBC,EAAWb,aACf,SAACC,GAAD,OAAWA,EAAMC,OAAOW,YAEpBC,EAAUd,aACd,SAACC,GAAD,OAAWA,EAAMC,OAAOY,WAgC1B,OACE,sBACE1C,UAAWC,YAAKC,IAAOyC,WAAYF,GAAYC,GAAWxC,IAAO0C,MADnE,UAGE,yBAAQ5C,UAAWE,IAAO2C,WAA1B,UACE,6CACA,cAAC/C,EAAA,EAAD,CAAaC,QAtBK,WACtB0B,EAASqB,aAAsB,UAwB7B,6BACGnB,EAAWoB,KAAI,SAACC,EAAIC,GAAL,OAEd,cADA,CACA,gBACE,wBACEjD,UAAWE,IAAOgD,UAClB7C,KAAK,SACLN,QAAS,kBA7Ce,SAACsC,GACnC,GAAIA,IAAUF,EAOZ,OANIG,GACFb,EAAS0B,aAAmB,SAE1BX,GACFf,EAAS2B,aAAoB,KAIjC3B,EAAS4B,YAAWhB,EAAOV,EAAYc,EAAUT,IAmCxBsB,CAA4BN,EAAGX,QAHhD,SAKGW,EAAGX,QAEN,2CAAY7B,YACV,IAAI+C,KAAKP,EAAGQ,eADd,aAEMxC,EAAc,IAAIuC,KAAKP,EAAGQ,eAFhC,SARF,UAAYR,EAAGX,MAAf,cAA0BY,SAe9B,wBACEjD,UAAWE,IAAOuD,YAClBpD,KAAK,SACLN,QA1CkB,WACtB0B,EACEiC,aACE,EADO,iCAEmB/B,EAAWgC,OAAS,EAAI,MAAQ,GAFnD,YAGLhC,EAAWgC,OAAS,EAApB,WAA4BhC,EAAWgC,OAAvC,KAAmD,GAH9C,YAIHhC,EAAWgC,OAAS,EAAI,QAAU,WAJ/B,uBAKP,YAgCF,gCAWSpD,iBAAKiB","file":"static/js/4.dc9b389b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"closeBtn\":\"CloseButton_closeBtn__1TnKA\",\"tooltip\":\"CloseButton_tooltip__ZMtiB\",\"tooltipText\":\"CloseButton_tooltipText__2zv1M\"};","import React, { memo } from 'react';\nimport clsx from 'clsx';\n\nimport { ICloseButton } from './types';\n\nimport styles from './CloseButton.module.css';\n\nconst CloseButton: React.FC<ICloseButton> = ({ onClick }) => {\n  return (\n    <button\n      className={clsx(styles.closeBtn, styles.tooltip)}\n      type=\"button\"\n      aria-label=\"Close\"\n      onClick={onClick}\n    >\n      <div className={styles.tooltipText}>Close</div>\n    </button>\n  );\n};\n\nexport default memo(CloseButton);\n","export const dateFormatter = (dataCreated: Date): string => {\n  const day =\n    dataCreated.getDate() < 10\n      ? `0${dataCreated.getDate()}`\n      : dataCreated.getDate();\n\n  const month =\n    dataCreated.getMonth() < 9\n      ? `0${dataCreated.getMonth() + 1}`\n      : dataCreated.getMonth() + 1;\n\n  const year = dataCreated.getFullYear();\n\n  return `${day}.${month}.${year}`;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shlWrapper\":\"SearchHistoryList_shlWrapper__J1Ajn\",\"shlButton\":\"SearchHistoryList_shlButton__DY15Q\",\"clearButton\":\"SearchHistoryList_clearButton__dOJWU\",\"listHeader\":\"SearchHistoryList_listHeader__2KVtd\",\"hide\":\"SearchHistoryList_hide__3p1bp\"};","export const timeFormatter = (incomeDate: Date): string => {\n  const hour =\n    incomeDate.getHours() < 10\n      ? `0${incomeDate.getHours()}`\n      : incomeDate.getHours();\n\n  const minute =\n    incomeDate.getMinutes() < 10\n      ? `0${incomeDate.getMinutes()}`\n      : incomeDate.getMinutes();\n\n  const second =\n    incomeDate.getSeconds() < 10\n      ? `0${incomeDate.getSeconds()}`\n      : incomeDate.getSeconds();\n\n  return `${hour}:${minute}:${second}`;\n};\n","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport {\n  searchHistoryListFlag,\n  modalFlag,\n  userListOpenedFlag,\n  reposOpenedListFlag,\n} from '../../store/SearchReducer/actions';\nimport { searchSaga } from '../../store/SearchReducer/actionsSagas';\n\nimport CloseButton from '../../ui/CloseButton';\n\nimport { dateFormatter } from '../../utils/dateFormatter';\nimport { timeFormatter } from '../../utils/timeFormatter';\n\nimport { AppStateType } from '../../store/RootReducer';\nimport { FavoriteUser } from '../../store/FavoriteReduser/types';\nimport { ISearhHistoryItem } from '../../store/SearchReducer/types';\n\nimport styles from './SearchHistoryList.module.css';\n\nconst SearchHistoryList: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const searchList = useSelector<AppStateType, ISearhHistoryItem[]>(\n    (store) => store.search.searchHistory,\n  );\n  const favoritesList = useSelector<AppStateType, FavoriteUser[]>(\n    (store) => store.favorite.favoriteList,\n  );\n  const currentUserLogin = useSelector<AppStateType, string>(\n    (store) => store.search.user.login,\n  );\n  const userListOpened = useSelector<AppStateType, boolean>(\n    (store) => store.search.usersListOpened,\n  );\n  const reposListOpened = useSelector<AppStateType, boolean>(\n    (store) => store.search.reposListOpened,\n  );\n  const isMobile = useSelector<AppStateType, boolean>(\n    (store) => store.search.isMobile,\n  );\n  const loading = useSelector<AppStateType, boolean>(\n    (store) => store.search.loading,\n  );\n\n  const searchHistoriListBtnHandler = (login: string) => {\n    if (login === currentUserLogin) {\n      if (userListOpened) {\n        dispatch(userListOpenedFlag(false));\n      }\n      if (reposListOpened) {\n        dispatch(reposOpenedListFlag(false));\n      }\n      return;\n    }\n    dispatch(searchSaga(login, searchList, isMobile, favoritesList));\n  };\n\n  const closeBtnHandler = () => {\n    dispatch(searchHistoryListFlag(false));\n  };\n\n  const clearBtnHandler = () => {\n    dispatch(\n      modalFlag(\n        true,\n        `Are you sure to delete ${searchList.length > 1 ? 'all' : ''} ${\n          searchList.length > 1 ? `(${searchList.length})` : ''\n        } ${searchList.length > 1 ? 'items' : 'the item'} of search history?`,\n        'search',\n      ),\n    );\n  };\n\n  return (\n    <div\n      className={clsx(styles.shlWrapper, isMobile && loading && styles.hide)}\n    >\n      <header className={styles.listHeader}>\n        <h3>Search list</h3>\n        <CloseButton onClick={closeBtnHandler} />\n      </header>\n\n      <ol>\n        {searchList.map((el, i) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <li key={`${el.login} + ${i}`}>\n            <button\n              className={styles.shlButton}\n              type=\"button\"\n              onClick={() => searchHistoriListBtnHandler(el.login)}\n            >\n              {el.login}\n            </button>\n            <span>{` (${dateFormatter(\n              new Date(el.dateOfSearch),\n            )}, ${timeFormatter(new Date(el.dateOfSearch))})`}</span>\n          </li>\n        ))}\n      </ol>\n\n      <button\n        className={styles.clearButton}\n        type=\"button\"\n        onClick={clearBtnHandler}\n      >\n        Delete history\n      </button>\n    </div>\n  );\n};\n\nexport default memo(SearchHistoryList);\n"],"sourceRoot":""}