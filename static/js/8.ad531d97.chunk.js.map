{"version":3,"sources":["components/UserItem/UserItem.module.css","components/UsersList/UsersList.module.css","components/UserItem/UserItem.tsx","components/UsersList/UsersList.tsx"],"names":["module","exports","UserItem","user","dispatch","useDispatch","isMobile","useSelector","store","search","history","searchHistory","className","styles","userItemWrapper","userItemPhotoWrapper","src","avatar_url","alt","userInfo","userInfoUnit","type","onClick","searchSaga","login","memo","UsersList","users","usersList","requestType","lastRequestType","loading","clsx","listWrapper","hide","length","listWrapperUl","map","el","listError","listErrorLogin","userListOpenedFlag","reposOpenedListFlag","cardOpenedFlag","cardLogin"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,gBAAkB,kCAAkC,qBAAuB,uCAAuC,SAAW,2BAA2B,aAAe,iC,mBCAzLD,EAAOC,QAAU,CAAC,YAAc,+BAA+B,cAAgB,iCAAiC,UAAY,6BAA6B,eAAiB,kCAAkC,UAAY,6BAA6B,KAAO,0B,iJCUtPC,EAAgC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjCC,EAAWC,cAEXC,EAAWC,aACf,SAACC,GAAD,OAAWA,EAAMC,OAAOH,YAEpBI,EAAUH,aACd,SAACC,GAAD,OAAWA,EAAMC,OAAOE,iBAO1B,OACE,sBAAKC,UAAWC,IAAOC,gBAAvB,UACE,qBAAKF,UAAWC,IAAOE,qBAAvB,SACE,qBAAKC,IAAKb,EAAKc,WAAYC,IAAI,oBAGjC,qBAAKN,UAAWC,IAAOM,SAAvB,SACE,qBAAKP,UAAWC,IAAOO,aAAvB,SACE,wBAAQC,KAAK,SAASC,QAZP,WACrBlB,EAASmB,YAAWpB,EAAKqB,MAAOd,EAASJ,KAWnC,SACE,6BAAKH,EAAKqB,kBAQPC,iBAAKvB,G,iBC6BLwB,EAtDa,WAC1B,IAAMtB,EAAWC,cAEXsB,EAAQpB,aACZ,SAACC,GAAD,OAAWA,EAAMC,OAAOmB,aAEpBJ,EAAQjB,aACZ,SAACC,GAAD,OAAWA,EAAMC,OAAON,KAAKqB,SAEzBK,EAActB,aAClB,SAACC,GAAD,OAAWA,EAAMC,OAAOqB,mBAEpBC,EAAUxB,aACd,SAACC,GAAD,OAAWA,EAAMC,OAAOsB,WAS1B,OACE,qBAAKnB,UAAWoB,YAAKnB,IAAOoB,YAAaF,GAAWlB,IAAOqB,MAA3D,SACGP,EAAMQ,OACL,oBAAIvB,UAAWC,IAAOuB,cAAtB,SACGT,EAAMU,KAAI,SAACC,GAAD,OACT,6BACE,cAAC,EAAD,CAAUnC,KAAMmC,KADTA,EAAGd,YAMhB,qBAAKZ,UAAWC,IAAO0B,UAAvB,SACE,mDAEE,uBAAM3B,UAAWC,IAAO2B,eAAxB,UACG,IACD,wBACEnB,KAAK,SACLC,QAxBU,WACtBlB,EAASqC,aAAmB,IAC5BrC,EAASsC,aAAoB,IAC7BtC,EAASuC,aAAe,KAsBZ/B,UAAWC,IAAO+B,UAHpB,SAKGpB,IACO,OAVd,cAYkBK","file":"static/js/8.ad531d97.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userItemWrapper\":\"UserItem_userItemWrapper__2GDfe\",\"userItemPhotoWrapper\":\"UserItem_userItemPhotoWrapper__14XSX\",\"userInfo\":\"UserItem_userInfo__1dr7S\",\"userInfoUnit\":\"UserItem_userInfoUnit__UCmvR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listWrapper\":\"UsersList_listWrapper__3pjUv\",\"listWrapperUl\":\"UsersList_listWrapperUl__jxoPR\",\"listError\":\"UsersList_listError__3_KCr\",\"listErrorLogin\":\"UsersList_listErrorLogin__5_6ct\",\"cardLogin\":\"UsersList_cardLogin__36km4\",\"hide\":\"UsersList_hide__Au0Y2\"};","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { searchSaga } from '../../store/SearchReducer/actionsSagas';\n\nimport { IUserItem } from './types';\nimport { AppStateType } from '../../store/RootReducer';\nimport { ISearhHistoryItem } from '../../store/SearchReducer/types';\n\nimport styles from './UserItem.module.css';\n\nconst UserItem: React.FC<IUserItem> = ({ user }) => {\n  const dispatch = useDispatch();\n\n  const isMobile = useSelector<AppStateType, boolean>(\n    (store) => store.search.isMobile,\n  );\n  const history = useSelector<AppStateType, ISearhHistoryItem[]>(\n    (store) => store.search.searchHistory,\n  );\n\n  const itemBthHandler = () => {\n    dispatch(searchSaga(user.login, history, isMobile));\n  };\n\n  return (\n    <div className={styles.userItemWrapper}>\n      <div className={styles.userItemPhotoWrapper}>\n        <img src={user.avatar_url} alt=\"User's avatar\" />\n      </div>\n\n      <div className={styles.userInfo}>\n        <div className={styles.userInfoUnit}>\n          <button type=\"button\" onClick={itemBthHandler}>\n            <h2>{user.login}</h2>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UserItem);\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport {\n  cardOpenedFlag,\n  reposOpenedListFlag,\n  userListOpenedFlag,\n} from '../../store/SearchReducer/actions';\n\nimport { AppStateType } from '../../store/RootReducer';\nimport { UserInnerType } from '../../store/SearchReducer/types';\n\nimport UserItem from '../UserItem';\n\nimport styles from './UsersList.module.css';\n\nconst UsersList: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const users = useSelector<AppStateType, UserInnerType[]>(\n    (store) => store.search.usersList,\n  );\n  const login = useSelector<AppStateType, string>(\n    (store) => store.search.user.login,\n  );\n  const requestType = useSelector<AppStateType, string>(\n    (store) => store.search.lastRequestType,\n  );\n  const loading = useSelector<AppStateType, boolean>(\n    (store) => store.search.loading,\n  );\n\n  const loginBtnHandler = () => {\n    dispatch(userListOpenedFlag(false));\n    dispatch(reposOpenedListFlag(false));\n    dispatch(cardOpenedFlag(true));\n  };\n\n  return (\n    <div className={clsx(styles.listWrapper, loading && styles.hide)}>\n      {users.length ? (\n        <ul className={styles.listWrapperUl}>\n          {users.map((el: UserInnerType) => (\n            <li key={el.login}>\n              <UserItem user={el} />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div className={styles.listError}>\n          <h2>\n            It seems the user\n            <span className={styles.listErrorLogin}>\n              {' '}\n              <button\n                type=\"button\"\n                onClick={loginBtnHandler}\n                className={styles.cardLogin}\n              >\n                {login}\n              </button>{' '}\n            </span>\n            hasn&#39;t any {requestType}\n          </h2>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UsersList;\n"],"sourceRoot":""}