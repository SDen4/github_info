{"version":3,"sources":["components/UserItem/UserItem.module.css","components/UsersList/UsersList.module.css","components/UserItem/UserItem.tsx","components/UsersList/UsersList.tsx"],"names":["module","exports","UserItem","user","dispatch","useDispatch","isMobile","useSelector","store","search","history","searchHistory","Flex","className","styles","userItemWrapper","userItemPhotoWrapper","src","avatar_url","alt","loading","userInfoUnit","type","onClick","searchSaga","login","memo","UsersList","users","usersList","requestType","lastRequestType","clsx","listWrapper","hide","length","listWrapperUl","map","el","listError","listErrorLogin","userListOpenedFlag","reposOpenedListFlag","cardOpenedFlag","cardLogin"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,gBAAkB,kCAAkC,qBAAuB,uCAAuC,aAAe,iC,mBCAnJD,EAAOC,QAAU,CAAC,YAAc,+BAA+B,cAAgB,iCAAiC,UAAY,6BAA6B,eAAiB,kCAAkC,UAAY,6BAA6B,KAAO,0B,wJCkBtPC,EAA6B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC9BC,EAAWC,cAEXC,EAAWC,aACf,SAACC,GAAD,OAAWA,EAAMC,OAAOH,YAEpBI,EAAUH,aACd,SAACC,GAAD,OAAWA,EAAMC,OAAOE,iBAO1B,OACE,eAACC,EAAA,EAAD,CAAMC,UAAWC,IAAOC,gBAAxB,UACE,qBAAKF,UAAWC,IAAOE,qBAAvB,SACE,qBAAKC,IAAKd,EAAKe,WAAYC,IAAI,gBAAgBC,QAAQ,WAGzD,cAACR,EAAA,EAAD,CAAMC,UAAWC,IAAOO,aAAxB,SACE,wBAAQC,KAAK,SAASC,QAXL,WACrBnB,EAASoB,YAAWrB,EAAKsB,MAAOf,EAASJ,KAUrC,SACE,6BAAKH,EAAKsB,gBAOLC,iBAAKxB,G,iBC/BdyB,EAAsB,WAC1B,IAAMvB,EAAWC,cAEXuB,EAAQrB,aACZ,SAACC,GAAD,OAAWA,EAAMC,OAAOoB,aAEpBJ,EAAQlB,aACZ,SAACC,GAAD,OAAWA,EAAMC,OAAON,KAAKsB,SAEzBK,EAAcvB,aAClB,SAACC,GAAD,OAAWA,EAAMC,OAAOsB,mBAEpBX,EAAUb,aACd,SAACC,GAAD,OAAWA,EAAMC,OAAOW,WAS1B,OACE,qBAAKP,UAAWmB,YAAKlB,IAAOmB,YAAab,GAAWN,IAAOoB,MAA3D,SACGN,EAAMO,OACL,oBAAItB,UAAWC,IAAOsB,cAAtB,SACGR,EAAMS,KAAI,SAACC,GAAD,OACT,6BACE,cAAC,EAAD,CAAUnC,KAAMmC,KADTA,EAAGb,YAMhB,qBAAKZ,UAAWC,IAAOyB,UAAvB,SACE,mDAEE,uBAAM1B,UAAWC,IAAO0B,eAAxB,UACG,IACD,wBACElB,KAAK,SACLC,QAxBU,WACtBnB,EAASqC,aAAmB,IAC5BrC,EAASsC,aAAoB,IAC7BtC,EAASuC,aAAe,KAsBZ9B,UAAWC,IAAO8B,UAHpB,SAKGnB,IACO,OAVd,cAYkBK,UAQbJ,iBAAKC","file":"static/js/8.242fad27.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userItemWrapper\":\"UserItem_userItemWrapper__2GDfe\",\"userItemPhotoWrapper\":\"UserItem_userItemPhotoWrapper__14XSX\",\"userInfoUnit\":\"UserItem_userInfoUnit__UCmvR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listWrapper\":\"UsersList_listWrapper__3pjUv\",\"listWrapperUl\":\"UsersList_listWrapperUl__jxoPR\",\"listError\":\"UsersList_listError__3_KCr\",\"listErrorLogin\":\"UsersList_listErrorLogin__5_6ct\",\"cardLogin\":\"UsersList_cardLogin__36km4\",\"hide\":\"UsersList_hide__Au0Y2\"};","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Flex } from '../../ui/Flex';\n\nimport { searchSaga } from '../../store/SearchReducer/actionsSagas';\n\nimport { AppStateType } from '../../store/RootReducer';\nimport {\n  ISearhHistoryItem,\n  UserInnerType,\n} from '../../store/SearchReducer/types';\n\nimport styles from './UserItem.module.css';\n\nexport interface IProps {\n  user: UserInnerType;\n}\n\nconst UserItem: React.FC<IProps> = ({ user }) => {\n  const dispatch = useDispatch();\n\n  const isMobile = useSelector<AppStateType, boolean>(\n    (store) => store.search.isMobile,\n  );\n  const history = useSelector<AppStateType, ISearhHistoryItem[]>(\n    (store) => store.search.searchHistory,\n  );\n\n  const itemBthHandler = () => {\n    dispatch(searchSaga(user.login, history, isMobile));\n  };\n\n  return (\n    <Flex className={styles.userItemWrapper}>\n      <div className={styles.userItemPhotoWrapper}>\n        <img src={user.avatar_url} alt=\"User's avatar\" loading=\"lazy\" />\n      </div>\n\n      <Flex className={styles.userInfoUnit}>\n        <button type=\"button\" onClick={itemBthHandler}>\n          <h2>{user.login}</h2>\n        </button>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default memo(UserItem);\n","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport {\n  cardOpenedFlag,\n  reposOpenedListFlag,\n  userListOpenedFlag,\n} from '../../store/SearchReducer/actions';\n\nimport { AppStateType } from '../../store/RootReducer';\nimport { UserInnerType } from '../../store/SearchReducer/types';\n\nimport UserItem from '../UserItem';\n\nimport styles from './UsersList.module.css';\n\nconst UsersList: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const users = useSelector<AppStateType, UserInnerType[]>(\n    (store) => store.search.usersList,\n  );\n  const login = useSelector<AppStateType, string>(\n    (store) => store.search.user.login,\n  );\n  const requestType = useSelector<AppStateType, string>(\n    (store) => store.search.lastRequestType,\n  );\n  const loading = useSelector<AppStateType, boolean>(\n    (store) => store.search.loading,\n  );\n\n  const loginBtnHandler = () => {\n    dispatch(userListOpenedFlag(false));\n    dispatch(reposOpenedListFlag(false));\n    dispatch(cardOpenedFlag(true));\n  };\n\n  return (\n    <div className={clsx(styles.listWrapper, loading && styles.hide)}>\n      {users.length ? (\n        <ul className={styles.listWrapperUl}>\n          {users.map((el: UserInnerType) => (\n            <li key={el.login}>\n              <UserItem user={el} />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div className={styles.listError}>\n          <h2>\n            It seems the user\n            <span className={styles.listErrorLogin}>\n              {' '}\n              <button\n                type=\"button\"\n                onClick={loginBtnHandler}\n                className={styles.cardLogin}\n              >\n                {login}\n              </button>{' '}\n            </span>\n            hasn&#39;t any {requestType}\n          </h2>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(UsersList);\n"],"sourceRoot":""}