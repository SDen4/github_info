{"version":3,"sources":["components/Note/Note.tsx","components/Note/Note.module.css"],"names":["Note","dispatch","useDispatch","ref","useRef","note","useSelector","store","favorite","login","search","user","favorites","favoriteList","useEffect","current","focus","useState","value","setValue","isModalOpened","setIsModalOpened","onBtnModalHandler","action","newfavoriteUserList","map","el","name","localStorage","setItem","JSON","stringify","noteSave","fetchFavoriteList","noteFlag","noteBtnFlag","className","styles","component","form","onSubmit","event","preventDefault","find","newfavoriteUser","findUser","index","indexOf","newFavorites","fetchFavoriteListAdd","favoriteUserFlag","setFavoriteBtnFlag","onChange","target","trim","formFooter","lettersQuantity","length","btnsWrapper","type","onClick","buttonDel","clsx","buttonUnactive","disabled","noteModal","colorText","btnsModalWrapper","memo","module","exports"],"mappings":"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","file":"static/js/10.7f798d42.chunk.js","sourcesContent":["import React, { memo, useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\n\nimport {\n  favoriteUserFlag,\n  fetchFavoriteList,\n  fetchFavoriteListAdd,\n  noteBtnFlag,\n  noteFlag,\n  noteSave,\n  setFavoriteBtnFlag,\n} from '../../store/FavoriteReduser/actions';\n\nimport { AppStateType } from '../../store/RootReducer';\nimport { FavoriteUser } from '../../store/FavoriteReduser/types';\n\nimport styles from './Note.module.css';\n\nconst Note: React.FC = () => {\n  const dispatch = useDispatch();\n  const ref: any = useRef();\n\n  const note = useSelector<AppStateType, string>(\n    (store) => store.favorite.note,\n  );\n  const login = useSelector<AppStateType, string>(\n    (store) => store.search.user.login,\n  );\n  const favorites = useSelector<AppStateType, FavoriteUser[]>(\n    (store) => store.favorite.favoriteList,\n  );\n\n  useEffect(() => {\n    ref.current.focus();\n  }, []);\n\n  const [value, setValue] = useState<string>(note);\n  const [isModalOpened, setIsModalOpened] = useState<boolean>(false);\n\n  const onChangeHandler: React.ChangeEventHandler<HTMLTextAreaElement> = (\n    event,\n  ) => {\n    if (!event.target.value.trim()) {\n      return;\n    }\n    setValue(event.target.value);\n  };\n\n  const onCancelHandler = () => {\n    dispatch(noteFlag(false));\n    setValue('');\n  };\n\n  const onSubmitHandler = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    if (favorites.find((el) => el.name === login)) {\n      // user is in favorites yet\n\n      dispatch(noteSave(value));\n      dispatch(noteFlag(false));\n      dispatch(noteBtnFlag(true));\n      setValue('');\n\n      const newfavoriteUser = { name: login, note: value };\n      const findUser: any = favorites.find((el) => el.name === login);\n      const index = favorites.indexOf(findUser);\n      const newFavorites = [...favorites];\n      newFavorites[index] = newfavoriteUser;\n\n      dispatch(fetchFavoriteList(newFavorites));\n      localStorage.setItem('favorite', JSON.stringify(newFavorites));\n    } else {\n      // user isn't in favorites yet\n\n      dispatch(noteSave(value));\n      dispatch(noteFlag(false));\n      dispatch(noteBtnFlag(true));\n      setValue('');\n\n      const newfavoriteUser = { name: login, note: value };\n      dispatch(fetchFavoriteListAdd(newfavoriteUser));\n      localStorage.setItem(\n        'favorite',\n        JSON.stringify([...favorites, newfavoriteUser]),\n      );\n\n      dispatch(favoriteUserFlag(true));\n      dispatch(setFavoriteBtnFlag(true));\n    }\n  };\n\n  const onBtnModalHandler = (action: boolean) => {\n    if (action) {\n      setValue('');\n\n      const newfavoriteUserList = favorites.map((el) => {\n        if (el.name === login) {\n          return { name: login };\n        }\n        return el;\n      });\n\n      localStorage.setItem('favorite', JSON.stringify(newfavoriteUserList));\n\n      dispatch(noteSave(''));\n      dispatch(fetchFavoriteList(newfavoriteUserList));\n      dispatch(noteFlag(false));\n      dispatch(noteBtnFlag(false));\n    } else {\n      setIsModalOpened(false);\n    }\n  };\n\n  return (\n    <div className={styles.component}>\n      <form className={styles.form} onSubmit={onSubmitHandler}>\n        <textarea onChange={onChangeHandler} value={value} ref={ref} />\n\n        <footer className={styles.formFooter}>\n          <div className={styles.lettersQuantity}>\n            {value.length ? `Characters: ${value.length}` : ''}\n          </div>\n          <div className={styles.btnsWrapper}>\n            <button type=\"button\" onClick={onCancelHandler}>\n              Cancel\n            </button>\n\n            {value && (\n              <button\n                type=\"button\"\n                className={styles.buttonDel}\n                onClick={() => setIsModalOpened(true)}\n              >\n                Delete\n              </button>\n            )}\n\n            <button\n              type=\"submit\"\n              className={clsx(!value && styles.buttonUnactive)}\n              disabled={!value}\n            >\n              Save and add to favorites\n            </button>\n          </div>\n        </footer>\n      </form>\n\n      {isModalOpened && (\n        <div className={styles.noteModal}>\n          <span>\n            Are you sure to delete the note of{' '}\n            <span className={styles.colorText}>{login}</span>?\n          </span>\n          <div className={styles.btnsModalWrapper}>\n            <button type=\"button\" onClick={() => onBtnModalHandler(true)}>\n              Delete\n            </button>\n            <button type=\"button\" onClick={() => onBtnModalHandler(false)}>\n              Cansel\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Note);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Note_component__2ReX3\",\"form\":\"Note_form__1QeoF\",\"buttonDel\":\"Note_buttonDel__1VWzk\",\"buttonUnactive\":\"Note_buttonUnactive__2L99q\",\"btnsWrapper\":\"Note_btnsWrapper__cu-GV\",\"noteModal\":\"Note_noteModal__3sCjR\",\"btnsModalWrapper\":\"Note_btnsModalWrapper__2Ig-U\",\"colorText\":\"Note_colorText__1zhac\",\"formFooter\":\"Note_formFooter__2rJSt\",\"lettersQuantity\":\"Note_lettersQuantity__36I7a\"};"],"sourceRoot":""}