{"version":3,"sources":["store/SearchReducer/constants.ts","store/SearchReducer/SearchReducer.ts","store/RootReducer.ts","store/SearchReducer/actions.ts","api/API.ts","store/SearchReducer/sagas/SearchSaga.ts","store/RootSaga.ts","utils/dateFormatter.ts","components/Card/Card.tsx","ui/SubmitButton/SubmitButton.tsx","components/SearchForm/SearchForm.tsx","ui/Loader/Loader.tsx","view/Root/Root.tsx","App/App.tsx","index.tsx"],"names":["SEARCH_LOGIN_SAGA","FETCH_LOGIN","CARD_OPEN_FLAG","LOADING","initialState","user","name","login","followersUrl","followingUrl","avatarUrl","followersNum","followingNum","dataCreated","Date","cardOpened","loading","RootReducer","combineReducers","search","state","action","type","followers_url","following_url","avatar_url","followers","following","created_at","cardOPenedFlag","loadingFlag","API","axios","create","baseURL","sagaWorker","SearchSagaWatcher","getUserInfo","a","get","then","res","data","response","put","allData","console","log","takeEvery","rootSaga","all","fork","dateFormatter","day","getDate","month","getMonth","year","getFullYear","Card","dispatch","useDispatch","className","src","alt","href","onClick","SubmitButton","children","disabled","clsx","SearchForm","useState","searchLogin","setsearchLogin","disabledBtn","setDisabledBtn","ref","useRef","useEffect","current","focus","onSubmit","event","preventDefault","placeholder","value","onChange","textValue","target","trim","Loader","Root","storeData","useSelector","store","App","saga","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","RootSaga","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da862ff7.chunk.js","sourcesContent":["export const SEARCH_LOGIN_SAGA = 'SEARCH_LOGIN_SAGA';\n\nexport const FETCH_LOGIN = 'FETCH_LOGIN';\n\nexport const CARD_OPEN_FLAG = 'CARD_OPEN_FLAG';\n\nexport const LOADING = 'LOADING';\n","import { FETCH_LOGIN, CARD_OPEN_FLAG, LOADING } from './constants';\n\nimport { InitialStateType } from './types';\n\nimport { ActionsType } from './actions';\n\nconst initialState: InitialStateType = {\n  user: {\n    name: '',\n    login: '',\n    followersUrl: '',\n    followingUrl: '',\n    avatarUrl: '',\n    followersNum: 0,\n    followingNum: 0,\n    dataCreated: new Date(),\n  },\n  cardOpened: false,\n  loading: false,\n};\n\nexport const SearchReducer = (\n  state = initialState,\n  action: ActionsType,\n): typeof state => {\n  switch (action.type) {\n    case FETCH_LOGIN:\n      return {\n        ...state,\n        user: {\n          name: action.name,\n          login: action.login,\n          followersUrl: action.followers_url,\n          followingUrl: action.following_url,\n          avatarUrl: action.avatar_url,\n          followersNum: action.followers,\n          followingNum: action.following,\n          dataCreated: action.created_at,\n        },\n      };\n\n    case CARD_OPEN_FLAG:\n      return {\n        ...state,\n        cardOpened: action.cardOPenedFlag,\n      };\n\n    case LOADING:\n      return {\n        ...state,\n        loading: action.loadingFlag,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { SearchReducer } from './SearchReducer/SearchReducer';\n\nexport const RootReducer = combineReducers({\n  search: SearchReducer,\n});\n\nexport type AppStateType = ReturnType<typeof RootReducer>;\n","/* eslint-disable camelcase */\nimport {\n  SEARCH_LOGIN_SAGA,\n  FETCH_LOGIN,\n  CARD_OPEN_FLAG,\n  LOADING,\n} from './constants';\n\nexport const searchSaga = (login: string) => {\n  return {\n    type: SEARCH_LOGIN_SAGA,\n    login,\n  } as const;\n};\n\nexport const fetchLogin = (\n  name: string,\n  login: string,\n  followers_url: string,\n  following_url: string,\n  followers: number,\n  following: number,\n  created_at: Date,\n  avatar_url?: string,\n) => {\n  return {\n    type: FETCH_LOGIN,\n    name,\n    login,\n    followers_url,\n    following_url,\n    followers,\n    following,\n    created_at,\n    avatar_url,\n  } as const;\n};\n\nexport const cardOPenedFlag = (cardOPenedFlag: boolean) => {\n  return {\n    type: CARD_OPEN_FLAG,\n    cardOPenedFlag,\n  } as const;\n};\n\nexport const loadingFlag = (loadingFlag: boolean) => {\n  return {\n    type: LOADING,\n    loadingFlag,\n  } as const;\n};\n\ntype searchSagaType = ReturnType<typeof searchSaga>;\ntype fetchLoginType = ReturnType<typeof fetchLogin>;\ntype cardOPenedFlagType = ReturnType<typeof cardOPenedFlag>;\ntype loadingFlagType = ReturnType<typeof loadingFlag>;\n\nexport type ActionsType =\n  | searchSagaType\n  | fetchLoginType\n  | cardOPenedFlagType\n  | loadingFlagType;\n","import axios from 'axios';\n\nexport const API = axios.create({\n  baseURL: 'https://api.github.com/users/',\n});\n","import { takeEvery, put } from 'redux-saga/effects';\n\nimport { SEARCH_LOGIN_SAGA } from '../constants';\nimport { cardOPenedFlag, fetchLogin, loadingFlag } from '../actions';\nimport { SearchSagaWorkerType, UserInnerType } from '../types';\n\nimport { API } from '../../../api/API';\n\nasync function getUserInfo(login: string) {\n  const response = await API.get(`${login}`).then((res) => res.data);\n  return response;\n}\n\nfunction* sagaWorker(action: SearchSagaWorkerType) {\n  try {\n    yield put(cardOPenedFlag(false));\n    yield put(loadingFlag(true));\n\n    const allData: UserInnerType = yield getUserInfo(action.login);\n    // eslint-disable-next-line no-console\n    console.log(allData);\n\n    yield put(\n      fetchLogin(\n        allData.name,\n        allData.login,\n        allData.followers_url,\n        allData.following_url,\n        allData.followers,\n        allData.following,\n        new Date(allData.created_at),\n        allData.avatar_url,\n      ),\n    );\n\n    yield put(loadingFlag(false));\n    yield put(cardOPenedFlag(true));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n  }\n}\n\nexport function* SearchSagaWatcher() {\n  yield takeEvery(SEARCH_LOGIN_SAGA, sagaWorker);\n}\n","import { fork, all } from 'redux-saga/effects';\nimport { SearchSagaWatcher } from './SearchReducer/sagas/SearchSaga';\n\nexport default function* rootSaga() {\n  yield all([fork(SearchSagaWatcher)]);\n}\n","export const dateFormatter = (dataCreated: Date) => {\n  const day =\n    dataCreated.getDate() < 10\n      ? `0${dataCreated.getDate()}`\n      : dataCreated.getDate();\n\n  const month =\n    dataCreated.getMonth() < 10\n      ? `0${dataCreated.getMonth() + 1}`\n      : dataCreated.getMonth() + 1;\n\n  const year = dataCreated.getFullYear();\n\n  return ` ${day}.${month}.${year}`;\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { dateFormatter } from '../../utils/dateFormatter';\n\nimport { cardOPenedFlag } from '../../store/SearchReducer/actions';\n\nimport { CardType } from './types';\n\nimport './styles.css';\n\nconst Card: React.FC<CardType> = ({ user }) => {\n  const dispatch = useDispatch();\n\n  const onClickCloseBtnHandler = () => {\n    dispatch(cardOPenedFlag(false));\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card_element\">\n        <div className=\"card_photo_wrapper\">\n          <img src={user.avatarUrl} alt=\"User's avatar\" />\n        </div>\n      </div>\n\n      <div className=\"card_element\">\n        <div className=\"card_sub_element\">\n          <h2>\n            {user.name} ({user.login})\n          </h2>\n        </div>\n\n        <div className=\"card_followers_wrapper\">\n          <div className=\"card_followers_unit\">\n            <span>Followers:</span>\n            <a href=\"?\">{user.followersNum}</a>\n          </div>\n\n          <div className=\"card_followers_unit\">\n            <span>Following:</span>\n            <a href=\"?\">{user.followingNum}</a>\n          </div>\n        </div>\n\n        <div className=\"card_sub_element\">\n          <span>Created at &nbsp;</span>\n          <div className=\"card_user_info\">\n            {dateFormatter(user.dataCreated)}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"card_close_btn_wrapper\">\n        <button\n          className=\"card_close_btn\"\n          type=\"button\"\n          aria-label=\"Close\"\n          onClick={onClickCloseBtnHandler}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport { IButton } from './types';\n\nimport './styles.css';\n\nconst SubmitButton: React.FC<IButton> = ({ children, disabled }) => {\n  return (\n    <button\n      className={clsx(disabled && 'button_unactive', 'button')}\n      type=\"submit\"\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default SubmitButton;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { searchSaga } from '../../store/SearchReducer/actions';\n\nimport SubmitButton from '../../ui/SubmitButton';\n\nimport './styles.css';\n\nconst SearchForm: React.FC = () => {\n  const [searchLogin, setsearchLogin] = useState<string>('');\n  const [disabledBtn, setDisabledBtn] = useState(true);\n  const dispatch = useDispatch();\n\n  // auto focus on input\n  const ref: any = useRef(null);\n  useEffect(() => {\n    ref.current.focus();\n  }, []);\n\n  const changeTextHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let textValue = event?.target.value;\n    setsearchLogin(textValue);\n\n    if (textValue.trim()) {\n      setDisabledBtn(false);\n    } else {\n      setDisabledBtn(true);\n    }\n  };\n\n  const onSubmitHandler = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    dispatch(searchSaga(searchLogin));\n    setsearchLogin('');\n    setDisabledBtn(true);\n  };\n\n  return (\n    <form className=\"form\" onSubmit={onSubmitHandler}>\n      <input\n        ref={ref}\n        className=\"input\"\n        type=\"text\"\n        placeholder=\"Enter the github login\"\n        value={searchLogin}\n        onChange={changeTextHandler}\n      />\n      <SubmitButton disabled={disabledBtn}>Search</SubmitButton>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import React from 'react';\n\nimport './styles.css';\n\nconst Loader: React.FC = () => {\n  return (\n    <div className=\"loader_wrapper\">\n      <div className=\"lds-default\">\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Card from '../../components/Card';\nimport SearchForm from '../../components/SearchForm';\nimport Loader from '../../ui/Loader';\n\nimport { AppStateType } from '../../store/RootReducer';\n// import { SearchReducer } from '../../store/SearchReducer/SearchReducer';\n\nimport './styles.css';\n\nconst Root: React.FC = () => {\n  const storeData = useSelector<AppStateType, any>((store) => store.search);\n\n  return (\n    <div className=\"root_wrapper\">\n      <header className=\"root_header\">Find github&apos;s user</header>\n      <section className=\"root_section\">\n        <SearchForm />\n      </section>\n\n      <section className=\"root_section\">\n        {storeData.loading && <Loader />}\n        {storeData.cardOpened && <Card user={storeData.user} />}\n      </section>\n    </div>\n  );\n};\n\nexport default Root;\n","import React from 'react';\n\nimport Root from '../view/Root';\n\nimport './styles.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Root />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { RootReducer } from './store/RootReducer';\nimport RootSaga from './store/RootSaga';\n\nimport App from './App';\nimport './index.css';\n\nconst saga = createSagaMiddleware();\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(RootReducer, composeEnhancers(applyMiddleware(saga)));\n\nsaga.run(RootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}